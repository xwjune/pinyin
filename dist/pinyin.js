/*! v1.0.2 | Copyright © 小巷 <xwjune@163.com> | All rights reserved. */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["pinyinUtil"] = factory();
	else
		root["pinyinUtil"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./dist.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist.js":
/*!*****************!*\
  !*** ./dist.js ***!
  \*****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./src */ \"./src/index.js\").default;\n\n//# sourceURL=webpack://pinyinUtil/./dist.js?");

/***/ }),

/***/ "./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/assign.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/assign.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! core-js/library/fn/object/assign */ \"./node_modules/_core-js@2.6.5@core-js/library/fn/object/assign.js\");\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/assign.js?");

/***/ }),

/***/ "./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/define-property.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/define-property.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! core-js/library/fn/object/define-property */ \"./node_modules/_core-js@2.6.5@core-js/library/fn/object/define-property.js\");\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/define-property.js?");

/***/ }),

/***/ "./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/defineProperty.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/defineProperty.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _Object$defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ \"./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/define-property.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/defineProperty.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/fn/object/assign.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/fn/object/assign.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../../modules/es6.object.assign */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.assign.js\");\nmodule.exports = __webpack_require__(/*! ../../modules/_core */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_core.js\").Object.assign;\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/fn/object/assign.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/fn/object/define-property.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/fn/object/define-property.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../../modules/es6.object.define-property */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.define-property.js\");\nvar $Object = __webpack_require__(/*! ../../modules/_core */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_core.js\").Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/fn/object/define-property.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_a-function.js":
/*!****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_a-function.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_a-function.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_an-object.js":
/*!***************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_an-object.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_is-object.js\");\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_an-object.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_array-includes.js":
/*!********************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_array-includes.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(/*! ./_to-iobject */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-iobject.js\");\nvar toLength = __webpack_require__(/*! ./_to-length */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-length.js\");\nvar toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-absolute-index.js\");\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_array-includes.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_cof.js":
/*!*********************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_cof.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_cof.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_core.js":
/*!**********************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_core.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_core.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_ctx.js":
/*!*********************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_ctx.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// optional / simple context binding\nvar aFunction = __webpack_require__(/*! ./_a-function */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_a-function.js\");\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_ctx.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_defined.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_defined.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_defined.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_descriptors.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_descriptors.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(/*! ./_fails */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_fails.js\")(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_descriptors.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_dom-create.js":
/*!****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_dom-create.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_is-object.js\");\nvar document = __webpack_require__(/*! ./_global */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_global.js\").document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_dom-create.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_enum-bug-keys.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_enum-bug-keys.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_enum-bug-keys.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_export.js":
/*!************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_export.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var global = __webpack_require__(/*! ./_global */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_global.js\");\nvar core = __webpack_require__(/*! ./_core */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_core.js\");\nvar ctx = __webpack_require__(/*! ./_ctx */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_ctx.js\");\nvar hide = __webpack_require__(/*! ./_hide */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_hide.js\");\nvar has = __webpack_require__(/*! ./_has */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_has.js\");\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_export.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_fails.js":
/*!***********************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_fails.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_fails.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_global.js":
/*!************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_global.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_global.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_has.js":
/*!*********************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_has.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_has.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_hide.js":
/*!**********************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_hide.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var dP = __webpack_require__(/*! ./_object-dp */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_object-dp.js\");\nvar createDesc = __webpack_require__(/*! ./_property-desc */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_property-desc.js\");\nmodule.exports = __webpack_require__(/*! ./_descriptors */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_descriptors.js\") ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_hide.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_ie8-dom-define.js":
/*!********************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_ie8-dom-define.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = !__webpack_require__(/*! ./_descriptors */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_descriptors.js\") && !__webpack_require__(/*! ./_fails */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_fails.js\")(function () {\n  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_dom-create.js\")('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_ie8-dom-define.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_iobject.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_iobject.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(/*! ./_cof */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_cof.js\");\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_iobject.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_is-object.js":
/*!***************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_is-object.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_is-object.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_library.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_library.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = true;\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_library.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_object-assign.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_object-assign.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = __webpack_require__(/*! ./_object-keys */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys.js\");\nvar gOPS = __webpack_require__(/*! ./_object-gops */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_object-gops.js\");\nvar pIE = __webpack_require__(/*! ./_object-pie */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_object-pie.js\");\nvar toObject = __webpack_require__(/*! ./_to-object */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-object.js\");\nvar IObject = __webpack_require__(/*! ./_iobject */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_iobject.js\");\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(/*! ./_fails */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_fails.js\")(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_object-assign.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_object-dp.js":
/*!***************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_object-dp.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_an-object.js\");\nvar IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_ie8-dom-define.js\");\nvar toPrimitive = __webpack_require__(/*! ./_to-primitive */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-primitive.js\");\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(/*! ./_descriptors */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_descriptors.js\") ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_object-dp.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_object-gops.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_object-gops.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.f = Object.getOwnPropertySymbols;\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_object-gops.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys-internal.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys-internal.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var has = __webpack_require__(/*! ./_has */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_has.js\");\nvar toIObject = __webpack_require__(/*! ./_to-iobject */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-iobject.js\");\nvar arrayIndexOf = __webpack_require__(/*! ./_array-includes */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_array-includes.js\")(false);\nvar IE_PROTO = __webpack_require__(/*! ./_shared-key */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_shared-key.js\")('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys-internal.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(/*! ./_object-keys-internal */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys-internal.js\");\nvar enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_enum-bug-keys.js\");\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_object-keys.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_object-pie.js":
/*!****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_object-pie.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.f = {}.propertyIsEnumerable;\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_object-pie.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_property-desc.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_property-desc.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_property-desc.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_shared-key.js":
/*!****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_shared-key.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var shared = __webpack_require__(/*! ./_shared */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_shared.js\")('keys');\nvar uid = __webpack_require__(/*! ./_uid */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_uid.js\");\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_shared-key.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_shared.js":
/*!************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_shared.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var core = __webpack_require__(/*! ./_core */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_core.js\");\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_global.js\");\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(/*! ./_library */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_library.js\") ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_shared.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_to-absolute-index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_to-absolute-index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var toInteger = __webpack_require__(/*! ./_to-integer */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-integer.js\");\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_to-absolute-index.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_to-integer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_to-integer.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_to-integer.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_to-iobject.js":
/*!****************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_to-iobject.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(/*! ./_iobject */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_iobject.js\");\nvar defined = __webpack_require__(/*! ./_defined */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_defined.js\");\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_to-iobject.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_to-length.js":
/*!***************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_to-length.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(/*! ./_to-integer */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_to-integer.js\");\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_to-length.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_to-object.js":
/*!***************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_to-object.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(/*! ./_defined */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_defined.js\");\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_to-object.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_to-primitive.js":
/*!******************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_to-primitive.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_is-object.js\");\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_to-primitive.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/_uid.js":
/*!*********************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/_uid.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/_uid.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.assign.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.assign.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_export.js\");\n\n$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_object-assign.js\") });\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.assign.js?");

/***/ }),

/***/ "./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.define-property.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.define-property.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $export = __webpack_require__(/*! ./_export */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_export.js\");\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_descriptors.js\"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ \"./node_modules/_core-js@2.6.5@core-js/library/modules/_object-dp.js\").f });\n\n\n//# sourceURL=webpack://pinyinUtil/./node_modules/_core-js@2.6.5@core-js/library/modules/es6.object.define-property.js?");

/***/ }),

/***/ "./src/dict_city_polyphone.js":
/*!************************************!*\
  !*** ./src/dict_city_polyphone.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * 字典文件【城市多音字】\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  朝阳: 'cháo,yáng',\n  蔚县: 'yù,xiàn',\n  单县: 'shàn,xiàn',\n  莘县: 'shēn,xiàn',\n  浚县: 'xùn,xiàn',\n  歙县: 'shè,xiàn',\n  六合: 'lù,hé',\n  六安: 'lù,ān',\n  大城: 'dài,chéng',\n  大埔: 'dà,bù',\n  乐亭: 'lào,tíng',\n  乐清: 'yuè,qīng',\n  绥棱: 'suí,líng',\n  穆棱: 'mù,líng',\n  长子: 'zhǎng,zǐ',\n  洪洞: 'hóng,tóng',\n  闵行: 'mǐn,háng',\n  蚌埠: 'bèng,bù',\n  涡阳: 'guō,yáng',\n  铅山: 'yán,shān',\n  东阿: 'dōng,ē',\n  牟平: 'mù,píng',\n  渑池: 'miǎn,chí',\n  泌阳: 'bì,yáng',\n  黄陂: 'huáng,pí',\n  番禺: 'pān,yú',\n  重庆: 'chóng,qìng',\n  筠连: 'jūn,lián',\n  犍为: 'qián,wéi',\n  吴堡: 'wú,bǔ',\n  尉犁: 'yù,lí',\n  西藏: 'xī,zhàng',\n  调兵山: 'diào,bīng,shān',\n  延边朝鲜族: 'yán,biān,cháo,xiǎn,zú',\n  长白朝鲜族: 'cháng,bái,cháo,xiǎn,zú'\n});\n\n//# sourceURL=webpack://pinyinUtil/./src/dict_city_polyphone.js?");

/***/ }),

/***/ "./src/dictionary.js":
/*!***************************!*\
  !*** ./src/dictionary.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * 字典文件\n * Unicode字符中4E00(19968)-9FA5(40869)共计20902\n */\nvar dictionary = 'yī,dīng,kǎo,qī,shàng,xià,hǎn,wàn,zhàng,sān,shàng,xià,qí,bù,yǔ,miǎn,gài,chǒu,chǒu,zhuān,qiě,pī,shì,shì,qiū,bǐng,yè,cóng,dōng,sī,chéng,diū,qiū,liǎng,diū,yǒu,liǎng,yán,bìng,sāng,gǔn,jiū,gè,yā,pán,zhōng,jǐ,jiè,fēng,guàn,chuàn,chǎn,lín,zhuó,zhǔ,bā,wán,dān,wéi,zhǔ,jǐng,lì,jǔ,piě,fú,yí,yì,nǎi,wǔ,jiǔ,jiǔ,tuō,me,yì,yī,zhī,wū,zhà,hū,fá,lè,yín,pīng,pāng,qiáo,hǔ,guāi,chéng,chéng,yǐ,háo,yǐ,miē,jiǔ,qǐ,yě,xí,xiāng,gài,jiǔ,xià,hù,shū,dǒu,shǐ,jī,náng,jiā,none,shí,none,hū,mǎi,luàn,none,rǔ,xué,yǎn,fǔ,shā,nǎ,qián,suǒ,yú,zhù,zhě,qián,zhì,guī,qián,luàn,lǐn,yì,jué,le,gè,yú,zhēng,shì,shì,èr,chù,yú,kuī,yú,yún,hù,qí,wǔ,jǐng,sì,suì,gèn,gèn,yà,xiē,yà,qí,yā,jí,tóu,wáng,kàng,dà,jiāo,hài,yì,chǎn,hēng,mǔ,ye,xiǎng,jīng,tíng,liàng,xiǎng,jīng,yè,qīn,bó,yòu,xiè,dǎn,lián,duǒ,wěi,rén,rén,jí,jí,wáng,yì,shén,rén,lè,dīng,zè,jǐn,pū,chóu,bā,zhǎng,jīn,jiè,bīng,réng,cóng,fó,jīn,lún,bīng,cāng,zī,shì,tā,zhàng,fù,xiān,xiān,tuō,hóng,tóng,rèn,qiān,gǎn,yì,bó,dài,líng,yǐ,chào,cháng,sā,cháng,yí,mù,mén,rèn,fǎn,chào,yǎng,qián,zhòng,pǐ,wò,wǔ,jiàn,jià,yǎo,fēng,cāng,rèn,wáng,fèn,dī,fǎng,zhōng,qǐ,pèi,yú,diào,dùn,wěn,yì,xǐn,kàng,yī,jí,ài,wǔ,jì,fú,fá,xiū,jìn,pī,dǎn,fū,tǎng,zhòng,yōu,huǒ,huì,yǔ,cuì,yún,sǎn,wěi,chuán,chē,yá,qiàn,shāng,chāng,lún,cāng,xùn,xìn,wěi,zhù,chǐ,xián,nú,bó,gū,nǐ,nǐ,xiè,bàn,xù,líng,zhòu,shēn,qū,sì,bēng,sì,qié,pī,yì,sì,yǐ,zhēng,diàn,hān,mài,dàn,zhù,bù,qū,bǐ,zhāo,cǐ,wèi,dī,zhù,zuǒ,yòu,yǎng,tǐ,zhàn,hé,bì,tuó,shé,yú,yì,fó,zuò,gōu,nìng,tóng,nǐ,xiān,qú,yōng,wǎ,qiān,yòu,kǎ,bāo,pèi,huí,gé,lǎo,xiáng,gé,yáng,bǎi,fǎ,mǐng,jiā,èr,bìng,jí,hěn,huó,guǐ,quán,tiāo,jiǎo,cì,yì,shǐ,xíng,shēn,tuō,kǎn,zhí,gāi,lái,yí,chǐ,kuǎ,gōng,lì,yīn,shì,mǐ,zhū,xù,yòu,ān,lù,móu,ér,lún,dòng,chà,chì,xùn,gōng,zhōu,yī,rú,cún,xiá,sì,dài,lǚ,ta,jiǎo,zhēn,cè,qiáo,kuài,chái,nìng,nóng,jǐn,wǔ,hóu,jiǒng,chěng,zhèn,zuò,hào,qīn,lǚ,jú,shù,tǐng,shèn,tuó,bó,nán,xiāo,biàn,tuǐ,yǔ,xì,cù,é,qiú,xú,guàng,kù,wù,jùn,yì,fǔ,liáng,zǔ,qiào,lì,yǒng,hùn,jìng,qiàn,sàn,pěi,sú,fú,xī,lǐ,fǔ,pīng,bǎo,yú,sì,xiá,xìn,xiū,yǔ,dì,chē,chóu,zhì,yǎn,liǎ,lì,lái,sī,jiǎn,xiū,fǔ,huò,jù,xiào,pái,jiàn,biào,chù,fèi,fèng,yà,ǎn,bèi,yù,xīn,bǐ,hǔ,chāng,zhī,bìng,jiù,yáo,cuì,liǎ,wǎn,lái,cāng,zǒng,gè,guān,bèi,tiǎn,shū,shū,mén,dǎo,tán,jué,chuí,xìng,péng,tǎng,hòu,yǐ,qī,tì,gàn,liàng,jiè,suī,chàng,jié,fǎng,zhí,kōng,juàn,zōng,jù,qiàn,ní,lún,zhuō,wō,luǒ,sōng,lèng,hùn,dōng,zì,bèn,wǔ,jù,nǎi,cǎi,jiǎn,zhài,yē,zhí,shà,qīng,nìng,yīng,chēng,qián,yǎn,ruǎn,zhòng,chǔn,jiǎ,jì,wěi,yú,bǐng,ruò,tí,wēi,piān,yàn,fēng,tǎng,wò,è,xié,chě,shěng,kǎn,dì,zuò,chā,tíng,bèi,xiè,huáng,yǎo,zhàn,chǒu,ān,yóu,jiàn,xū,zhā,cī,fù,bī,zhì,zǒng,miǎn,jí,yǐ,xiè,xún,cāi,duān,cè,zhēn,ǒu,tōu,tōu,bèi,zá,lǚ,jié,wěi,fèn,cháng,kuǐ,sǒu,zhì,sù,xiā,fù,yuàn,rǒng,lì,nù,yùn,jiǎng,mà,bàng,diān,táng,hào,jié,xī,shān,qiàn,què,cāng,chù,sǎn,bèi,xiào,róng,yáo,tà,suō,yǎng,fá,bìng,jiā,dǎi,zài,tǎng,gǔ,bīn,chǔ,nuó,cān,lěi,cuī,yōng,zāo,zǒng,péng,sǒng,ào,chuán,yǔ,zhài,qī,shāng,chuǎng,jìng,chì,shǎ,hàn,zhāng,qīng,yān,dì,xiè,lǚ,bèi,piào,jǐn,liàn,lù,màn,qiān,xiān,tǎn,yíng,dòng,zhuàn,xiàng,shàn,qiáo,jiǒng,tuǐ,zǔn,pú,xī,láo,chǎng,guāng,liáo,qī,chēng,zhàn,wěi,jī,bō,huì,chuǎn,tiě,dàn,jiǎo,jiù,sēng,fèn,xiàn,yù,è,jiāo,jiàn,tóng,lǐn,bó,gù,xiān,sù,xiàn,jiāng,mǐn,yè,jìn,jià,qiào,pì,fēng,zhòu,ài,sài,yí,jùn,nóng,chán,yì,dāng,jǐng,xuān,kuài,jiǎn,chù,dān,jiǎo,shǎ,zài,càn,bīn,án,rú,tái,chóu,chái,lán,nǐ,jǐn,qiàn,méng,wǔ,níng,qióng,nǐ,cháng,liè,lěi,lǚ,kuǎng,bào,yù,biāo,zǎn,zhì,sì,yōu,háo,qìng,chèn,lì,téng,wěi,lǒng,chǔ,chán,ráng,shū,huì,lì,luó,zǎn,nuó,tǎng,yǎn,léi,nàng,ér,wù,yǔn,zān,yuán,xiōng,chōng,zhào,xiōng,xiān,guāng,duì,kè,duì,miǎn,tù,cháng,ér,duì,ér,qīn,tù,sì,yǎn,yǎn,shǐ,shí,dǎng,qiān,dōu,fēn,máo,shēn,dōu,bǎi,jīng,lǐ,huǎng,rù,wáng,nèi,quán,liǎng,yú,bā,gōng,liù,xī,han,lán,gòng,tiān,guān,xīng,bīng,qí,jù,diǎn,zī,fēn,yǎng,jiān,shòu,jì,yì,jì,chǎn,jiōng,mào,rǎn,nèi,yuán,mǎo,gāng,rǎn,cè,jiōng,cè,zài,guǎ,jiǒng,mào,zhòu,mào,gòu,xú,miǎn,mì,rǒng,yín,xiě,kǎn,jūn,nóng,yí,mí,shì,guān,měng,zhǒng,zuì,yuān,míng,kòu,lín,fù,xiě,mì,bīng,dōng,tài,gāng,féng,bīng,hù,chōng,jué,yà,kuàng,yě,lěng,pàn,fā,mǐn,dòng,xiǎn,liè,qià,jiān,jìng,sōu,měi,tú,qī,gù,zhǔn,sōng,jìng,liáng,qìng,diāo,líng,dòng,gàn,jiǎn,yīn,còu,ái,lì,cāng,mǐng,zhǔn,cuī,sī,duó,jìn,lǐn,lǐn,níng,xī,dú,jī,fán,fán,fán,fèng,jū,chù,zhēng,fēng,mù,zhǐ,fú,fēng,píng,fēng,kǎi,huáng,kǎi,gān,dèng,píng,kǎn,xiōng,kuài,tū,āo,chū,jī,dàng,hán,hán,záo,dāo,diāo,dāo,rèn,rèn,chuāng,fēn,qiē,yì,jī,kān,qiàn,cǔn,chú,wěn,jī,dǎn,xíng,huá,wán,jué,lí,yuè,liè,liú,zé,gāng,chuàng,fú,chū,qù,diāo,shān,mǐn,líng,zhōng,pàn,bié,jié,jié,páo,lì,shān,bié,chǎn,jǐng,guā,gēng,dào,chuàng,kuī,kū,duò,èr,zhì,shuā,quàn,chà,cì,kè,jié,guì,cì,guì,kǎi,duò,jì,tì,jǐng,dōu,luǒ,zé,yuān,cuò,xiāo,kēi,là,qián,chà,chuàng,guǎ,jiàn,cuò,lí,tī,fèi,pōu,chǎn,qí,chuàng,zì,gāng,wān,bāo,jī,duō,qíng,yǎn,dū,jiàn,jì,bāo,yān,jù,huò,shèng,jiǎn,duó,zhì,wū,guǎ,fù,shèng,jiàn,gē,dá,kǎi,chuàng,chuán,chǎn,tuán,lù,lí,pēng,shān,piāo,kōu,jiǎo,guā,qiāo,jué,huá,zhā,zhuó,lián,jù,pī,liú,guì,jiǎo,guì,jiàn,jiàn,tāng,huō,jì,jiàn,yì,jiàn,zhì,chán,zuān,mó,lí,zhú,lì,yà,quàn,bàn,gōng,jiā,wù,mài,liè,jìn,kēng,xié,zhǐ,dòng,zhù,nǔ,jié,qú,shào,yì,zhǔ,miǎo,lì,jìn,láo,láo,juàn,kǒu,yáng,wā,xiào,móu,kuāng,jié,liè,hé,shì,kè,jìn,gào,bó,mǐn,chì,láng,yǒng,yǒng,miǎn,kè,xūn,juàn,qíng,lù,bù,měng,chì,lè,kài,miǎn,dòng,xù,xù,kān,wù,yì,xūn,wěng,shèng,láo,mù,lù,piāo,shì,jì,qín,jiàng,jiǎo,quàn,xiàng,yì,qiāo,fān,juān,tóng,jù,dān,xié,mài,xūn,xūn,lǜ,lì,chè,ráng,quàn,bāo,sháo,yún,jiū,bào,gōu,wù,yún,none,xiōng,gài,gài,bāo,cōng,yì,xiōng,pēng,jū,táo,gé,pú,è,páo,fú,gōng,dá,jiù,gōng,bǐ,huà,běi,nǎo,chí,fāng,jiù,yí,zā,jiàng,kàng,jiàng,kuāng,hū,xiá,qū,fán,guǐ,qiè,zāng,kuāng,fěi,hū,yǔ,guǐ,kuì,huì,dān,kuì,lián,lián,suǎn,dú,jiù,jué,xì,pǐ,qū,yī,kē,yǎn,biǎn,nì,qū,shí,xùn,qiān,niàn,sà,zú,shēng,wǔ,huì,bàn,shì,xì,wàn,huá,xié,wàn,bēi,zú,zhuó,xié,dān,mài,nán,dān,jí,bó,shuài,bǔ,guàn,biàn,bǔ,zhān,qiǎ,lú,yǒu,lǔ,xī,guà,wò,xiè,jié,jié,wèi,yǎng,qióng,zhī,mǎo,yìn,wēi,shào,jí,què,luǎn,chǐ,juàn,xiè,xù,jǐn,què,wù,jí,è,qīng,xī,sān,chǎng,wēi,è,tīng,lì,zhé,hàn,lì,yǎ,yā,yàn,shè,dǐ,zhǎ,páng,none,qiè,yá,zhì,cè,máng,tí,lí,shè,hòu,tīng,zuī,cuò,fèi,yuán,cè,yuán,xiāng,yǎn,lì,jué,shà,diān,chú,jiù,jǐn,áo,guǐ,yàn,sī,lì,chǎng,qiān,lì,yán,yǎn,yuán,sī,gōng,lín,róu,qù,qù,none,lěi,dū,xiàn,zhuān,sān,cān,cān,cān,cān,ài,dài,yòu,chā,jí,yǒu,shuāng,fǎn,shōu,guái,bá,fā,ruò,lì,shū,zhuó,qǔ,shòu,biàn,xù,jiǎ,pàn,sǒu,jí,wèi,sǒu,dié,ruì,cóng,kǒu,gǔ,jù,lìng,guǎ,tāo,kòu,zhī,jiào,zhào,bā,dīng,kě,tái,chì,shǐ,yòu,qiú,pǒ,yè,hào,sī,tàn,chǐ,lè,diāo,jī,none,hōng,miē,xū,máng,chī,gè,xuān,yāo,zǐ,hé,jí,diào,dòu,tóng,míng,hòu,lì,tǔ,xiàng,zhà,xià,yē,lǚ,yā,ma,ǒu,huō,yī,jūn,chǒu,lìn,tūn,yín,fèi,pǐ,qìn,qìn,jiè,bù,fǒu,bā,dūn,fēn,é,hán,tīng,háng,shǔn,qǐ,hóng,zhī,yǐn,wú,wú,chǎo,nà,xuè,xī,chuī,dōu,wěn,hǒu,hǒu,wú,gào,yā,jùn,lǚ,è,gé,wěn,dāi,qǐ,chéng,wú,gào,fū,jiào,hōng,chǐ,shēng,nà,tūn,fǔ,yì,dāi,ǒu,lì,bei,yuán,wā,huá,qiāng,wū,è,shī,juǎn,pěn,wěn,ní,m,líng,rán,yōu,dǐ,zhōu,shì,zhòu,tiè,xì,yì,qì,píng,zǐ,guā,zī,wèi,xǔ,hē,náo,xiā,pēi,yì,xiāo,shēn,hū,mìng,dá,qū,jǔ,xián,zā,tuō,duō,pǒu,páo,bì,fú,yǎng,hé,zǎ,hé,hāi,jiù,yǒng,fù,dā,zhòu,wǎ,kǎ,gū,kā,zuo,bù,lóng,dōng,níng,tuō,sī,xiàn,huò,qì,èr,è,guāng,zhà,dié,yí,liě,zī,miē,mī,zhǐ,yǎo,jī,zhòu,kǎ,shù,zá,xiào,ké,huī,kuā,huài,táo,xián,è,xuǎn,xiū,wā,yān,lǎo,yī,āi,pǐn,shěn,tóng,hōng,xiōng,duō,wā,hā,zāi,yòu,diè,pài,xiǎng,āi,gén,kuāng,yǎ,dā,xiāo,bì,yuě,nián,huá,xíng,kuài,duǒ,fēn,jì,nóng,mōu,yō,hào,yuán,lòng,pǒu,máng,gē,ó,chī,shào,li,nǎ,zú,hè,kū,xiào,xiàn,láo,pò,zhé,zhā,liàng,bā,miē,liè,suī,fú,bǔ,hān,hēng,gěng,chuò,gě,yòu,yàn,gū,gū,bei,hán,suō,chún,yì,āi,jiá,tǔ,dàn,wǎn,lì,xī,táng,zuò,qiú,chē,wù,zào,yǎ,dōu,qǐ,dí,qìn,mà,none,gòng,dǒu,none,lào,liǎng,suǒ,zào,huàn,léng,shā,jī,zǔ,wō,fěng,jìn,hǔ,qì,shòu,wéi,shuā,chàng,ér,lì,qiàng,ǎn,jiè,yō,niàn,yū,tiǎn,lài,shà,xī,tuò,hū,ái,zhōu,gòu,kěn,zhuó,zhuó,shāng,dí,hèng,lán,a,cǎi,qiāng,zhūn,wǔ,wèn,cuì,shà,gǔ,qǐ,qǐ,táo,dàn,dàn,yuē,zǐ,bǐ,cuì,chuò,hé,yǎ,qǐ,zhé,fēi,liǎng,xián,pí,shá,lā,zé,qíng,guà,pā,zé,sè,zhuàn,niè,guō,luō,yán,dī,quán,tān,bo,dìng,lāng,xiào,none,táng,chì,tí,ān,jiū,dàn,kā,yóng,wèi,nán,shàn,yù,zhé,lǎ,jiē,hóu,hǎn,dié,zhōu,chái,wāi,nuò,huò,yīn,zá,yāo,ō,miǎn,hú,yǔn,chuǎn,huì,huàn,huàn,xǐ,hē,jī,kuì,zhǒng,wéi,shà,xǔ,huáng,duó,yán,xuān,liàng,yù,sāng,chī,qiáo,yàn,dān,pèn,cān,lí,yō,zhā,wēi,miāo,yíng,pēn,bǔ,kuí,xí,yù,jiē,lóu,kù,zào,hù,tí,yáo,hè,shà,xiù,qiāng,sè,yōng,sù,gòng,xié,yì,suō,má,chā,hài,kē,tà,sǎng,chēn,rù,sōu,wā,jī,bēng,wū,xián,shì,gé,zī,jiē,lào,wēng,wà,sì,chī,háo,suō,jiā,hāi,suǒ,qín,niè,hē,zi,sǎi,ň,gě,ná,diǎ,ǎi,qiāng,tōng,bì,áo,áo,lián,zuī,zhē,mò,sòu,sǒu,tǎn,dí,qī,jiào,chōng,jiào,kǎi,tàn,shān,cáo,jiā,ái,xiào,piāo,lóu,gā,gǔ,xiāo,hū,huì,guō,ǒu,xiān,zé,cháng,xū,pó,dē,ma,mà,hú,lei,dū,gā,tāng,yě,bēng,yīng,sāi,jiào,mì,xiào,huá,mǎi,rán,zuō,pēng,lào,xiào,jī,zhǔ,cháo,kuì,zuǐ,xiāo,sī,háo,fǔ,liáo,qiáo,xī,chù,tān,dàn,hēi,xùn,ě,zūn,fān,chī,huī,zǎn,chuáng,cù,dàn,jué,tūn,cēng,jiào,yē,xī,qì,háo,lián,xū,dēng,huī,yín,pū,juē,qín,xún,niè,lū,sī,yǎn,yīng,dā,zhān,ō,zhòu,jìn,nóng,yuě,xiè,qì,è,zào,yī,shì,jiào,yuàn,ǎi,yōng,jué,kuài,yǔ,pēn,dào,gá,xīn,dūn,dāng,xīn,sāi,pī,pǐ,yīn,zuǐ,níng,dí,làn,tà,huò,rú,hāo,hè,yàn,duō,xiù,zhōu,jì,jìn,háo,tì,cháng,xūn,mē,cā,tì,lū,huì,bó,yōu,niè,yín,hù,mèi,hōng,zhé,lí,liú,xié,náng,xiāo,mō,yàn,lì,lú,lóng,pó,dàn,chèn,pín,pǐ,xiàng,huò,mè,xī,duǒ,kù,yán,chán,yīng,rǎng,diǎn,lá,tà,xiāo,jiáo,chuò,huàn,huò,zhuàn,niè,xiāo,zá,lí,chǎn,chài,lì,yì,luō,náng,zá,sū,xǐ,zèng,jiān,yàn,zhǔ,lán,niè,nāng,lǎn,luó,wéi,huí,yīn,qiú,sì,nín,jiǎn,huí,xìn,yīn,nān,tuán,tuán,dùn,kàng,yuān,jiǒng,piān,yún,cōng,hú,huí,yuán,é,guó,kùn,cōng,wéi,tú,wéi,lún,guó,qūn,rì,líng,gù,guó,tāi,guó,tú,yòu,guó,yín,hùn,pǔ,yǔ,hán,yuán,lún,quān,yǔ,qīng,guó,chuán,wéi,yuán,quān,kū,pǔ,yuán,yuán,yà,tuān,tú,tú,tuán,lüè,huì,yì,huán,luán,luán,tǔ,yà,tǔ,tǐng,shèng,pú,lù,kuài,yā,zài,wéi,gē,yù,wū,guī,pǐ,yí,dì,qiān,qiān,zhèn,zhuó,dàng,qià,xià,shān,kuàng,cháng,qí,niè,mò,jī,jiá,zhǐ,zhǐ,bǎn,xūn,yì,qǐn,méi,jūn,rǒng,tún,fāng,bèn,bèn,tān,kǎn,huài,zuò,kēng,bì,jǐng,dì,jīng,jì,kuài,dǐ,jīng,jiān,tán,lì,bà,wù,fén,zhuì,pō,pǎn,táng,kūn,qū,tǎn,zhǐ,tuó,gān,píng,diàn,guà,ní,tái,pī,jiōng,yǎng,fó,ào,lù,qiū,mù,kē,gòu,xuè,fá,dǐ,chè,líng,zhù,fù,hū,zhì,chuí,lā,lǒng,lǒng,lú,ào,dài,páo,mín,xíng,dòng,jì,hè,lǜ,cí,chǐ,lěi,gāi,yīn,hòu,duī,zhào,fú,guāng,yáo,duǒ,duǒ,guǐ,chá,yáng,yín,fá,gòu,yuán,dié,xié,kěn,shǎng,shǒu,è,bìng,diàn,hóng,yà,kuǎ,dá,kǎ,dàng,kǎi,háng,nǎo,ǎn,xīng,xiàn,yuàn,bāng,póu,bà,yì,yìn,hàn,xù,chuí,cén,gěng,āi,běng,dì,què,yǒng,jùn,xiá,dì,mái,làng,juǎn,chéng,yán,qín,zhé,liè,liè,pǔ,chéng,huā,bù,shí,xūn,guō,jiōng,yě,niàn,dī,yù,bù,yà,quán,suì,pí,qīng,wǎn,jù,lǔn,zhēng,kōng,chǒng,dōng,dài,tán,ǎn,cǎi,chù,běng,xiàn,zhí,duǒ,yì,zhí,yì,péi,jī,zhǔn,qí,sào,jù,ní,kū,kè,táng,kūn,nì,jiān,duī,jīn,gāng,yù,è,péng,gù,tù,lèng,fāng,yá,qiàn,kūn,àn,shēn,duò,nǎo,tū,chéng,yīn,huán,bì,liàn,guō,dié,zhuàn,hòu,bǎo,bǎo,yú,dī,máo,jiē,ruán,è,gèng,kān,zōng,yú,huáng,è,yáo,yàn,bào,jí,méi,cháng,dǔ,tuó,yìn,féng,zhòng,jiè,jīn,fēng,gāng,chuǎn,jiǎn,píng,lěi,jiǎng,huāng,léng,duàn,wān,xuān,jì,jí,kuài,yíng,tā,chéng,yǒng,kǎi,sù,sù,shí,mì,tǎ,wěng,chéng,tú,táng,què,zhǒng,lì,péng,bàng,sāi,zàng,duī,tián,wù,zhèng,xūn,gé,zhèn,ài,gōng,yán,xiàn,tián,yuán,wēn,xiè,liù,hǎi,lǎng,cháng,péng,bèng,chén,lù,lǔ,ōu,qiàn,méi,mò,zhuān,shuǎng,shú,lǒu,chí,màn,biāo,jìng,qī,shù,zhì,zhàng,kàn,yōng,diàn,chěn,zhǐ,xì,guō,qiǎng,jìn,dì,shāng,mù,cuī,yàn,tǎ,zēng,qián,qiáng,liáng,wèi,zhuì,qiāo,zēng,xū,shàn,shàn,fá,pú,kuài,tuǎn,fán,qiáo,mò,dūn,dūn,zūn,dì,shèng,duò,duò,tán,dèng,wú,fén,huáng,tán,dā,yè,zhù,jiàn,ào,qiáng,jī,qiāo,kěn,yì,pí,bì,diàn,jiāng,yě,yōng,xué,tán,lǎn,jù,huài,dàng,rǎng,qiàn,xūn,xiàn,xǐ,hè,ài,yā,dǎo,háo,ruán,jìn,lěi,kuàng,lú,yán,tán,wéi,huài,lǒng,lǒng,ruǐ,lì,lín,rǎng,chán,xūn,yán,lěi,bà,wān,shì,rén,san,zhuàng,zhuàng,shēng,yī,mài,ké,zhù,zhuàng,hú,hú,kǔn,yī,hú,xù,kǔn,shòu,mǎng,cún,shòu,yī,zhǐ,gǔ,chǔ,jiàng,féng,bèi,zhāi,biàn,suī,qūn,líng,fù,cuò,xià,xiòng,xiè,náo,xià,kuí,xī,wài,yuàn,mǎo,sù,duō,duō,yè,qíng,wài,gòu,gòu,qì,mèng,mèng,yín,huǒ,chěn,dà,cè,tiān,tài,fū,guài,yāo,yāng,hāng,gǎo,shī,tāo,tài,tóu,yǎn,bǐ,yí,kuā,jiā,duó,huà,kuǎng,yǔn,jiā,bā,ēn,lián,huàn,dī,yǎn,pào,juàn,qí,nài,fèng,xié,fèn,diǎn,quān,kuí,zòu,huàn,qì,kāi,shē,bēn,yì,jiǎng,tào,zàng,běn,xī,huǎng,fěi,diāo,xùn,bēng,diàn,ào,shē,wěng,pò,ào,wù,ào,jiǎng,lián,duó,yūn,jiǎng,shì,fèn,huò,bì,luán,duǒ,nǚ,nú,dǐng,nǎi,qiān,jiān,tā,jiǔ,nuán,chà,hǎo,xiān,fàn,jǐ,shuò,rú,fēi,wàng,hóng,zhuāng,fù,mā,dān,rèn,fū,jìng,yán,hài,wèn,zhōng,pā,dù,jì,kēng,zhòng,yāo,jìn,yún,miào,fǒu,chī,yuè,zhuāng,niū,yàn,nà,xīn,fén,bǐ,yú,tuǒ,fēng,wàn,fáng,wǔ,yù,guī,dù,bá,nī,zhóu,zhuó,zhāo,dá,nǐ,yuàn,tǒu,xián,zhí,ē,mèi,mò,qī,bì,shēn,qiè,ē,hé,xǔ,fá,zhēng,mín,bàn,mǔ,fū,líng,zǐ,zǐ,shǐ,rǎn,shān,yāng,mán,jiě,gū,sì,xìng,wěi,zī,jù,shān,pīn,rèn,yáo,dòng,jiāng,shū,jí,gāi,xiàng,huá,juān,jiāo,gòu,mǔ,jiān,jiān,yí,nián,zhí,zhěn,jī,xiàn,héng,guāng,jūn,kuā,yàn,mǐng,liè,pèi,è,yòu,yán,chà,shēn,yīn,shí,guǐ,quán,zī,sōng,wēi,hóng,wá,lóu,yà,ráo,jiāo,luán,pīng,xiàn,shào,lǐ,chéng,xiē,máng,fū,suō,wǔ,wěi,kè,chuò,chuò,tǐng,niáng,xíng,nán,yú,nà,pōu,něi,juān,shēn,zhì,hán,dì,zhuāng,é,pín,tuì,mǎn,miǎn,wú,yán,wǔ,xī,yán,yú,sì,yú,wā,lì,xián,jū,qǔ,zhuì,qī,xián,zhuó,dōng,chāng,lù,ǎi,ē,ē,lóu,mián,cóng,pǒu,jú,pó,cǎi,líng,wǎn,biǎo,xiāo,shū,qǐ,huī,fù,wǒ,wǒ,tán,fēi,fēi,jié,tiān,ní,quán,jìng,hūn,jīng,qiān,diàn,xìng,hù,wān,lái,bì,yīn,zhōu,chuò,fù,jìng,lún,nüè,lán,hùn,yín,yà,jū,lì,diǎn,xián,huā,huà,yīng,chán,shěn,tíng,dàng,yǎo,wù,nàn,ruò,jiǎ,tōu,xù,yù,wéi,dì,róu,měi,dān,ruǎn,qīn,huī,wò,qián,chūn,miáo,fù,jiě,duān,yí,zhòng,méi,huáng,mián,ān,yīng,xuān,jiē,wēi,mèi,yuàn,zhēng,qiū,tí,xiè,tuó,liàn,mào,rǎn,sī,piān,wèi,wā,cù,hú,ǎo,jié,bǎo,xū,tōu,guī,chú,yáo,pì,xí,yuán,yìng,róng,rù,chī,liú,měi,pán,ǎo,mā,gòu,kuì,qín,jià,sǎo,zhēn,yuán,jiē,róng,míng,yīng,jí,sù,niǎo,xián,tāo,páng,láng,nǎo,biáo,ài,pì,pín,yì,piáo,yù,léi,xuán,màn,yī,zhāng,kāng,yōng,nì,lí,dí,guī,yān,jǐn,zhuān,cháng,zé,hān,nèn,lào,mó,zhē,hù,hù,ào,nèn,qiáng,mā,piè,gū,wǔ,qiáo,tuǒ,zhǎn,miáo,xián,xián,mò,liáo,lián,huà,guī,dēng,zhí,xū,yī,huà,xī,kuì,ráo,xī,yàn,chán,jiāo,měi,fàn,fān,xiān,yì,huì,jiào,fù,shì,bì,shàn,suì,qiáng,liǎn,huán,xīn,niǎo,dǒng,yǐ,cān,ài,niáng,níng,mó,tiǎo,chóu,jìn,cí,yú,pín,róng,rú,nǎi,yān,tái,yīng,qiàn,niǎo,yuè,yíng,mián,bí,mó,shěn,xìng,nì,dú,liǔ,yuān,lǎn,yàn,shuāng,líng,jiǎo,niáng,lǎn,xiān,yīng,shuāng,xié,huān,mǐ,lí,luán,yǎn,zhú,lǎn,zǐ,jié,jué,jué,kǒng,yùn,zī,zì,cún,sūn,fú,bèi,zī,xiào,xìn,mèng,sì,tāi,bāo,jì,gū,nú,xué,yòu,zhuǎn,hái,luán,sūn,nāo,miē,cóng,qiān,shú,chán,yā,zī,nǐ,fū,zī,lí,xué,bò,rú,nái,niè,niè,yīng,luán,mián,níng,rǒng,tā,guǐ,zhái,qióng,yǔ,shǒu,ān,tū,sòng,wán,ròu,yǎo,hóng,yí,jǐng,zhūn,mì,zhǔ,dàng,hóng,zōng,guān,zhòu,dìng,wǎn,yí,bǎo,shí,shí,chǒng,shěn,kè,xuān,shì,yòu,huàn,yí,tiǎo,shǐ,xiàn,gōng,chéng,qún,gōng,xiāo,zǎi,zhà,bǎo,hài,yàn,xiāo,jiā,shěn,chén,róng,huāng,mì,kòu,kuān,bīn,sù,cǎi,zǎn,jì,yuān,jì,yín,mì,kòu,qīng,hè,zhēn,jiàn,fù,níng,bǐng,huán,mèi,qǐn,hán,yù,shí,níng,jìn,níng,zhì,yǔ,bǎo,kuān,níng,qǐn,mò,chá,jù,guǎ,qǐn,hū,wù,liáo,shí,níng,zhài,shěn,wěi,xiě,kuān,huì,liáo,jùn,huán,yì,yí,bǎo,qīn,chǒng,bǎo,fēng,cùn,duì,sì,xún,dǎo,lüè,duì,shòu,pǒ,fēng,zhuān,fū,shè,kēi,jiāng,jiāng,zhuān,wèi,zūn,xún,shù,duì,dǎo,xiǎo,jié,shǎo,ěr,ěr,ěr,gǎ,jiān,shú,chén,shàng,shàng,mó,gá,cháng,liáo,xiǎn,xiǎn,hùn,yóu,wāng,yóu,liào,liào,yáo,lóng,wāng,wāng,wāng,gà,yáo,duò,kuì,zhǒng,jiù,gān,gǔ,gān,tuí,gān,gān,shī,yǐn,chǐ,kāo,ní,jìn,wěi,niào,jú,pì,céng,xì,bī,jū,jiè,tián,qū,tì,jiè,wū,diǎo,shī,shǐ,píng,jī,xiè,zhěn,xì,ní,zhǎn,xī,wěi,mǎn,ē,lòu,pǐng,tì,fèi,shǔ,xiè,tú,lǚ,lǚ,xǐ,céng,lǚ,jù,xiè,jù,juē,liáo,juē,shǔ,xì,chè,tún,nì,shān,wā,xiān,lì,àn,huì,huì,hóng,yì,qǐ,rèn,wù,hàn,shēn,yǔ,chū,suì,qǐ,none,yuè,bǎn,yǎo,áng,yá,wù,jié,è,jí,qiān,fén,wán,qí,cén,qián,qí,chà,jiè,qū,gǎng,xiàn,ào,lán,dǎo,bā,zuò,zuò,yǎng,jù,gāng,kě,gǒu,xuè,pō,lì,tiáo,jū,yán,fú,xiù,jiǎ,lǐng,tuó,pī,ào,dài,kuàng,yuè,qū,hù,pò,mín,àn,tiáo,lǐng,dī,píng,dōng,zhān,kuī,xiù,mǎo,tóng,xué,yì,biàn,hé,kè,luò,é,fù,xún,dié,lù,ěn,ér,gāi,quán,tóng,yí,mǔ,shí,ān,wéi,huán,zhì,mì,lǐ,fǎ,tóng,wéi,yòu,qiǎ,xiá,lǐ,yáo,jiào,zhēng,luán,jiāo,é,é,yù,xié,bū,qiào,qún,fēng,fēng,náo,lǐ,yōu,xiàn,róng,dǎo,shēn,chéng,tú,gěng,jùn,gào,xiá,yín,wú,lǎng,kàn,láo,lái,xiǎn,què,kōng,chóng,chóng,tà,lín,huà,jū,lái,qí,mín,kūn,kūn,zú,gù,cuī,yá,yá,gǎng,lún,lún,líng,jué,duǒ,zhēng,guō,yín,dōng,hán,zhēng,wěi,xiáo,pí,yān,sōng,jié,bēng,zú,jué,dōng,zhǎn,gù,yín,zī,zè,huáng,yú,wǎi,yáng,fēng,qiú,yáng,tí,yǐ,zhì,shì,zǎi,yǎo,è,zhù,kān,lǜ,yǎn,měi,hán,jī,jī,huàn,tíng,shèng,méi,qiàn,wù,yú,zōng,lán,kě,yán,yán,wēi,zōng,chá,suì,róng,kē,qīn,yú,qí,lǒu,tú,cuī,xī,wěng,cāng,dàng,róng,jié,kǎi,liú,wù,sōng,kāo,zī,wéi,bēng,diān,cuó,qīn,yǒng,niè,cuó,jǐ,shí,ruò,sǒng,zǒng,jiàng,liáo,kāng,chǎn,dié,cēn,dǐng,tū,lǒu,zhàng,zhǎn,zhǎn,áo,cáo,qū,qiāng,wěi,zuǐ,dǎo,dǎo,xí,yù,pǐ,lóng,xiàng,céng,bō,qīn,jiāo,yān,láo,zhàn,lín,liáo,liáo,qín,dèng,tuò,zūn,jiào,jué,yáo,jiāo,yáo,jué,zhān,yì,xué,náo,yè,yè,yí,niè,xiǎn,jí,xiè,kě,guī,dì,ào,zuì,wēi,yí,róng,dǎo,lǐng,jié,yǔ,yuè,yǐn,rū,jié,lì,guī,lóng,lóng,diān,yíng,xī,jú,chán,yǐng,kuī,yán,wēi,náo,quán,chǎo,cuán,luán,diān,diān,niè,yán,yán,yǎn,kuí,yǎn,chuān,kuài,chuān,zhōu,huāng,jīng,xún,cháo,cháo,liè,gōng,zuǒ,qiǎo,jù,gǒng,none,wū,gū,gū,chà,qiú,qiú,jǐ,yǐ,sì,bā,zhī,zhāo,xiàng,yí,jǐn,xùn,juàn,bā,xùn,jīn,fú,zā,bì,shì,bù,dīng,shuài,fān,niè,shī,fēn,pà,zhǐ,xī,hù,dàn,wéi,zhàng,tǎng,dài,mò,pèi,pà,tiè,fú,lián,zhì,zhǒu,bó,zhì,dì,mò,yì,yì,píng,qià,juàn,rú,shuài,dài,zhēn,shuì,qiāo,zhēn,shī,qún,xí,bāng,dài,guī,chóu,píng,zhàng,jiǎn,wān,dài,wéi,cháng,shà,qí,zé,guó,mào,zhǔ,hóu,zhēn,zhèng,mì,wéi,wò,fú,yì,bāng,píng,dié,gōng,pán,huǎng,tāo,mì,jià,téng,huī,zhōng,shān,màn,mù,biāo,guó,zé,mù,bāng,zhàng,jǐng,chǎn,fú,zhì,hū,fān,chuáng,bì,bì,zhǎng,mì,qiāo,chān,fén,méng,bāng,chóu,miè,chú,jié,xiǎn,lán,gān,píng,nián,jiān,bìng,bìng,xìng,gàn,yāo,huàn,yòu,yōu,jī,guǎng,pǐ,tīng,zè,guǎng,zhuāng,mó,qìng,bì,qín,dùn,chuáng,guǐ,yǎ,bài,jiè,xù,lú,wǔ,zhuāng,kù,yīng,dǐ,páo,diàn,yā,miào,gēng,cì,fǔ,tóng,páng,fèi,xiáng,yǐ,zhì,tiāo,zhì,xiū,dù,zuò,xiāo,tú,guǐ,kù,máng,tíng,yóu,bū,bìng,chěng,lái,bēi,jī,ān,shù,kāng,yōng,tuǒ,sōng,shù,qǐng,yù,yǔ,miào,sōu,cè,xiāng,fèi,jiù,è,guī,liù,shà,lián,láng,sōu,zhì,bù,qǐng,jiù,jiù,jǐn,áo,kuò,lóu,yìn,liào,dài,lù,yì,chú,chán,tú,sī,xīn,miào,chǎng,wǔ,fèi,guǎng,kù,kuài,bì,qiáng,xiè,lǐn,lǐn,liáo,lú,jì,yǐng,xiān,tīng,yōng,lí,tīng,yǐn,xún,yán,tíng,dí,pò,jiàn,huí,nǎi,huí,gǒng,niàn,kāi,biàn,yì,qì,nòng,fèn,jǔ,yǎn,yì,zàng,bì,yì,yī,èr,sān,shì,èr,shì,shì,gōng,diào,yǐn,hù,fú,hóng,wū,tuí,chí,jiàng,bà,shěn,dì,zhāng,jué,tāo,fǔ,dǐ,mí,xián,hú,chāo,nǔ,jìng,zhěn,yi,mǐ,juàn,wān,shāo,ruò,xuān,jìng,diāo,zhāng,jiàng,qiáng,péng,dàn,qiáng,bì,bì,shè,dàn,jiǎn,gòu,gē,fā,bì,kōu,jiǎn,biè,xiāo,dàn,guō,qiáng,hóng,mí,guō,wān,jué,jì,jì,guī,dāng,lù,lù,tuàn,huì,zhì,huì,huì,yí,yí,yí,yí,huò,huò,shān,xíng,wén,tóng,yàn,yàn,yù,chī,cǎi,biāo,diāo,bīn,péng,yǒng,piāo,zhāng,yǐng,chī,chì,zhuó,tuǒ,jí,páng,zhōng,yì,wǎng,chè,bǐ,dī,líng,fù,wǎng,zhēng,cú,wǎng,jìng,dài,xī,xùn,hěn,yáng,huái,lǜ,hòu,wàng,chěng,zhì,xú,jìng,tú,cóng,cóng,lài,cóng,dé,pái,xǐ,dōng,jì,cháng,zhì,cóng,zhōu,lái,yù,xiè,jiè,jiàn,shì,jiǎ,biàn,huáng,fù,xún,wěi,páng,yáo,wēi,xī,zhēng,piào,tí,dé,zhǐ,zhǐ,bié,dé,zhǒng,chè,jiǎo,huì,jiǎo,huī,méi,lòng,xiāng,bào,qú,xīn,xīn,bì,yì,lè,rén,dāo,dìng,gǎi,jì,rěn,rén,chàn,tǎn,tè,tè,gān,yì,shì,cǔn,zhì,wàng,máng,xī,fān,yīng,tiǎn,mǐn,mǐn,zhōng,chōng,wù,jí,wǔ,xì,jiá,yōu,wán,cōng,sōng,kuài,yù,biàn,zhì,qí,cuì,chén,tài,tún,qián,niàn,hún,xiōng,niǔ,kuáng,xiān,xīn,kāng,hū,kài,fèn,huái,tài,sǒng,wǔ,òu,chàng,chuàng,jù,yì,bǎo,chāo,mín,pēi,zuò,zěn,yàng,kòu,bàn,nù,náo,zhēng,pà,bù,tiē,hù,hù,cū,dá,lián,sī,yóu,dì,dài,yí,tū,yóu,fū,jí,pēng,xìng,yuàn,ní,guài,fú,xì,bì,yōu,qiè,xuàn,cōng,bǐng,huǎng,xù,chù,bì,shù,xī,tān,yǒng,zǒng,duì,mì,zhǐ,yì,shì,nèn,xún,shì,xì,lǎo,héng,kuāng,móu,zhǐ,xié,liàn,tiāo,huǎng,dié,hào,kǒng,guǐ,héng,xī,xiào,shù,sī,hū,qiū,yàng,huì,huí,chì,jiá,yí,xiōng,guài,lìn,huī,zì,xù,chǐ,shàng,nǜ,hèn,ēn,kè,dòng,tián,gōng,quán,xī,qià,yuè,pēng,kěn,dé,huì,è,qiū,tòng,yān,kǎi,cè,nǎo,yùn,máng,yǒng,yǒng,yuān,pī,kǔn,qiǎo,yuè,yù,tú,jiè,xī,zhé,lìn,tì,hàn,hào,qiè,tì,bù,yì,qiàn,huǐ,xī,bèi,mán,yī,hēng,sǒng,quān,chěng,kuī,wù,wù,yōu,lí,liàng,huàn,cōng,yì,yuè,lì,nín,nǎo,è,què,xuán,qiān,wù,mǐn,cóng,fěi,bēi,dé,cuì,chàng,mèn,lì,jì,guàn,guàn,xìng,dào,qī,kōng,tiǎn,lǔn,xī,kǎn,gǔn,nì,qíng,chóu,dūn,guǒ,zhān,jīng,wǎn,yuān,jīn,jì,lán,yù,huò,hé,juàn,tán,tì,tì,niàn,wǎng,chuò,hū,hūn,xī,chǎng,xīn,wéi,huì,è,suǒ,zǒng,jiān,yǒng,diàn,jù,cǎn,chéng,dé,bèi,qiè,cán,dàn,guàn,duò,nǎo,yùn,xiǎng,zhuì,dié,huáng,chǔn,qióng,rě,xīng,cè,biǎn,mǐn,zōng,tí,qiǎo,chóu,bèi,xuān,wēi,gé,qiān,wěi,yù,yú,bì,xuān,huàn,mǐn,bì,yì,miǎn,yǒng,qì,dàng,yīn,è,chén,mào,kè,kè,yú,ài,qiè,yǎn,nuò,gǎn,yùn,còng,sāi,lèng,fèn,yīng,kuì,kuì,què,gōng,yún,sù,sù,qí,yáo,sǒng,huàng,jí,gǔ,jù,chuàng,nì,xié,kǎi,zhěng,yǒng,cǎo,xùn,shèn,bó,kài,yuàn,xì,hùn,yǒng,yǎng,lì,cǎo,tāo,yīn,cí,xù,qiàn,tài,huāng,yùn,shèn,mǐng,gōng,shè,cáo,piāo,mù,mù,guó,chì,cǎn,cán,cán,cuī,mín,tè,zhāng,tòng,ào,shuǎng,màn,guàn,què,zào,jiù,huì,kǎi,lián,òu,sǒng,qín,yìn,lǜ,shāng,wèi,tuán,mán,qiān,shè,yōng,qìng,kāng,dì,zhí,lóu,juàn,qī,qī,yù,píng,liáo,còng,yōu,chōng,zhī,tòng,chēng,qì,qū,péng,bèi,biē,qióng,jiāo,zēng,chì,lián,píng,kuì,huì,qiáo,chéng,yìn,yìn,xǐ,xǐ,dàn,tán,duò,duì,duì,sù,jué,cè,xiāo,fān,fèn,láo,lào,chōng,hān,qì,xián,mǐn,jǐng,liǎo,wǔ,cǎn,jué,cù,xiàn,tǎn,shéng,pī,yì,chù,xiān,náo,dàn,tǎn,jǐng,sōng,hàn,jiǎo,wèi,xuān,dǒng,qín,qín,jù,cǎo,kěn,xiè,yīng,ào,mào,yì,lǐn,sè,jùn,huái,mèn,lǎn,ài,lǐn,yān,guō,xià,chì,yǔ,yìn,dāi,mèng,ài,méng,duì,qí,mǒ,lán,mèn,chóu,zhì,nuò,nuò,yān,yǎng,bó,zhì,kuàng,kuǎng,yōu,fū,liú,miè,chéng,huì,chàn,měng,lǎn,huái,xuán,ràng,chàn,jì,jù,huān,shè,yì,liàn,nǎn,mí,tǎng,jué,gàng,gàng,gàng,gē,yuè,wù,jiān,xū,shù,róng,xì,chéng,wǒ,jiè,gē,jiān,qiāng,huò,qiāng,zhàn,dòng,qī,jiá,dié,zéi,jiá,jǐ,zhí,kān,jí,kuí,gài,děng,zhàn,qiāng,gē,jiǎn,jié,yù,jiǎn,yǎn,lù,xì,zhàn,xì,xì,chuō,dài,qú,hù,hù,hù,è,shì,tì,mǎo,hù,lì,fáng,suǒ,biǎn,diàn,jiōng,shǎng,yí,yǐ,shàn,hù,fēi,yǎn,shǒu,shǒu,cái,zā,qiú,lè,pū,bā,dǎ,rēng,fǎn,rù,zài,tuō,zhàng,diǎo,káng,yū,yū,hàn,shēn,chā,tuō,gǔ,kòu,wù,dèn,qiān,zhí,rèn,kuò,mén,sǎo,yáng,niǔ,bàn,chě,rǎo,xī,qián,bān,jiá,yú,fú,bā,xī,pī,zhǐ,zhì,è,dèn,zhǎo,chéng,jì,yǎn,kuáng,biàn,chāo,jū,wěn,hú,yuè,jué,bǎ,qìn,dǎn,zhěng,yǔn,wán,nè,yì,shū,zhuā,póu,tóu,dǒu,kàng,zhē,póu,fǔ,pāo,bá,ǎo,zé,tuán,kōu,lūn,qiāng,yún,hù,bào,bǐng,zhǐ,pēng,nán,bù,pī,tái,yǎo,zhěn,zhā,yāng,bào,hē,nǐ,yè,dǐ,chì,pī,jiā,mǒ,mèi,chēn,yā,chōu,qū,mǐn,zhù,jiā,fú,zhǎ,zhǔ,dān,chāi,mǔ,niān,lā,fǔ,pāo,bàn,pāi,līn,ná,guǎi,qián,jù,tuò,bá,tuō,tuō,ǎo,jū,zhuō,pàn,zhāo,bài,bài,dǐ,nǐ,jù,kuò,lǒng,jiǎn,qiǎ,yōng,lán,níng,bō,zé,qiān,hén,kuò,shì,jié,zhěng,nǐn,gǒng,gǒng,quán,shuān,cún,zā,kǎo,yí,xié,cè,huī,pīn,zhuài,shí,ná,bāi,chí,guà,zhì,kuò,duò,duǒ,zhǐ,qiè,àn,nòng,zhèn,gé,jiào,kuà,dòng,rú,tiāo,liè,zhā,lǚ,dié,wā,jué,liě,jǔ,zhì,luán,yà,zhuā,tà,xié,náo,dǎng,jiǎo,zhèng,jǐ,huī,xián,yǔ,āi,tuō,nuó,cuò,bó,gěng,tǐ,zhèn,chéng,suō,suō,kēng,měi,nòng,jú,bàng,jiǎn,yì,tǐng,shān,ruó,wǎn,xié,chā,péng,jiǎo,wǔ,jùn,jiù,tǒng,kǔn,huò,tú,zhuō,póu,luō,bā,hàn,shāo,niē,juān,zè,shù,yé,jué,bǔ,wán,bù,zùn,yè,zhāi,lǚ,sōu,tuō,lāo,sǔn,bāng,jiǎn,huàn,dǎo,wěi,wàn,qín,pěng,shě,liè,mín,mén,fǔ,bǎi,jù,dáo,wǒ,ái,juǎn,yuè,zǒng,chēn,chuí,jié,tū,bèn,nà,niǎn,ruó,zuó,wò,qī,xiān,chéng,diān,sǎo,lūn,qìng,gāng,duō,shòu,diào,pǒu,dǐ,zhǎng,hùn,jǐ,tāo,qiā,qí,pái,shū,qiān,líng,yè,yà,jué,zhēng,liǎng,guà,nǐ,huò,shàn,zhěng,lüè,cǎi,tàn,chè,bīng,jiē,tì,kòng,tuī,yǎn,cuò,zōu,jū,tiàn,qián,kèn,bāi,pá,jiē,lǔ,guó,mìng,jié,zhì,dǎn,mēng,chān,sāo,guàn,pèng,yuàn,nuò,jiǎn,zhēng,jiū,jiǎn,yú,yán,kuí,nǎn,hōng,róu,pì,wēi,sāi,zòu,xuān,miáo,tí,niē,chā,shì,zǒng,zhèn,yī,xún,huáng,biǎn,yáng,huàn,yǎn,zǎn,ǎn,xū,yà,wò,ké,chuǎi,jí,tì,là,là,chéng,kāi,jiū,jiū,tú,jiē,huī,gèn,chòng,xiāo,shé,xiē,yuán,qián,yé,chā,zhā,bēi,yáo,wēi,bèng,lǎn,wèn,qìn,chān,gē,lǒu,zǒng,gèn,jiǎo,gòu,qìn,róng,què,chōu,chuāi,zhǎn,sǔn,sūn,bó,chù,róng,bàng,cuō,sāo,kē,yáo,dǎo,zhī,nù,lā,jiān,sōu,qiǔ,gǎo,xiǎn,shuò,sǎng,jìn,miè,è,chuí,nuò,shān,tà,jié,táng,pán,bān,dā,lì,tāo,hú,zhì,wā,huá,qiān,wèn,qiāng,tián,zhēn,è,xié,ná,quán,chá,zhà,gé,wǔ,èn,shè,gāng,shè,shū,bǎi,yáo,bìn,sōu,tān,sà,chǎn,suō,jiū,chōng,chuāng,guó,bìng,féng,shuāi,dì,qì,sōu,zhāi,liǎn,chēng,chī,guàn,lù,luò,lǒu,zǒng,gài,hù,zhā,qiāng,tàng,huà,cuī,zhì,mó,jiāng,guī,yǐng,zhí,áo,zhì,niè,mán,chàn,kōu,chū,sè,tuán,jiǎo,mō,mó,zhé,chān,kēng,biào,jiàng,yáo,gòu,qiān,liào,jī,yīng,juē,piē,piē,lāo,dūn,xiàn,ruán,guì,zǎn,yī,xián,chēng,chēng,sā,náo,hòng,sī,hàn,héng,dā,zǔn,niǎn,lǐn,zhěng,huī,zhuàng,jiǎo,jǐ,cāo,dǎn,dǎn,chè,bō,chě,juē,xiāo,liāo,bèn,fǔ,qiào,bō,cuō,zhuó,zhuàn,wěi,pū,qìn,dūn,niǎn,huá,xié,lū,jiǎo,cuān,tà,hàn,qiào,zhuā,jiǎn,gǎn,yōng,léi,nǎng,lǔ,shàn,zhuó,zé,pǔ,chuò,jī,dǎng,sè,cāo,qíng,qíng,huàn,jiē,qín,kuǎi,dān,xié,qiā,pǐ,bò,ào,jù,yè,è,mēng,sòu,mí,jǐ,tái,zhuó,dǎo,xǐng,lǎn,cā,jǔ,yē,rǔ,yè,yè,nǐ,huò,jié,bìn,níng,gē,zhì,zhì,kuò,mó,jiàn,xié,liè,tān,bǎi,sòu,lū,lì,rǎo,tī,pān,yǎng,léi,cā,shū,zǎn,niǎn,xiǎn,jùn,huō,lì,là,huàn,yíng,lú,lǒng,qiān,qiān,zǎn,qiān,lán,xiān,yīng,méi,rǎng,chān,wěng,cuān,xié,shè,luó,jùn,mí,chī,zǎn,luán,tān,zuàn,lì,diān,wā,dǎng,jiǎo,jué,lǎn,lì,nǎng,zhī,guì,guǐ,qī,xún,pū,pū,shōu,kǎo,yōu,gǎi,yǐ,gōng,gān,bān,fàng,zhèng,pò,diān,kòu,mǐn,wù,gù,hé,cè,xiào,mǐ,chù,gé,dí,xù,jiào,mǐn,chén,jiù,shēn,duó,yǔ,chì,áo,bài,xù,jiào,duó,liǎn,niè,bì,chǎng,diǎn,duō,yì,gǎn,sàn,kě,yàn,dūn,qī,tǒu,xiào,duō,jiǎo,jìng,yáng,xiá,mǐn,shù,ái,qiāo,ái,zhěng,dí,chén,fū,shù,liáo,qū,xiòng,yǐ,jiǎo,shàn,jiǎo,zhuó,yì,liǎn,bì,lí,xiào,xiào,wén,xué,qí,qí,zhāi,bīn,jué,zhāi,láng,fěi,bān,bān,lán,yǔ,lán,wěi,dǒu,shēng,liào,jiǎ,hú,xié,jiǎ,yǔ,zhēn,jiào,wò,tǒu,dòu,jīn,chì,yín,fǔ,qiāng,zhǎn,qú,zhuó,zhǎn,duàn,zhuó,sī,xīn,zhuó,zhuó,qín,lín,zhuó,chù,duàn,zhú,fāng,chǎn,háng,yú,shī,pèi,liú,mèi,páng,qí,zhān,máo,lǚ,pèi,pī,liú,fū,fǎng,xuán,jīng,jīng,nǐ,zú,zhào,yǐ,liú,shāo,jiàn,yú,yǐ,qí,zhì,fān,piāo,fān,zhān,kuài,suì,yú,wú,jì,jì,jì,huò,rì,dàn,jiù,zhǐ,zǎo,xié,tiāo,xún,xù,gā,lá,gàn,hàn,tái,dì,xù,chǎn,shí,kuàng,yáng,shí,wàng,mín,mín,tūn,chūn,wù,yún,bèi,áng,zè,bǎn,jié,kūn,shēng,hù,fǎng,hào,guì,chāng,xuān,míng,hūn,fēn,qǐn,hū,yì,xī,xīn,yán,zè,fǎng,tán,shèn,jù,yáng,zǎn,bǐng,xīng,yìng,xuàn,pò,zhěn,líng,chūn,hào,mèi,zuó,mò,biàn,xù,hūn,zhāo,zòng,shì,shì,yù,fèi,dié,mǎo,nì,chǎng,wēn,dōng,ǎi,bǐng,áng,zhòu,lóng,xiǎn,kuàng,tiǎo,cháo,shí,huǎng,huǎng,xuān,kuí,xù,jiǎo,jìn,zhì,jìn,shǎng,tóng,hǒng,yàn,gāi,xiǎng,shài,xiǎo,yè,yùn,huī,hán,hàn,jùn,wǎn,xiàn,kūn,zhòu,xī,shèng,shèng,bū,zhé,zhé,wù,wǎn,huì,hào,chén,wǎn,tiǎn,zhuó,zuì,zhǒu,pǔ,jǐng,xī,shǎn,nǐ,xī,qíng,qǐ,jīng,guǐ,zhěng,yì,zhì,àn,wǎn,lín,liàng,chēng,wǎng,xiǎo,zàn,fēi,xuān,xuǎn,yí,xiá,yùn,huī,xǔ,mǐn,kuí,yē,yìng,shǔ,wěi,shǔ,qíng,mào,nán,jiǎn,nuǎn,àn,yáng,chūn,yáo,suǒ,pǔ,míng,jiǎo,kǎi,hào,wěng,chàng,qì,hào,yàn,lì,ài,jì,jì,mèn,zàn,xiè,hào,mù,mù,cōng,nì,zhāng,huì,bào,hàn,xuán,chuán,liáo,xiān,tǎn,jǐng,piē,lín,tūn,xī,yì,jì,huàng,dài,yè,yè,lì,tán,tóng,xiǎo,fèi,shěn,zhào,hào,yì,xiàng,xīng,shēn,jiǎo,bào,jìng,yàn,ài,yè,rú,shǔ,méng,xūn,yào,pù,lì,chén,kuàng,dié,liǎo,yàn,huò,lú,xī,róng,lóng,nǎng,luǒ,luán,shài,tǎng,yǎn,zhú,yuē,yuē,qū,yè,gēng,yè,hū,hé,shū,cáo,cáo,shēng,màn,zēng,zēng,tì,zuì,cǎn,xù,huì,yǐn,qiè,fēn,bì,yuè,yǒu,ruǎn,péng,fén,fú,líng,fěi,qú,tì,nǜ,tiǎo,shuò,zhèn,lǎng,lǎng,juān,míng,huāng,wàng,tūn,zhāo,jī,qī,yīng,zōng,wàng,tóng,lǎng,láo,méng,lóng,mù,pìn,wèi,mò,běn,zhá,shù,shù,none,zhū,rén,bā,pǔ,duǒ,duǒ,dāo,lì,qiú,jī,jiū,bǐ,xiǔ,chéng,cì,shā,rù,zá,quán,qiān,yú,gān,wū,chā,shā,xún,fán,wù,zǐ,lǐ,xìng,cái,cūn,rèn,sháo,tuō,dì,zhàng,máng,chì,yì,gū,gōng,dù,yí,qǐ,shù,gàng,tiáo,jié,mián,wàn,lái,jiǔ,máng,yáng,mà,miǎo,sì,yuán,háng,fèi,bēi,jié,dōng,gǎo,yǎo,xiān,chǔ,chūn,pá,shū,huà,xīn,niǔ,zhù,chǒu,sōng,bǎn,sōng,jí,wò,jìn,gòu,jī,máo,pí,pī,wǎng,àng,fāng,fén,yì,fú,nán,xī,hù,yā,dōu,xín,zhěn,yǎo,lín,ruì,ě,méi,zhào,guǒ,zhī,cōng,yùn,huà,shēng,shū,zǎo,dì,lì,lú,jiǎn,chéng,sōng,qiāng,fēng,zhān,xiāo,xiān,kū,píng,sì,xǐ,zhǐ,guǎi,xiāo,jià,jiā,jǔ,bāo,mò,yì,yè,yè,shì,niè,bǐ,tuó,yí,líng,bǐng,nǐ,lā,hé,pán,fán,zhōng,dài,cí,yǎng,fū,bǎi,mǒu,gān,qī,rǎn,róu,mào,sháo,sōng,zhè,xiá,yòu,shēn,guì,tuò,zuò,nán,níng,yǒng,dǐ,zhì,zhā,chá,dàn,gū,bù,jiù,āo,fú,jiǎn,bā,duò,kē,nài,zhù,bì,liǔ,chái,shān,sì,zhù,bēi,shì,guǎi,chá,yǎo,chēng,jiù,shì,zhī,liǔ,méi,lì,róng,zhà,zǎo,biāo,zhàn,zhì,lóng,dòng,lú,shēng,lì,lán,yǒng,shù,xún,shuān,qì,chén,qī,lì,yí,xiáng,zhèn,lì,sè,guā,kān,bēn,rěn,xiào,bǎi,rěn,bìng,zī,chóu,yì,cì,xǔ,zhū,jiàn,zuì,ér,ěr,yǒu,fá,gǒng,kǎo,lǎo,zhān,liè,yīn,yàng,hé,gēn,zhī,shì,gé,zāi,luán,fú,jié,héng,guì,táo,guāng,wéi,kuàng,rú,àn,ān,juàn,yí,zhuō,kū,zhì,qióng,tóng,sāng,sāng,huán,jié,jiù,xuè,duò,chuí,yú,zā,none,yīng,jié,liǔ,zhàn,yā,ráo,zhēn,dàng,qī,qiáo,huà,guì,jiǎng,zhuāng,xún,suō,shā,chén,bēi,tīng,guā,jìng,bó,bèn,fú,ruí,tǒng,jué,xī,láng,liǔ,fēng,qī,wěn,jūn,gǎn,sù,liáng,qiú,tǐng,yǒu,méi,bāng,lòng,pēng,zhuāng,dì,xuān,tú,zào,āo,gù,bì,dí,hán,zǐ,zhī,rèn,bèi,gěng,jiǎn,huàn,wǎn,nuó,jiā,tiáo,jì,xiāo,lǚ,kuǎn,shāo,chén,fēn,sōng,mèng,wú,lí,sì,dòu,qǐn,yǐng,suō,jū,tī,xiè,kǔn,zhuō,shū,chān,fàn,wěi,jìng,lí,bīn,xià,fó,chóu,zhì,lái,lián,jiǎn,zhuō,líng,lí,qì,bǐng,lún,cōng,qiàn,mián,qí,qí,cǎi,gùn,chán,dé,fěi,pái,bàng,bàng,hūn,zōng,chéng,zǎo,jí,lì,péng,yù,yù,gù,jùn,dòng,táng,gāng,wǎng,dì,què,fán,chēng,zhàn,qǐ,yuān,yǎn,yù,quān,yì,sēn,rěn,chuí,léng,qī,zhuō,fú,kē,lái,zōu,zōu,zhào,guān,fēn,fén,chēn,qíng,ní,wǎn,guǒ,lù,háo,jiē,yǐ,chóu,jǔ,jú,chéng,zú,liáng,qiāng,zhí,zhuī,yā,jū,bēi,jiāo,zhuó,zī,bīn,péng,dìng,chǔ,chāng,mēn,huā,jiǎn,guī,xì,dú,qiàn,dào,guì,diǎn,luó,zhī,quān,mìng,fǔ,gēng,pèng,shàn,yí,tuǒ,sēn,duǒ,yē,fù,wěi,wēi,duàn,jiǎ,zōng,jiān,yí,zhēn,xí,yà,yǎn,chuán,jiān,chūn,yǔ,hé,zhā,wò,piān,bī,yāo,guō,xū,ruò,yáng,là,yán,běn,huī,kuí,jiè,kuí,sī,fēng,xiē,tuǒ,jí,jiàn,mù,máo,chǔ,kǔ,hú,liàn,léng,tíng,nán,yú,yóu,méi,sǒng,xuàn,xuàn,yǎng,zhēn,pián,dié,jí,jiē,yè,chǔ,shǔn,yú,còu,wēi,méi,dì,jí,jié,kǎi,qiū,yíng,róu,huáng,lóu,lè,quán,xiāng,pǐn,shǐ,gài,tán,lǎn,wēn,yú,chèn,lǘ,jǔ,shén,chū,bī,xiè,jiǎ,yì,zhǎn,fú,nuò,mì,láng,róng,gǔ,jiàn,jǔ,tā,yǎo,zhēn,bǎng,shā,yuán,zǐ,míng,sù,jià,yáo,jié,huàng,gàn,fěi,zhà,qián,mà,sǔn,yuán,xiè,róng,shí,zhī,cuī,wēn,tíng,liú,róng,táng,què,zhāi,sì,shèng,tà,kē,xī,gù,qī,gǎo,gǎo,sūn,pán,tāo,gé,chūn,diān,nòu,jí,shuò,gòu,chuí,qiāng,chá,qiǎn,huái,méi,xù,gàng,gāo,zhuō,tuó,qiáo,yàng,diān,jiǎ,jiàn,zuì,dǎo,lóng,bīn,zhū,sāng,xí,jī,lián,huì,róng,qiàn,guǒ,gài,gài,tuán,huà,qì,sēn,cuī,pèng,yǒu,hú,jiǎng,hù,huàn,guì,niè,yì,gāo,kāng,guī,guī,cáo,màn,jǐn,dī,zhuāng,lè,láng,chén,cōng,lí,xiū,qíng,shǎng,fán,tōng,guàn,zé,sù,léi,lǔ,liáng,mì,lóu,cháo,sù,kē,chū,táng,biāo,lù,jiū,zhè,zhā,shū,zhāng,mán,mó,niǎo,yàng,tiáo,péng,zhù,shā,xī,quán,héng,jiān,cōng,jī,yān,qiáng,xuě,yīng,èr,xún,zhí,qiáo,zuī,cóng,pǔ,shù,huà,guì,zhēn,zūn,yuè,shàn,xī,chūn,diàn,fá,gǎn,mó,wú,qiāo,ráo,lìn,liú,qiáo,xiàn,rùn,fǎn,zhǎn,tuó,liáo,yún,shùn,tuí,chēng,táng,méng,jú,chéng,sù,jué,jué,tán,huì,jī,nuó,xiàng,tuǒ,níng,ruǐ,zhū,tóng,zēng,fén,qióng,rǎn,héng,qián,gū,liǔ,lào,gāo,chú,xǐ,shèng,zǐ,zān,jǐ,dōu,jīng,lǔ,xiàn,cū,yuán,tà,shū,jiāng,tán,lǐn,nóng,yǐn,xí,huì,shān,zuì,xuán,chēng,gàn,jū,zuì,yì,qín,pǔ,yán,léi,fēng,huǐ,dàng,jì,suì,bò,píng,chéng,chǔ,zhuā,guì,jí,jiě,jiǎ,qíng,zhái,jiǎn,qiáng,dào,yǐ,biāo,sōng,shē,lǐn,lì,chá,méng,yín,chóu,tái,mián,qí,tuán,bīn,huò,jì,qiān,nǐ,níng,yī,gǎo,jiàn,yǐn,nòu,qǐng,yǎn,qí,mì,zhào,guì,chūn,jī,kuí,pó,dèng,chú,gé,mián,yōu,zhì,huǎng,qiān,lěi,léi,sà,lǔ,lì,cuán,lǜ,miè,huì,ōu,lǘ,zhì,gāo,dú,yuán,lì,fèi,zhuó,sǒu,lián,jiàng,chú,qìng,zhū,lú,yán,lì,zhū,chèn,jué,è,sū,huái,niè,yù,lóng,là,qiáo,xiǎn,guī,jǔ,xiāo,líng,yīng,jiān,yǐn,yòu,yíng,xiāng,nóng,bó,chán,lán,jǔ,shuāng,shè,wéi,cóng,quán,qú,cáng,jiù,yù,luó,lì,cuán,luán,dǎng,qú,yán,lǎn,lán,zhú,léi,lǐ,bà,náng,yù,líng,guàn,qiàn,cì,huān,xīn,yú,yù,qiān,ōu,xū,chāo,chù,qì,kài,yì,jué,xì,xù,hē,yù,kuài,láng,kuǎn,shuò,xī,èi,qī,qī,xū,chǐ,qīn,kuǎn,kǎn,kuǎn,kǎn,chuǎn,shà,guā,yān,xīn,xiē,yú,qiàn,xiāo,yē,gē,wū,tàn,jìn,ōu,hū,tì,huān,xū,pēn,xǐ,xiào,xū,xī,shàn,liǎn,chù,yì,è,yú,chuò,huān,zhǐ,zhèng,cǐ,bù,wǔ,qí,bù,bù,wāi,jù,qián,zhì,sè,chǐ,sè,zhǒng,suì,suì,lì,zé,yú,lì,guī,dǎi,è,sǐ,jiān,zhé,mò,mò,yāo,mò,cú,yāng,tiǎn,shēng,dài,shāng,xù,xùn,shū,cán,jǐng,piǎo,qià,qiú,sù,qíng,yǔn,liàn,yì,fǒu,zhí,yè,cán,hūn,dān,jí,dié,zhēn,yǔn,wēn,chòu,bìn,tì,jìn,shāng,yín,chī,jiù,kuì,cuàn,yì,dān,dù,jiāng,liàn,bìn,dú,jiān,jiān,shū,ōu,duàn,zhù,yīn,qìng,yì,shā,ké,ké,xiáo,xùn,diàn,huǐ,huǐ,gǔ,qiāo,jī,yì,ōu,huǐ,duàn,yī,xiāo,wú,guàn,mǔ,měi,měi,ǎi,jiě,dú,yù,bǐ,bì,bì,pí,pí,bì,chán,máo,háo,cǎi,bǐ,liě,jiā,zhān,sāi,mù,tuò,xún,ěr,róng,xiǎn,jū,mú,háo,qiú,dòu,shā,tǎn,péi,jū,duō,cuì,bī,sān,sān,mào,sāi,shū,shū,tuò,hé,jiàn,tà,sān,lǘ,mú,máo,tóng,rǒng,chǎng,pǔ,lǔ,zhān,sào,zhān,méng,lǔ,qú,dié,shì,dī,mín,jué,méng,qì,piē,nǎi,qì,dāo,xiān,chuān,fēn,yáng,nèi,nèi,fú,shēn,dōng,qīng,qì,yīn,xī,hài,yǎng,ān,yà,kè,qīng,yà,dōng,dàn,lǜ,qíng,yǎng,yūn,yūn,shuǐ,shuǐ,zhěng,bīng,yǒng,dàng,shuǐ,lè,nì,tǔn,fàn,guǐ,tīng,zhī,qiú,bīn,zè,miǎn,cuān,huì,diāo,hàn,chà,zhuó,chuàn,wán,fàn,tài,xī,tuō,máng,qiú,qì,shàn,pìn,hàn,qiān,wū,wū,xùn,sì,rǔ,gǒng,jiāng,chí,wū,tu,jiǔ,tāng,zhī,zhǐ,qiān,mì,gǔ,wāng,jǐng,jǐng,ruì,jūn,hóng,tài,tài,jí,biàn,biàn,gàn,wèn,zhōng,fāng,xiōng,jué,hǔ,niú,qì,fén,xù,xù,qìn,yí,wò,yún,yuán,hàng,yǎn,shěn,chén,dàn,yóu,dùn,hù,huò,qī,mù,nǜ,méi,tà,miǎn,mì,chōng,hóng,bǐ,shā,zhǐ,pèi,pàn,zhuǐ,zā,gōu,pài,méi,zé,fēng,òu,lì,lún,cāng,fēng,wéi,hù,mò,mèi,shù,jǔ,zá,tuō,tuó,tuó,hé,lì,mǐ,yí,fā,fèi,yóu,tián,zhì,zhǎo,gū,zhān,yán,sī,kuàng,jiǒng,jū,xiè,qiú,yì,jiā,zhōng,quán,bó,huì,mì,bēn,zé,chù,lè,yōu,gū,hóng,gān,fǎ,mǎo,sì,hū,pēng,cǐ,fàn,zhī,sù,nìng,chēng,líng,pào,bō,qì,sì,ní,jú,yuè,zhù,shēng,lèi,xuàn,jué,fú,pàn,mǐn,tài,yāng,jǐ,yǒng,guàn,bèng,xué,lóng,lú,dàn,luò,xiè,pō,zé,jīng,yín,pán,jié,yè,huī,huí,zài,chéng,yīn,wéi,hòu,jiàn,yáng,liè,sì,jì,ér,xíng,fú,sǎ,sè,zhǐ,yìn,wú,xǐ,kǎo,zhū,jiàng,luò,luò,àn,dòng,yí,sì,lěi,yī,mǐ,quán,jīn,pò,wěi,xiáo,xiè,hóng,xù,sù,kuāng,táo,qiè,jù,ěr,zhōu,rù,píng,xún,xiōng,zhì,guāng,huán,míng,huó,wā,qià,pài,wū,qū,liú,yì,jiā,jìng,qiǎn,jiāng,jiāo,zhēn,shī,zhuó,cè,fá,kuài,jì,liú,chǎn,hún,hǔ,nóng,xún,jìn,liè,qiú,wěi,zhè,jùn,hán,bāng,máng,zhuó,yōu,xī,bó,dòu,huàn,hóng,yì,pǔ,yǐng,lǎn,hào,làng,hǎn,lǐ,gēng,fú,wú,lì,chún,féng,yì,yù,tóng,láo,hǎi,jìn,jiā,chōng,jiǒng,měi,suī,chēng,pèi,xiàn,shèn,tú,kùn,pīng,niè,hàn,jīng,xiāo,shè,niǎn,tū,yǒng,xiào,xián,tǐng,é,sù,tūn,juān,cén,tì,lì,shuì,sì,lèi,shuì,tāo,dú,lào,lái,lián,wéi,wō,yún,huàn,dí,hēng,rùn,jiàn,zhǎng,sè,fú,guān,xìng,shòu,shuàn,yá,chuò,zhàng,yè,kōng,wǎn,hán,tuō,dōng,hé,wō,jū,shè,liáng,hūn,tà,zhuō,diàn,qiè,dé,juàn,zī,xī,xiáo,qí,gǔ,guǒ,yān,lín,tǎng,zhōu,pěng,hào,chāng,shū,qī,fāng,zhí,lù,nào,jú,táo,cóng,lèi,zhè,píng,féi,sōng,tiǎn,pì,dàn,yù,ní,yū,lù,gàn,mì,jìng,líng,lún,yín,cuì,qú,huái,yù,niǎn,shēn,biāo,chún,hū,yuān,lái,hùn,qīng,yān,qiǎn,tiān,miǎo,zhǐ,yǐn,bó,bèn,yuān,wèn,ruò,fēi,qīng,yuān,kě,jì,shè,yuān,sè,lù,zì,dú,yī,jiàn,miǎn,pài,xī,yú,yuān,shěn,shèn,róu,huàn,zhǔ,jiǎn,nuǎn,yú,qiú,tíng,qú,dù,fēng,zhā,bó,wò,wō,tí,wěi,wēn,rú,xiè,cè,wèi,hé,gǎng,yān,hóng,xuàn,mǐ,kě,máo,yīng,yǎn,yóu,hōng,miǎo,shěng,měi,zāi,hún,nài,guǐ,chì,è,pài,méi,liàn,qì,qì,méi,tián,còu,wéi,cān,tuān,miǎn,huì,pò,xǔ,jí,pén,jiān,jiǎn,hú,fèng,xiāng,yì,yìn,zhàn,shí,jiē,zhēn,huáng,tàn,yú,bì,mǐn,shī,tū,shēng,yǒng,jú,dòng,tuàn,qiū,qiū,qiú,yān,tāng,lóng,huò,yuán,nǎn,bàn,yǒu,quán,zhuāng,liàng,chán,xián,chún,niè,zī,wān,shī,mǎn,yíng,là,kuì,féng,jiàn,xù,lóu,wéi,gài,bō,yíng,pō,jìn,yàn,táng,yuán,suǒ,yuán,lián,yǎo,méng,zhǔn,chéng,kè,tài,dá,wā,liū,gōu,sāo,míng,zhà,shí,yì,lùn,mǎ,pǔ,wēi,lì,zāi,wù,xī,wēn,qiāng,zé,shī,sù,ái,zhēn,sōu,yún,xiù,yīn,róng,hùn,sù,suò,nì,tā,shī,rù,āi,pàn,chù,chú,pāng,wěng,cāng,miè,gé,diān,hào,huàng,qì,zī,dí,zhì,xíng,fǔ,jié,huá,gē,zǐ,tāo,téng,suī,bì,jiào,huì,gǔn,yín,zé,lóng,zhì,yàn,shè,mǎn,yíng,chún,lǜ,làn,luán,yáo,bīn,tān,yù,xiǔ,hù,bì,biāo,zhì,jiàng,kòu,shèn,shāng,dī,mì,áo,lǔ,hǔ,hū,yōu,chǎn,fàn,yōng,gǔn,mǎn,qǐng,yú,piāo,jì,yá,cháo,qī,xǐ,jì,lù,lóu,lóng,jǐn,guó,cóng,lòu,zhí,gài,qiáng,lí,yǎn,cáo,jiào,cōng,chún,tuán,òu,téng,yě,xí,mì,táng,mò,shāng,hàn,lián,lǎn,wā,chí,gān,féng,xuán,yī,màn,zì,mǎng,kāng,luò,bēn,shù,zhǎng,zhāng,chóng,xù,huàn,huǒ,jiàn,yān,shuǎng,liáo,cuǐ,tí,yàng,jiāng,cóng,yǐng,hóng,xiǔ,shù,guàn,yíng,xiāo,cóng,kūn,xù,liàn,zhì,wéi,pì,yù,jiào,pō,dàng,huì,jié,wǔ,pá,jí,pān,wéi,sù,qián,qián,xī,lù,xì,xùn,dùn,huáng,mǐn,rùn,sù,lǎo,zhēn,cōng,yì,zhí,wān,tān,tán,cháo,xún,kuì,yē,shào,tú,zhū,sàn,hēi,bì,shān,chán,chán,shǔ,tóng,pū,lín,wéi,sè,sè,chéng,jiǒng,chéng,huà,jiāo,lào,chè,gǎn,cūn,jǐng,sī,shù,péng,hán,yún,liū,hòng,fú,hào,hé,xián,jiàn,shān,xì,ào,lǔ,lán,nìng,yú,lǐn,miǎn,zǎo,dāng,huàn,zé,xiè,yù,lǐ,shì,xué,líng,wàn,zī,yōng,kuài,càn,liàn,diàn,yè,ào,huán,zhēn,chán,màn,gǎn,dàn,yì,suì,pì,jù,tà,qín,jī,zhuó,lián,nóng,guō,jìn,fén,sè,jí,suī,huì,chǔ,tà,sōng,dǐng,sè,zhǔ,lài,bīn,lián,mǐ,shī,shù,mì,nìng,yíng,yíng,méng,jìn,qí,bì,jì,háo,rú,cuì,wò,tāo,yǐn,yīn,duì,cí,huò,qìng,làn,jùn,ǎi,pú,zhuó,wéi,bīn,gǔ,qián,yíng,bīn,kuò,fèi,cāng,mè,jiàn,wěi,luò,zàn,lǜ,lì,yōu,yǎng,lǔ,sì,zhì,yíng,dú,wǎng,huī,xiè,pán,shěn,biāo,chán,miè,liú,jiān,pù,sè,chéng,gǔ,bīn,huò,xiàn,lú,qìn,hàn,yíng,róng,lì,jìng,xiāo,yíng,suǐ,wěi,xiè,huái,xuè,zhū,lóng,lài,duì,fàn,hú,lài,shū,lián,yíng,mí,jì,liàn,jiàn,yīng,fèn,lín,yì,jiān,yuè,chán,dài,ráng,jiǎn,lán,fán,shuàng,yuān,zhuó,fēng,shè,lěi,lán,cóng,qú,yōng,qián,fǎ,guàn,jué,yàn,hào,yíng,sǎ,zàn,luán,yàn,lí,mǐ,shàn,tān,dǎng,jiǎo,chǎn,yíng,hào,bà,zhú,lǎn,lán,nǎng,wān,luán,xún,xiǎn,yàn,gàn,yàn,yù,huǒ,huǒ,miè,guāng,dēng,huī,xiāo,xiāo,huī,hōng,líng,zào,zhuàn,jiǔ,zhà,xiè,chì,zhuó,zāi,zāi,càn,yáng,qì,zhōng,fén,niǔ,jiǒng,wén,pū,yì,lú,chuī,pī,kài,pàn,yán,yán,pàng,mù,chǎo,liào,quē,kàng,dùn,guāng,xìn,zhì,guāng,guāng,wěi,qiàng,biān,dá,xiá,zhēng,zhú,kě,zhào,fú,bá,xiè,xiè,lìng,zhuō,xuàn,jù,tàn,páo,jiǒng,páo,tái,tái,bǐng,yǎng,tōng,shǎn,zhù,zhà,diǎn,wéi,shí,liàn,chì,huǎng,zhōu,hū,shuò,làn,tīng,jiǎo,xù,héng,quǎn,liè,huàn,yáng,xiāo,xiū,xiǎn,yín,wū,zhōu,yáo,shì,wēi,tóng,miè,zāi,kài,hōng,lào,xiá,zhú,xuǎn,zhēng,pò,yān,huí,guāng,chè,huī,kǎo,jù,fán,shāo,yè,huì,none,tàng,jìn,rè,liè,xī,fú,jiǒng,xiè,pǔ,tīng,zhuó,tǐng,wán,hǎi,pēng,lǎng,yàn,xù,fēng,chì,róng,hú,xī,shū,hè,xūn,kù,juān,xiāo,xī,yān,hàn,zhuàng,qū,dì,xiè,jí,wù,yān,lǚ,hán,yàn,huàn,mèn,jú,dào,bèi,fén,lìn,kūn,hùn,tūn,xī,cuì,wú,hōng,chǎo,fǔ,wò,jiāo,zǒng,fèng,píng,qióng,ruò,xī,qióng,xìn,zhuō,yàn,yàn,yì,jué,yù,gàng,rán,pí,xiǒng,gàng,shēng,chàng,shāo,xiǒng,niǎn,gēng,qū,chén,hè,kuǐ,zhǒng,duàn,xiā,huī,fèng,liàn,xuān,xīng,huáng,jiǎo,jiān,bì,yīng,zhǔ,wěi,tuān,shǎn,xī,nuǎn,nuǎn,chán,yān,jiǒng,jiǒng,yù,mèi,shā,wèi,yè,jìn,qióng,róu,méi,huàn,xù,zhào,wēi,fán,qiú,suì,yáng,liè,zhǔ,jiē,zào,guā,bāo,hú,yūn,nǎn,shì,huǒ,biān,gòu,tuì,táng,chǎo,shān,ēn,bó,huǎng,xié,xì,wù,xī,yūn,hé,hè,xī,yún,xióng,xióng,shǎn,qióng,yào,xūn,mì,lián,yíng,wǔ,róng,gòng,yàn,qiàng,liū,xī,bì,biāo,cōng,lù,jiān,shú,yì,lóu,péng,suī,yì,tēng,jué,zōng,yù,hù,yí,zhì,āo,wèi,liǔ,hàn,ōu,rè,jiǒng,màn,kūn,shāng,cuàn,zèng,jiān,xī,xī,xī,yì,xiào,chì,huáng,chǎn,yè,tán,rán,yàn,xún,qiāo,jùn,dēng,dùn,shēn,jiāo,fén,sī,liáo,yù,lín,tóng,shāo,fén,fán,yàn,xún,làn,měi,tàng,yì,jiǒng,mèn,zhǔ,jiǎo,yíng,yù,yì,xué,lán,tài,zào,càn,suì,xī,què,zǒng,lián,huǐ,zhú,xiè,líng,wēi,yì,xié,zhào,huì,dá,nóng,lán,xū,xiǎn,hè,xūn,jìn,chóu,dào,yào,hè,làn,biāo,róng,lì,mò,bào,ruò,lǜ,là,āo,xūn,kuàng,shuò,liáo,lì,lú,jué,liáo,yàn,xī,xiè,lóng,yè,cān,rǎng,yuè,làn,cóng,jué,chóng,guàn,qú,chè,mí,tǎng,làn,zhú,lǎn,líng,cuàn,yù,zhǎo,zhǎo,pá,zhēng,páo,chēng,yuán,ài,wéi,han,jué,jué,fù,yé,bà,diē,yé,yáo,zǔ,shuǎng,ěr,pán,chuáng,kē,zāng,dié,qiāng,yōng,qiáng,piàn,bǎn,pàn,cháo,jiān,pái,dú,chuāng,yú,zhá,biān,dié,bǎng,bó,chuāng,yǒu,yǒu,dú,yá,chēng,niú,niú,pìn,jiū,móu,tā,mǔ,láo,rèn,māng,fāng,máo,mù,gāng,wù,yàn,gē,bèi,sì,jiàn,gǔ,yòu,kē,shēng,mǔ,dǐ,qiān,quàn,quán,zì,tè,xī,máng,kēng,qiān,wǔ,gù,xī,lí,lí,pǒu,jī,gāng,zhí,bēn,quán,chún,dú,jù,jiā,jiān,fēng,piān,kē,jú,kào,chú,xì,bèi,luò,jiè,má,sān,wèi,máo,dūn,tóng,qiáo,jiàng,xī,lì,dú,liè,pái,piāo,bào,xī,chōu,wéi,kuí,chōu,quǎn,quǎn,quǎn,fàn,qiú,jǐ,chái,zhuó,hān,gē,zhuàng,guǎng,mǎ,yóu,kàng,pèi,hǒu,yà,yín,huān,zhuàng,yǔn,kuáng,niǔ,dí,kuáng,zhòng,mù,bèi,pī,jú,yí,shēng,páo,xiá,tuó,hú,líng,fèi,pī,nǐ,yǎo,yòu,gǒu,xuè,jū,dàn,bó,kǔ,xiǎn,níng,huán,hěn,jiǎo,hé,zhào,jié,xùn,shān,tà,róng,shòu,tóng,lǎo,dú,xiá,shī,kuài,zhēng,yù,sūn,yú,bì,máng,xī,juàn,lí,xiá,yín,suān,láng,bèi,zhì,yán,shā,lì,hàn,xiǎn,jīng,pái,fēi,xiāo,bài,qí,ní,biāo,yìn,lái,liè,jiān,qiāng,kūn,yàn,guō,zòng,mí,chāng,yī,zhì,zhēng,yá,měng,cāi,cù,shē,liè,diǎn,luó,hú,zōng,hú,wěi,fēng,wō,yuán,xīng,zhū,māo,wèi,chuàn,xiàn,tuān,yà,náo,xiē,jiā,hóu,biān,yóu,yóu,méi,chá,yáo,sūn,bó,míng,huá,yuán,sōu,mǎ,huán,dāi,yù,shī,háo,qiāng,yì,zhēn,cāng,háo,màn,jìng,jiǎng,mò,zhāng,chán,áo,áo,háo,suǒ,fén,jué,bì,bì,huáng,pú,lín,xù,tóng,yào,liáo,shuò,xiāo,shòu,dūn,jiào,gé,juàn,dú,huì,kuài,xiǎn,xiè,tǎ,xiǎn,xūn,níng,biān,huò,nòu,méng,liè,náo,guǎng,shòu,lú,tǎ,xiàn,mí,ráng,huān,náo,luó,xiǎn,qí,jué,xuán,miào,zī,shuài,lú,yù,sù,wáng,qiú,gǎ,dīng,lè,bā,jī,hóng,dì,chuàn,gān,jiǔ,yú,qǐ,yú,chàng,mǎ,hóng,wǔ,fū,mín,jiè,yá,bīn,biàn,bàng,yuè,jué,mén,jué,wán,jiān,méi,dǎn,pín,wěi,huán,xiàn,qiāng,líng,dài,yì,án,píng,diàn,fú,xuán,xǐ,bō,cī,gǒu,jiǎ,sháo,pò,cí,kē,rǎn,shēng,shēn,yí,zǔ,jiā,mín,shān,liǔ,bì,zhēn,zhēn,jué,fà,lóng,jīn,jiào,jiàn,lì,guāng,xiān,zhōu,gǒng,yān,xiù,yáng,xǔ,luò,sù,zhū,qín,yín,xún,bǎo,ěr,xiàng,yáo,xiá,héng,guī,chōng,xù,bān,pèi,lǎo,dāng,yīng,hún,wén,é,chéng,dì,wǔ,wú,chéng,jùn,méi,bèi,tǐng,xiàn,chù,hán,xuán,yán,qiú,xuàn,láng,lǐ,xiù,fú,liú,yá,xī,líng,lí,jīn,liǎn,suǒ,suǒ,fēng,wán,diàn,pín,zhǎn,cuì,mín,yù,jū,chēn,lái,mín,shèng,wéi,tiǎn,shū,zhuó,běng,chēng,hǔ,qí,è,kūn,chāng,qí,běng,wǎn,lù,cóng,guǎn,yǎn,diāo,bèi,lín,qín,pí,pá,què,zhuó,qín,fà,jīn,qióng,dǔ,jiè,hún,yǔ,mào,méi,chūn,xuān,tí,xīng,dài,róu,mín,jiān,wěi,ruǎn,huàn,xié,chuān,jiǎn,zhuàn,chàng,liàn,quán,xiá,duàn,yuàn,yé,nǎo,hú,yīng,yú,huáng,ruì,sè,liú,shī,róng,suǒ,yáo,wēn,wǔ,zhēn,jìn,yíng,mǎ,tāo,liú,táng,lì,láng,guī,tiàn,qiāng,cuō,jué,zhǎo,yáo,ài,bīn,tú,cháng,kūn,zhuān,cōng,jǐn,yī,cuǐ,cōng,qí,lí,jǐng,zǎo,qiú,xuán,áo,liǎn,mén,zhāng,yín,yè,yīng,zhì,lù,wú,dēng,xiù,zēng,xún,qú,dàng,lín,liáo,qióng,sù,huáng,guī,pú,jǐng,fán,jīn,liú,jī,huì,jǐng,ài,bì,càn,qú,zǎo,dāng,jiǎo,guǎn,tǎn,huì,huán,sè,suì,tián,chǔ,yú,jìn,lú,bīn,shú,wèn,zuǐ,lán,xǐ,jì,xuán,ruǎn,wò,gài,léi,dú,lì,zhì,róu,lí,zàn,qióng,tì,guī,suí,là,lóng,lú,lì,zàn,làn,yīng,mí,xiāng,qióng,guàn,dào,zàn,huán,guā,bó,dié,bó,hù,zhí,piáo,bàn,ráng,lì,wǎ,none,xiáng,qián,bǎn,pén,fǎng,dǎn,wèng,ōu,none,none,wa,hú,líng,yí,píng,cí,none,juàn,cháng,chī,none,dàng,wā,bù,zhuì,píng,biān,zhòu,zhēn,none,cí,yīng,qì,xián,lǒu,dì,ōu,méng,zhuān,bèng,lìn,zèng,wǔ,pì,dān,wèng,yīng,yǎn,gān,dài,shèn,tián,tián,hán,cháng,shēng,qíng,shēn,chǎn,chǎn,ruí,shēng,sū,shēn,yòng,shuǎi,lù,fǔ,yǒng,béng,béng,níng,tián,yóu,jiǎ,shēn,yóu,diàn,fú,nán,diàn,pīng,tǐng,huà,tǐng,zhèn,zāi,méng,bì,bì,mǔ,xún,liú,chàng,mǔ,yún,fàn,fú,gēng,tián,jiè,jiè,quǎn,wèi,fú,tián,mǔ,none,pàn,jiāng,wā,dá,nán,liú,běn,zhěn,xù,mǔ,mǔ,cè,zāi,gāi,bì,dá,zhì,lüè,qí,lüè,fān,yī,fān,huà,shē,shē,mǔ,jùn,yì,liú,shē,dié,chóu,huà,dāng,zhuì,jī,wǎn,jiāng,chéng,chàng,tuǎn,léi,jī,chā,liú,dié,tuǎn,lín,jiāng,jiāng,chóu,pì,dié,dié,pǐ,jié,dàn,shū,shū,zhì,yí,nè,nǎi,dīng,bǐ,jiē,liáo,gāng,gē,jiù,zhǒu,xià,shàn,xū,nüè,lì,yáng,chèn,yóu,bā,jiè,jué,qí,yǎ,cuì,bì,yì,lì,zòng,chuāng,fēng,zhù,pào,pí,gān,kē,cī,xuē,zhī,dǎn,zhěn,fá,zhǐ,téng,jū,jí,fèi,gōu,shān,jiā,xuán,zhà,bìng,niè,zhèng,yōng,jìng,quán,téng,tōng,yí,jiē,wěi,huí,tān,yǎng,zhì,zhì,hén,yǎ,mèi,dòu,jìng,xiāo,tòng,tū,máng,pǐ,xiāo,suān,pū,lì,zhì,cuó,duó,wù,shā,láo,shòu,huàn,xián,yì,bēng,zhàng,guǎn,tán,fèi,má,má,chī,jì,tiǎn,ān,chì,bì,bì,mín,gù,duī,kē,wěi,yū,cuì,yǎ,zhú,cù,dàn,shèn,zhǒng,zhì,yù,hóu,fēng,là,yáng,chén,tú,yǔ,guō,wén,huàn,kù,jiǎ,yīn,yì,lòu,sào,jué,chì,xī,guān,yì,wēn,jí,chuāng,bān,huì,liú,chài,shòu,nüè,diān,dá,biē,tān,zhàng,biāo,shèn,cù,luǒ,yì,zòng,chōu,zhàng,zhài,sòu,sè,qué,diào,lòu,lòu,mò,qín,yǐn,yǐng,huáng,fú,liáo,lóng,qiáo,liú,láo,xián,fèi,dàn,yìn,hè,ái,bān,xián,guān,guì,nòng,yù,wēi,yì,yōng,pǐ,lěi,lì,shǔ,dàn,lǐn,diàn,lǐn,lài,biē,jì,chī,yǎng,xuǎn,jiē,zhēng,mèng,lì,huò,lài,jī,diān,xuǎn,yǐng,yǐn,qú,yōng,tān,diān,luǒ,luán,luán,bō,bō,guǐ,bá,fā,dēng,fā,bái,bǎi,qié,jí,zào,zào,mào,de,pā,jiē,huáng,guī,cǐ,líng,gāo,mò,jí,jiǎo,pěng,gāo,ái,é,hào,hàn,bì,wǎn,chóu,qiàn,xī,ái,xiǎo,hào,huàng,hào,zé,cuǐ,hào,xiǎo,yè,pó,hào,jiǎo,ài,xīng,huàng,lì,piǎo,hé,jiào,pí,gǎn,pào,zhòu,jūn,qiú,cūn,què,zhā,gǔ,jūn,jūn,zhòu,zhā,gǔ,zhāo,dú,mǐn,qǐ,yíng,yú,bēi,diào,zhōng,pén,hé,yíng,hé,yì,bō,wǎn,hé,àng,zhǎn,yán,jiān,hé,yū,kuī,fàn,gài,dào,pán,fǔ,qiú,shèng,dào,lù,zhǎn,méng,lí,jìn,xù,jiān,pán,guàn,ān,lú,xǔ,zhōu,dàng,ān,gǔ,lì,mù,dīng,gàn,xū,máng,máng,zhí,qì,yuǎn,xián,xiāng,dǔn,xīn,xì,pàn,fēng,dùn,mín,míng,shěng,shì,yún,miǎn,pān,fǎng,miǎo,dān,méi,mào,kàn,xiàn,kōu,shì,yāng,zhēng,yǎo,shēn,huò,dà,zhěn,kuàng,jū,shèn,yí,shěng,mèi,mò,zhù,zhēn,zhēn,mián,shì,yuān,dié,nì,zì,zì,chǎo,zhǎ,xuàn,bǐng,pàng,lóng,guì,tóng,mī,dié,dì,nè,míng,xuàn,chī,kuàng,juàn,móu,zhèn,tiào,yáng,yǎn,mò,zhòng,mò,zhuó,zhēng,méi,suō,qiáo,hàn,huǎn,dì,chěng,cuó,juàn,é,miǎn,xiàn,xī,kùn,lài,jiǎn,shǎn,tiǎn,gùn,wān,lèng,shì,qióng,lì,yá,jīng,zhēng,lí,lài,suì,juàn,shuì,huī,dū,bì,bì,mù,hūn,nì,lù,yì,jié,cǎi,zhǒu,yú,hūn,mà,xià,xǐng,huī,hùn,zāi,chǔn,jiān,mèi,dǔ,hóu,xuān,tí,kuí,gāo,ruì,mào,xù,fá,wò,miáo,chǒu,guì,mī,wěng,kòu,dàng,chēn,kē,sǒu,xiā,qióng,mò,míng,mán,fèn,zé,zhàng,yì,diāo,kōu,mò,shùn,cōng,lóu,chī,mán,piǎo,chēng,guī,méng,wàn,rún,piē,xī,qiáo,pú,zhǔ,dèng,shěn,shùn,liǎo,chè,xián,kàn,yè,xuè,tóng,wǔ,lín,guì,jiàn,yè,ài,huì,zhān,jiǎn,gǔ,zhào,qú,wéi,chǒu,sào,nǐng,xūn,yào,huò,mēng,mián,pín,mián,lěi,kuàng,jué,xuān,mián,huò,lú,méng,lóng,guàn,mǎn,xǐ,chù,tǎng,kàn,zhǔ,máo,jīn,jīn,yù,shuò,zé,jué,shǐ,yǐ,shěn,zhī,hóu,shěn,yǐng,jǔ,zhōu,jiǎo,cuó,duǎn,ǎi,jiǎo,zēng,yuē,bà,shí,dìng,qì,jī,zǐ,gān,wù,zhé,kū,gāng,xī,fán,kuàng,dàng,mǎ,shā,dān,jué,lì,fū,mín,è,xū,kāng,zhǐ,qì,kǎn,jiè,pīn,è,yà,pī,zhé,yán,suì,zhuān,chē,dùn,wǎ,yàn,jīn,fēng,fǎ,mò,zhǎ,jū,yù,kē,tuó,tuó,dǐ,zhài,zhēn,ě,fú,mǔ,zhù,lì,biān,nǔ,pīng,pēng,líng,pào,lè,pò,bō,pò,shēn,zá,ài,lì,lóng,tóng,yòng,lì,kuàng,chǔ,kēng,quán,zhū,kuāng,guī,è,náo,qià,lù,wěi,ài,luò,kèn,xíng,yán,dòng,pēng,xī,lǎo,hóng,shuò,xiá,qiāo,qíng,wéi,qiáo,yì,kēng,xiāo,què,chàn,láng,hōng,yù,xiāo,xiá,mǎng,luò,yǒng,chē,chè,wò,liú,yìng,máng,què,yàn,shā,kǔn,yù,chì,huā,lǔ,chěn,jiǎn,nüè,sōng,zhuó,kēng,péng,yān,zhuì,kōng,chēng,qí,zòng,qìng,lín,jūn,bō,dìng,mín,diāo,jiān,hè,lù,ài,suì,què,léng,bēi,yín,duì,wǔ,qí,lún,wǎn,diǎn,náo,bèi,qì,chěn,ruǎn,yán,dié,dìng,zhóu,tuó,jié,yīng,biǎn,kè,bì,wěi,shuò,zhēn,duàn,xiá,dàng,tí,nǎo,pèng,jiǎn,dì,tàn,chá,tián,qì,dùn,fēng,xuàn,què,què,mǎ,gōng,niǎn,sù,é,cí,liú,sī,táng,bàng,huá,pī,kuǐ,sǎng,lěi,cuō,tián,xiá,xī,lián,pán,wèi,yǔn,duī,zhé,kē,lá,zhuān,yáo,gǔn,zhuān,chán,qì,áo,pēng,liù,lǔ,kàn,chuǎng,chěn,yīn,lěi,biāo,qì,mó,qì,cuī,zōng,qìng,chuò,lún,jī,shàn,láo,qú,zēng,dèng,jiàn,xì,lín,dìng,diàn,huáng,pán,jí,qiāo,dī,lì,jiàn,jiāo,xī,zhǎng,qiáo,dūn,jiǎn,yù,zhuì,hé,kè,zé,léi,jié,chǔ,yè,què,dàng,yǐ,jiāng,pī,pī,yù,pīn,è,ài,kē,jiān,yù,ruǎn,méng,pào,cí,bō,yǎng,miè,cǎ,xián,kuàng,léi,lěi,zhì,lì,lì,fán,què,pào,yīng,lì,lóng,lóng,mò,bó,shuāng,guàn,jiān,cǎ,yán,shì,shì,lǐ,réng,shè,yuè,sì,qí,tā,mà,xiè,yāo,xiān,zhǐ,qí,zhǐ,bēng,duì,zhòng,rèn,yī,shí,yòu,zhì,tiáo,fú,fù,mì,zǔ,zhī,suàn,mèi,zuò,qū,hù,zhù,shén,suì,cí,chái,mí,lǚ,yǔ,xiáng,wú,tiāo,piào,zhù,guǐ,xiá,zhī,jì,gào,zhēn,gào,shuì,jìn,shèn,gāi,kǔn,dì,dǎo,huò,táo,qí,gù,guàn,zuì,líng,lù,bǐng,jīn,dǎo,zhí,lù,chán,bì,chǔ,huī,yǒu,xì,yīn,zī,huò,zhēn,fú,yuàn,xú,xiǎn,shāng,tí,yī,méi,sī,dì,bèi,zhuó,zhēn,yíng,jì,gào,táng,sī,mà,tà,fù,xuān,qí,yù,xǐ,jī,sì,shàn,dàn,guì,suì,lǐ,nóng,mí,dǎo,lì,ráng,yuè,tí,zàn,lèi,róu,yǔ,yú,lí,xiè,qín,hé,tū,xiù,sī,rén,tū,zǐ,chá,gǎn,yì,xiān,bǐng,nián,qiū,qiū,zhǒng,fèn,hào,yún,kē,miǎo,zhī,jīng,bǐ,zhǐ,yù,mì,kù,bàn,pī,ní,lì,yóu,zū,pī,bó,líng,mò,chèng,nián,qín,yāng,zuó,zhì,dī,shú,jù,zǐ,huó,jī,chēng,tóng,shì,huó,huō,yīn,zī,zhì,jiē,rěn,dù,yí,zhū,huì,nóng,fù,xī,gǎo,láng,fū,xùn,shuì,lǚ,kǔn,gǎn,jīng,tí,chéng,tú,shāo,shuì,yà,lǔn,lù,gū,zuó,rěn,zhùn,bàng,bài,jī,zhī,zhì,kǔn,léng,péng,kē,bǐng,chóu,zuì,yù,sū,lüè,xiāng,yī,xì,biǎn,jì,fú,pì,nuò,jiē,zhǒng,zōng,xǔ,chēng,dào,wěn,xián,zī,yù,jì,xù,zhěn,zhì,dào,jià,jī,gǎo,gǎo,gǔ,róng,suì,ròng,jì,kāng,mù,cǎn,mén,zhì,jì,lù,sū,jī,yǐng,wěn,qiū,sè,hè,yì,huáng,qiè,jǐ,suì,xiāo,pú,jiāo,zhuō,tóng,zuō,lǔ,suì,nóng,sè,huì,ráng,nuò,yǔ,pīn,jì,tuí,wěn,chēng,huò,kuàng,lǚ,biāo,sè,ráng,zhuō,lí,cuán,xué,wā,jiū,qióng,xī,qióng,kōng,yū,shēn,jǐng,yào,chuān,zhūn,tū,láo,qiè,zhǎi,yǎo,biǎn,báo,yǎo,bìng,wā,zhú,jiào,qiào,diào,wū,wā,yáo,zhì,chuāng,yào,tiǎo,jiào,chuāng,jiǒng,xiāo,chéng,kòu,cuàn,wō,dàn,kū,kē,zhuó,huò,sū,guān,kuī,dòu,zhuō,yìn,wō,wā,yà,yú,jù,qióng,yáo,yáo,tiǎo,cháo,yǔ,tián,diào,jù,liào,xī,wù,kuī,chuāng,chāo,kuǎn,kuǎn,lóng,chēng,cuì,liáo,zào,cuàn,qiào,qióng,dòu,zào,lǒng,qiè,lì,chù,shí,fù,qiān,chù,hóng,qí,háo,shēng,fēn,shù,miào,qǔ,zhàn,zhù,líng,lóng,bìng,jìng,jìng,zhāng,bǎi,sì,jùn,hóng,tóng,sǒng,jìng,diào,yì,shù,jìng,qǔ,jié,píng,duān,lí,zhuǎn,céng,dēng,cūn,wāi,jìng,kǎn,jìng,zhú,zhú,lè,péng,yú,chí,gān,máng,zhú,wán,dǔ,jī,jiǎo,bā,suàn,jí,qǐn,zhào,sǔn,yá,zhuì,yuán,hù,háng,xiào,cén,pí,bǐ,jiǎn,yǐ,dōng,shān,shēng,dā,dí,zhú,nà,chī,gū,lì,qiè,mǐn,bāo,tiáo,sì,fú,cè,bèn,fá,dá,zǐ,dì,líng,zuó,nú,fú,gǒu,fán,jiā,gě,fàn,shǐ,mǎo,pǒ,tì,jiān,qióng,lóng,mǐn,biān,luò,guì,qū,chí,yīn,yào,xiǎn,bǐ,qióng,kuò,děng,jiǎo,jīn,quán,sǔn,rú,fá,kuāng,zhù,tǒng,jī,dá,háng,cè,zhòng,kòu,lái,bì,shāi,dāng,zhēng,cè,fū,yún,tú,pá,lí,láng,jǔ,guǎn,jiǎn,hán,tǒng,xiá,zhì,chéng,suàn,shì,zhù,zuó,xiǎo,shāo,tíng,cè,yán,gào,kuài,gān,chóu,kuāng,gàng,yún,o,qiān,xiǎo,jiǎn,póu,lái,zōu,pái,bì,bì,gè,tái,guǎi,yū,jiān,zhào,gū,chí,zhēng,qìng,shà,zhǒu,lù,bó,jī,lín,suàn,jùn,fú,zhá,gū,kōng,qián,quān,jùn,chuí,guǎn,wǎn,cè,zú,pǒ,zé,qiè,tuò,luó,dān,xiāo,ruò,jiàn,xuān,biān,sǔn,xiāng,xiǎn,píng,zhēn,xīng,hú,shī,zhù,yuē,chūn,lǜ,wū,dǒng,shuò,jí,jié,huáng,xīng,mèi,fàn,chuán,zhuàn,piān,fēng,zhù,hóng,qiè,hóu,qiū,miǎo,qiàn,gū,kuì,yì,lǒu,yún,hé,táng,yuè,chōu,gāo,fěi,ruò,zhēng,gōu,niè,qiàn,xiǎo,cuàn,gōng,péng,dǔ,lì,bì,zhuó,chú,shāi,chí,zhù,qiāng,lóng,lán,jiǎn,bù,lí,huì,bì,zhú,cōng,yān,péng,cēn,zhuàn,pí,piǎo,dōu,yù,miè,tuán,zé,shāi,guó,yí,hù,chǎn,kòu,cù,píng,zào,jī,guǐ,sù,lǒu,cè,lù,niǎn,suō,cuàn,diāo,suō,lè,duàn,zhù,xiāo,bó,mì,shāi,dàng,liáo,dān,diàn,fǔ,jiǎn,mǐn,kuì,dài,jiāo,dēng,huáng,sǔn,láo,zān,xiāo,lù,shì,zān,qí,pái,qí,pái,gǎn,jù,lù,lù,yán,bò,dāng,sài,zhuā,gōu,qiān,lián,bù,zhòu,lài,shi,lán,kuì,yú,yuè,háo,zhēn,tái,tì,niè,chóu,jí,yí,qí,téng,zhuàn,zhòu,fān,sǒu,zhòu,qiān,zhuó,téng,lù,lú,jiǎn,tuò,yíng,yù,lài,lóng,qiè,lián,lán,qiān,yuè,zhōng,qú,lián,biān,duàn,zuǎn,lí,shāi,luó,yíng,yuè,zhuó,yù,mǐ,dí,fán,shēn,zhé,shēn,nǚ,hé,lèi,xiān,zǐ,ní,cùn,zhàng,qiān,zhāi,bǐ,bǎn,wù,shā,kāng,róu,fěn,bì,cuì,yǐn,zhé,mǐ,tà,hù,bā,lì,gān,jù,pò,yù,cū,zhān,zhòu,chī,sù,tiào,lì,xī,sù,hóng,tóng,zī,cè,yuè,zhōu,lín,zhuāng,bǎi,lāo,fèn,ér,qū,hé,liáng,xiàn,fū,liáng,càn,jīng,lǐ,yuè,lù,jú,qí,cuì,bài,zhāng,lín,zòng,jīng,guǒ,huā,sǎn,shēn,táng,biān,róu,miàn,hóu,xǔ,zòng,hū,jiàn,zān,cí,lí,xiè,fū,nuò,bèi,gǔ,xiǔ,gāo,táng,qiǔ,jiā,cāo,zhuāng,táng,mí,sǎn,fèn,zāo,kāng,jiàng,mó,sǎn,sǎn,nuò,xī,liáng,jiàng,kuài,bó,huán,shǔ,zòng,xiàn,nuò,tuán,niè,lì,zuò,dí,niè,tiào,làn,mì,sī,jiū,xì,gōng,zhēng,jiū,gōng,jì,chà,zhòu,xún,yuē,hóng,yū,hé,wán,rèn,wěn,wén,qiú,nà,zī,tǒu,niǔ,fóu,jì,shū,chún,pī,zhèn,shā,hóng,zhǐ,jí,fēn,yún,rèn,dǎn,jīn,sù,fǎng,suǒ,cuì,jiǔ,zhā,hā,jǐn,fū,zhì,qī,zǐ,chōu,hóng,zhā,léi,xì,fú,xiè,shēn,bō,zhù,qū,líng,zhù,shào,gàn,yǎng,fú,tuó,zhěn,dài,chù,shī,zhōng,xián,zǔ,jiōng,bàn,qú,mò,shù,zuì,kuàng,jīng,rèn,háng,xiè,jié,zhū,chóu,guà,bǎi,jué,kuàng,hú,cì,huán,gēng,tāo,xié,kù,jiǎo,quán,gǎi,luò,xuàn,bēng,xiàn,fú,gěi,tōng,róng,tiào,yīn,lěi,xiè,juàn,xù,gāi,dié,tǒng,sī,jiàng,xiáng,huì,jué,zhí,jiǎn,juàn,chī,miǎn,zhèn,lǚ,chéng,qiú,shū,bǎng,tǒng,xiāo,huán,qīn,gěng,xū,tí,xiù,xié,hóng,xì,fú,tīng,suí,duì,kǔn,fū,jīng,hù,zhī,yán,jiǒng,féng,jì,xù,rěn,zōng,lín,duǒ,lì,lǜ,jīng,chóu,quǎn,shào,qí,qí,zhǔn,jī,wǎn,qiàn,xiàn,shòu,wéi,qìng,táo,wǎn,gāng,wǎng,bēng,zhuì,cǎi,guǒ,cuì,lún,liǔ,qǐ,zhàn,bì,chuò,líng,mián,qī,jī,tián,zōng,gǔn,zōu,xī,zī,xìng,liǎng,jǐn,fēi,ruí,mín,yù,zǒng,fán,lǜ,xù,yīng,shàng,zī,xù,xiāng,jiān,kè,xiàn,ruǎn,mián,jī,duàn,chóng,dì,mín,miáo,yuán,xiè,bǎo,sī,qiū,biān,huǎn,gēng,zǒng,miǎn,wèi,fù,wěi,tōu,gōu,miǎo,xié,liàn,zōng,biàn,gǔn,yīn,tí,guā,zhì,yùn,chēng,chán,dài,xié,yuán,zǒng,xū,shéng,wēi,gēng,xuān,yíng,jìn,yì,zhuì,nì,bāng,gǔ,pán,zhòu,jiān,cī,quán,shuǎng,yùn,xiá,cuī,xì,róng,tāo,fù,yún,zhěn,gǎo,rù,hú,zài,téng,xiàn,sù,zhěn,zòng,tāo,huǎng,cài,bì,féng,cù,lí,suō,yǎn,xǐ,zòng,léi,zhuàn,qiàn,màn,zhí,lǚ,mù,piǎo,lián,mí,xuàn,zǒng,jì,shān,suì,fán,lǜ,bēng,yī,sāo,móu,yáo,qiǎng,shéng,xiān,jì,zōng,xiù,rán,xuàn,suì,qiāo,zēng,zuǒ,zhī,shàn,sǎn,lín,jú,fān,liáo,chuō,zūn,jiàn,rào,chǎn,ruǐ,xiù,huì,huà,zuǎn,xī,qiǎng,wén,da,shéng,huì,xì,sè,jiǎn,jiāng,huán,qiāo,cōng,xiè,jiǎo,bì,dàn,yì,nǒng,suì,yì,shā,rú,jì,bīn,qiǎn,lán,pú,xūn,zuǎn,zī,péng,yào,mò,lèi,xiè,zuǎn,kuàng,yōu,xù,léi,xiān,chán,jiǎo,lú,chán,yīng,cái,xiāng,xiān,zuī,zuǎn,luò,lí,dào,lǎn,léi,liàn,sī,jiū,yū,hóng,zhòu,xiān,hé,yuē,jí,wán,kuàng,jì,rèn,wěi,yún,hóng,chún,pī,shā,gāng,nà,rèn,zòng,lún,fēn,zhǐ,wén,fǎng,zhù,zhèn,niǔ,shū,xiàn,gàn,xiè,fú,liàn,zǔ,shēn,xì,zhī,zhōng,zhòu,bàn,fú,chù,shào,yì,jīng,dài,bǎng,róng,jié,kù,rào,dié,háng,huì,gěi,xuàn,jiàng,luò,jué,jiǎo,tǒng,gěng,xiāo,juàn,xiù,xì,suí,tāo,jì,tí,jì,xù,líng,yīng,xù,qǐ,fēi,chuò,shàng,gǔn,shéng,wéi,mián,shòu,bēng,chóu,táo,liǔ,quǎn,zōng,zhàn,wǎn,lǜ,zhuì,zī,kè,xiāng,jiān,miǎn,lǎn,tí,miǎo,jī,yùn,huì,sī,duǒ,duàn,biàn,xiàn,gōu,zhuì,huǎn,dì,lǚ,biān,mín,yuán,jìn,fù,rù,zhěn,féng,cuī,gǎo,chán,lí,yì,jiān,bīn,piǎo,màn,léi,yīng,suō,móu,sāo,xié,liáo,shàn,zēng,jiāng,qiǎn,qiāo,huán,jiǎo,zuǎn,fǒu,xiè,gāng,fǒu,quē,fǒu,quē,bō,píng,xiàng,zhào,gāng,yīng,yīng,qìng,xià,guàn,zūn,tán,chēng,qì,wèng,yīng,léi,tán,lú,guàn,wǎng,wǎng,wǎng,wǎng,hǎn,wǎng,luó,fú,shēn,fá,gū,zhǔ,jū,máo,gǔ,mín,gāng,bà,guà,tí,juàn,fú,shēn,yǎn,zhào,zuì,guǎi,zhuó,yù,zhì,ǎn,fá,lǎn,shǔ,sī,pí,mà,liǔ,bà,fá,lí,cháo,wèi,bì,jì,zēng,chōng,liǔ,jī,juàn,mì,zhào,luó,pí,jī,jī,luán,yáng,mǐ,qiāng,dá,měi,yáng,líng,yǒu,fén,bā,gāo,yàng,gǔ,qiāng,zāng,měi,líng,yì,zhù,dī,xiū,qiǎng,yí,xiàn,róng,qún,qún,qiǎng,huán,suō,xiàn,yì,yōu,qiāng,qián,yú,gēng,jié,tāng,yuán,xī,fán,shān,fén,shān,liǎn,léi,gēng,nóu,qiàng,chàn,yǔ,hóng,yì,chōng,wēng,fēn,hóng,chì,chì,cuì,fú,xiá,běn,yì,là,yì,pī,líng,liù,zhì,qú,xí,xié,xiáng,xī,xī,ké,qiáo,huì,huī,xiāo,shà,hóng,jiāng,dí,cuì,fěi,dào,shà,chì,zhù,jiǎn,xuān,chì,piān,zōng,wán,huī,hóu,hé,hè,hàn,áo,piāo,yì,lián,hóu,áo,lín,pěn,qiáo,áo,fān,yì,huì,xuān,dào,yào,lǎo,lǎo,kǎo,mào,zhě,qí,gǒu,gǒu,gǒu,dié,dié,ér,shuǎ,ruǎn,ér,nài,duān,lěi,tīng,zǐ,gēng,chào,hào,yún,bà,pī,sì,sì,qù,jiā,jù,huō,chú,lào,lún,jí,tǎng,ǒu,lóu,nòu,jiǎng,pǎng,zhá,lóu,jī,lào,huò,yōu,mò,huái,ěr,yì,dīng,yé,dā,sǒng,qín,yún,chǐ,dān,dān,hóng,gěng,zhí,pàn,niè,dān,zhěn,chè,líng,zhēng,yǒu,wà,liáo,lóng,zhí,níng,tiāo,ér,yà,tiē,guō,xù,lián,hào,shèng,liè,pìn,jīng,jù,bǐ,dǐ,guó,wén,xù,pīng,cōng,dìng,ní,tíng,jǔ,cōng,kuī,lián,kuì,cōng,lián,wēng,kuì,lián,lián,cōng,áo,shēng,sǒng,tīng,kuì,niè,zhí,dān,níng,qié,nǐ,tīng,tīng,lóng,yù,yù,zhào,sì,sù,yì,sù,sì,zhào,zhào,ròu,yì,lèi,jī,qiú,kěn,cào,gē,bó,huàn,huāng,chǐ,rèn,xiāo,rǔ,zhǒu,yuān,dù,gāng,róng,gān,chāi,wò,cháng,gǔ,zhī,qín,fū,féi,bān,pēi,pàn,jiān,fáng,zhūn,yóu,nà,āng,kěn,rán,gōng,yù,wěn,yáo,qí,pí,qiǎn,xī,xī,fèi,kěn,jǐng,tài,shèn,zhǒng,zhàng,xié,shèn,wèi,zhòu,dié,dǎn,fèi,bá,bó,qú,tián,bèi,guā,tāi,zǐ,fěi,zhī,nì,píng,zì,fū,pàn,zhēn,xián,zuò,pēi,jiǎ,shèng,zhī,bāo,mǔ,qū,hú,qià,chǐ,yìn,xū,yāng,lóng,dòng,kǎ,lú,jìng,nǔ,yān,pāng,kuà,yí,guāng,hǎi,gē,dòng,chī,jiāo,xiōng,xiōng,ér,àn,héng,pián,néng,zì,guī,zhēng,tiǎo,zhī,cuì,méi,xié,cuì,xié,mài,mài,jǐ,xié,nín,kuài,sà,zàng,qí,nǎo,mǐ,nóng,luán,wàn,bó,wěn,wǎn,xiū,jiǎo,jìng,róu,hēng,cuǒ,liè,shān,tǐng,méi,chún,shèn,jiá,none,juān,cù,xiū,xìn,tuō,pāo,chéng,něi,fǔ,dòu,tuō,niào,nǎo,pǐ,gǔ,luó,lì,liǎn,zhàng,cuī,jiē,liǎng,shuí,pí,biāo,lún,pián,guò,juàn,chuí,dàn,tiǎn,něi,jīng,nái,là,yè,ā,rèn,shèn,zhuì,fǔ,fǔ,jū,féi,qiāng,wàn,dòng,pí,guó,zōng,dìng,wò,méi,ruǎn,zhuàn,chì,còu,luó,ǒu,dì,ān,xīng,nǎo,shù,shuàn,nǎn,yùn,zhǒng,róu,è,sāi,tú,yāo,jiàn,wěi,jiǎo,yú,jiā,duàn,bì,cháng,fù,xiàn,nì,miǎn,wà,téng,tuǐ,bǎng,qiǎn,lǚ,wà,shòu,táng,sù,zhuì,gé,yì,bó,liáo,jí,pí,xié,gāo,lǚ,bìn,ōu,cháng,lù,guó,pāng,chuái,biāo,jiǎng,fū,táng,mó,xī,zhuān,lǜ,jiāo,yìng,lǘ,zhì,xuě,cūn,lìn,tóng,péng,nì,chuài,liáo,cuì,kuì,xiāo,tēng,fán,zhí,jiāo,shàn,hū,cuì,rùn,xiāng,suǐ,fèn,yīng,shān,zhuā,dǎn,kuài,nóng,tún,lián,bì,yōng,jué,chù,yì,juǎn,là,liǎn,sāo,tún,gǔ,qí,cuì,bìn,xūn,nào,wò,zàng,xiàn,biāo,xìng,kuān,là,yān,lú,huò,zā,luǒ,qú,zàng,luán,ní,zā,chén,qiān,wò,guàng,zāng,lín,guǎng,zì,jiǎo,niè,chòu,jì,gāo,chòu,mián,niè,zhì,zhì,gé,jiàn,dié,zhī,xiū,tái,zhēn,jiù,xiàn,yú,chā,yǎo,yú,chōng,xì,xì,jiù,yú,yǔ,xīng,jǔ,jiù,xìn,shé,shè,shè,jiǔ,shì,tān,shū,shì,tiǎn,tàn,pù,pù,guǎn,huà,tiàn,chuǎn,shùn,xiá,wǔ,zhōu,dāo,chuán,shān,yǐ,fán,pā,tài,fán,bǎn,chuán,háng,fǎng,bān,bǐ,lú,zhōng,jiàn,cāng,líng,zhú,zé,duò,bó,xián,gě,chuán,xiá,lú,qióng,páng,xī,kuā,fú,zào,féng,lí,shāo,yú,láng,tǐng,yù,wěi,bó,měng,niàn,jū,huáng,shǒu,kè,biàn,mù,dié,dào,bàng,chā,yì,sōu,cāng,cáo,lóu,dài,xuě,yào,chōng,dēng,dāng,qiáng,lǔ,yǐ,jí,jiàn,huò,méng,qí,lǔ,lú,chán,shuāng,gèn,liáng,jiān,jiān,sè,yàn,fú,pīng,yàn,yàn,cǎo,ǎo,yì,lè,dǐng,jiāo,ài,nǎi,tiáo,qiú,jié,péng,wán,yì,chā,mián,mǐ,gǎn,qiān,yù,yù,sháo,xiōng,dù,hù,qǐ,máng,zì,huì,suī,zhì,xiāng,bì,fú,tún,wěi,wú,zhī,qì,shān,wén,qiàn,rén,fú,kōu,jiè,lú,xù,jī,qín,qí,yuán,fēn,bā,ruì,xīn,jì,huā,lún,fāng,wù,jué,gōu,zhǐ,yún,qín,ǎo,chú,máo,yá,fèi,rèng,háng,cōng,chán,yǒu,biàn,yì,qiē,wěi,lì,pǐ,è,xiàn,cháng,cāng,zhù,sū,dì,yuàn,rǎn,líng,tái,tiáo,dí,miáo,qǐng,lì,yòng,kē,mù,bèi,bāo,gǒu,mín,yǐ,yǐ,jù,piě,ruò,kǔ,zhù,nǐ,pā,bǐng,shān,xiú,yǎo,xiān,běn,hóng,yīng,zuó,dōng,jū,dié,nié,gān,hū,píng,méi,fú,shēng,gū,bì,wèi,fú,zhuó,mào,fàn,qié,máo,máo,bá,zǐ,mò,zī,zhǐ,chí,jì,jīng,lóng,cōng,niǎo,yuán,xué,yíng,qióng,gè,míng,lì,róng,yìn,gèn,qiàn,chǎi,chén,yù,hāo,zì,liè,wú,jì,guī,cì,jiǎn,cí,hòu,guāng,máng,chá,jiāo,jiāo,fú,yú,zhū,zī,jiāng,huí,yīn,chá,fá,róng,rú,chōng,mǎng,tóng,zhòng,qiān,zhú,xún,huán,fū,quán,gāi,dá,jīng,xìng,chuǎn,cǎo,jīng,ér,àn,qiáo,chí,rěn,jiàn,yí,huāng,píng,lì,jīn,lǎo,shù,zhuāng,dá,jiá,ráo,bì,cè,qiáo,huì,jì,dàng,zì,róng,hūn,xíng,luò,yíng,qián,jìn,sūn,yīn,mǎi,hóng,zhòu,yào,dù,wěi,lí,dòu,fū,rěn,yín,hé,bí,bù,yǔn,dí,tú,suī,suī,chéng,chén,wú,bié,xī,gěng,lì,pú,zhù,mò,lì,zhuāng,zuó,tuō,qiú,suō,suō,chén,péng,jǔ,méi,méng,xìng,jìng,chē,shēn,jūn,yán,tíng,yóu,cuò,guān,hàn,yǒu,cuò,jiá,wáng,sù,niǔ,shāo,xiàn,làng,fú,é,mò,wèn,jié,nán,mù,kǎn,lái,lián,shì,wō,tù,xiān,huò,yóu,yíng,yīng,gòng,chún,mǎng,mǎng,cì,wǎn,jīng,dì,qú,dōng,jiān,zōu,gū,lā,lù,jú,wèi,jūn,niè,kūn,hé,pú,zī,gǎo,guǒ,fú,lún,chāng,chóu,sōng,chuí,zhàn,mén,cài,bá,lí,tù,bō,hàn,bào,qìn,juǎn,xī,qín,dǐ,jiē,pú,dàng,jǐn,qiáo,tái,gēng,huá,gū,líng,fēi,qín,ān,wǎng,běng,zhǒu,yān,zū,jiān,lǐn,tǎn,shū,tián,dào,hǔ,qí,hé,cuì,táo,chūn,bì,cháng,huán,fèi,lái,qī,méng,píng,wěi,dàn,shà,huán,yǎn,yí,tiáo,qí,wǎn,cè,nài,zhěn,tuò,jiū,tiē,luó,bì,yì,pān,bó,pāo,dìng,yíng,yíng,yíng,xiāo,sà,qiū,kē,xiāng,wàn,yǔ,yú,fù,liàn,xuān,xuān,nǎn,cè,wō,chǔn,shāo,yú,biān,mào,ān,è,là,yíng,kuò,kuò,jiāng,miǎn,zuò,zuò,zū,bǎo,róu,xǐ,yè,ān,qú,jiān,fú,lǜ,jīng,pén,fēng,hóng,hóng,hóu,xìng,tū,zhù,zī,xiāng,shèn,gé,qiā,qíng,mǐ,huáng,shēn,pú,gài,dǒng,zhòu,qián,wěi,bó,wēi,pā,jì,hú,zàng,jiā,duàn,yào,jùn,cōng,quán,wēi,zhēn,kuí,tíng,hūn,xǐ,shī,qì,lán,zōng,yāo,yuān,méi,yūn,shù,dì,zhuàn,guān,rǎn,xuē,chǎn,kǎi,kuì,huā,jiǎng,lóu,wěi,pài,yòng,sōu,yīn,shī,chún,shì,yūn,zhēn,làng,rú,mēng,lì,quē,suàn,yuán,lì,jǔ,xī,bàng,chú,xú,tú,liú,huò,diǎn,qiàn,zū,pò,cuó,yuān,chú,yù,kuǎi,pán,pú,pú,nà,shuò,xí,fén,yún,zhēng,jiān,jí,ruò,cāng,ēn,mí,hāo,sūn,zhēn,míng,sōu,xù,liú,xí,gū,láng,róng,wěng,gài,cuò,shī,táng,luǒ,rù,suō,xuān,bèi,yǎo,guì,bì,zǒng,gǔn,zuò,tiáo,cè,pèi,lán,dàn,jì,lí,shēn,lǎng,yù,líng,yíng,mò,diào,tiáo,mǎo,tōng,zhú,péng,ān,lián,cōng,xǐ,píng,qiū,jǐn,chún,jié,wéi,tuī,cáo,yù,yì,zí,liǎo,bì,lǔ,xù,bù,zhāng,léi,qiáng,màn,yán,líng,jì,biāo,gǔn,hàn,dí,sù,lù,shè,shāng,dí,miè,hūn,màn,bo,dì,cuó,zhè,shēn,xuàn,wèi,hú,áo,mǐ,lóu,cù,zhōng,cài,pó,jiǎng,mì,cōng,niǎo,huì,juàn,yín,jiān,niān,shū,yīn,guó,chén,hù,shā,kòu,qiàn,má,zàng,zé,qiáng,dōu,liǎn,lìn,kòu,ǎi,bì,lí,wěi,jí,qián,shèng,fán,méng,ǒu,chǎn,diǎn,xùn,jiāo,ruǐ,ruǐ,lěi,yú,qiáo,zhū,huá,jiān,mǎi,yún,bāo,yóu,qú,lù,ráo,huì,è,tí,fěi,jué,zuì,fà,rú,fén,kuì,shùn,ruí,yǎ,xū,fù,jué,dàng,wú,dǒng,sī,xiāo,xì,sà,yùn,shāo,qí,jiān,yùn,sūn,líng,yù,xiá,wèng,jí,hòng,sì,nóng,lěi,xuān,yùn,yù,xí,hào,báo,hāo,ài,wēi,huì,huì,jì,cí,xiāng,wàn,miè,yì,léng,jiāng,càn,shēn,qiáng,lián,kē,yuán,dá,tì,tāng,xuē,bì,zhān,sūn,xiān,fán,dǐng,xiè,gǔ,xiè,shǔ,jiàn,hāo,hōng,sà,xīn,xūn,yào,bài,sǒu,shǔ,xūn,duì,pín,yuǎn,níng,chóu,mái,rú,piáo,tái,jì,zǎo,chén,zhēn,ěr,nǐ,yíng,gǎo,cóng,xiāo,qí,fá,jiǎn,xù,kuí,jiè,biǎn,diào,mí,lán,jìn,cáng,miǎo,qióng,qì,xiǎn,liáo,ǒu,xián,sù,lǘ,yì,xù,xiě,lí,yì,lǎ,lěi,jiào,dí,zhǐ,bēi,téng,yào,mò,huàn,biāo,fān,sǒu,tán,tuī,qióng,qiáo,wèi,liú,huì,ōu,gǎo,yùn,bǎo,lì,shǔ,zhū,ǎi,lìn,zǎo,xuān,qìn,lài,huò,tuò,wù,ruǐ,ruǐ,qí,héng,lú,sū,tuí,máng,yùn,pín,yù,xūn,jì,jiōng,xuān,mó,qiū,sū,jiōng,péng,niè,bò,ráng,yì,xiǎn,yú,jú,liǎn,liǎn,yǐn,qiáng,yīng,lóng,tǒu,huā,yuè,lìng,qú,yáo,fán,mí,lán,guī,lán,jì,dàng,màn,lèi,léi,huī,fēng,zhī,wèi,kuí,zhàn,huái,lí,jì,mí,lěi,huài,luó,jī,kuí,lù,jiān,sà,téng,léi,quǎn,xiāo,yì,luán,mén,biē,hū,hǔ,lǔ,nüè,lǜ,sī,xiāo,qián,chǔ,hū,xū,cuó,fú,xū,xū,lǔ,hǔ,yú,hào,jiāo,jù,guó,bào,yán,zhàn,zhàn,kuī,bīn,xì,shù,chóng,qiú,diāo,jǐ,qiú,dīng,shī,xiā,jué,zhé,shé,yú,hán,zǐ,hóng,huǐ,méng,gè,suī,xiā,chài,shí,yǐ,mǎ,xiǎng,fāng,è,bā,chǐ,qiān,wén,wén,ruì,bàng,pí,yuè,yuè,jūn,qí,tóng,yǐn,qí,cán,yuán,jué,huí,qín,qí,zhòng,yá,háo,mù,wáng,fén,fén,háng,gōng,zǎo,fù,rán,jiè,fú,chī,dǒu,bào,xiǎn,ní,dài,qiū,yóu,zhà,píng,chí,yòu,kē,hān,jù,lì,fù,rán,zhá,gǒu,pí,pí,xián,zhù,diāo,bié,bīng,gū,zhān,qū,shé,tiě,líng,gǔ,dàn,tún,yíng,lì,chēng,qū,móu,gé,cì,huí,huí,máng,fù,yáng,wā,liè,zhū,yī,xián,kuò,jiāo,lì,yì,píng,jié,gé,shé,yí,wǎng,mò,qióng,qiè,guǐ,qióng,zhì,mán,lǎo,zhé,jiá,náo,sī,qí,xíng,jiè,qiú,xiāo,yǒng,jiá,tuì,chē,bèi,é,hàn,shǔ,xuán,fēng,shèn,shèn,fǔ,xiǎn,zhé,wú,fú,lì,láng,bì,chú,yuān,yǒu,jié,dàn,yán,tíng,diàn,tuì,huí,wō,zhī,zhōng,fēi,jū,mì,qí,qí,yù,jùn,là,měng,qiāng,sī,xī,lún,lì,dié,tiáo,táo,kūn,hán,hàn,yù,bàng,féi,pí,wēi,dūn,yì,yuān,suò,quán,qiǎn,ruì,ní,qīng,wèi,liǎng,guǒ,wān,dōng,è,bǎn,dì,wǎng,cán,yǎng,yíng,guō,chán,dìng,là,kē,jí,xiē,tíng,mào,xū,mián,yú,jiē,shí,xuān,huáng,yǎn,biān,róu,wēi,fù,yuán,mèi,wèi,fú,rú,xié,yóu,qiú,máo,xiā,yīng,shī,chóng,tāng,zhū,zōng,dì,fù,yuán,kuí,méng,là,dài,hú,qiū,dié,lì,wō,yūn,qǔ,nǎn,lóu,chūn,róng,yíng,jiāng,bān,láng,páng,sī,xī,cì,xī,yuán,wēng,lián,sǒu,bān,róng,róng,jí,wū,xiù,hàn,qín,yí,bī,huá,táng,yǐ,dù,nài,hé,hú,guì,mǎ,míng,yì,wén,yíng,téng,zhōng,cāng,sāo,qí,mǎn,dāo,shāng,shì,cáo,chī,dì,áo,lù,wèi,dié,táng,chén,piāo,qú,pí,yú,chán,luó,lóu,qǐn,zhōng,yǐn,jiāng,shuài,wén,xiāo,wàn,zhé,zhè,má,má,guō,liú,máo,xī,cōng,lí,mǎn,xiāo,chán,zhāng,mǎng,xiàng,mò,zuī,sī,qiū,tè,zhí,péng,péng,jiǎo,qú,biē,liáo,pán,guǐ,xǐ,jǐ,zhuān,huáng,fèi,láo,jué,jué,huì,yín,chán,jiāo,shàn,náo,xiāo,wú,chóng,xún,sī,chú,chēng,dāng,lí,xiè,shàn,yǐ,jǐng,dá,chán,qì,cī,xiǎng,shè,luǒ,qín,yíng,chài,lì,zéi,xuān,lián,zhú,zé,xiē,mǎng,xiè,qí,róng,jiǎn,měng,háo,rú,huò,zhuó,jié,pín,hē,miè,fán,lěi,jié,là,mǐn,lǐ,chǔn,lì,qiū,niè,lú,dù,xiāo,zhū,lóng,lí,lóng,fēng,yē,pí,náng,gǔ,juān,yīng,shǔ,xī,cán,qú,quán,dù,cán,mán,qú,jié,zhú,zhuó,xiě,huāng,nǜ,pēi,nǜ,xìn,zhòng,mài,ěr,kè,miè,xì,háng,yǎn,kàn,yuàn,qú,líng,xuàn,shù,xián,tòng,xiàng,jiē,xián,yá,hú,wèi,dào,chōng,wèi,dào,zhūn,héng,qú,yī,yī,bǔ,gǎn,yú,biǎo,chà,yì,shān,chèn,fū,gǔn,fēn,shuāi,jié,nà,zhōng,dǎn,rì,zhòng,zhōng,jiè,zhǐ,xié,rán,zhī,rèn,qīn,jīn,jūn,yuán,mèi,chài,ǎo,niǎo,huī,rán,jiā,tuó,lǐng,dài,bào,páo,yào,zuò,bì,shào,tǎn,jù,hè,xué,xiù,zhěn,yí,pà,fú,dī,wà,fù,gǔn,zhì,zhì,rán,pàn,yì,mào,tuō,nà,gōu,xuàn,zhé,qū,bèi,yù,xí,mí,bó,bō,fú,chǐ,chǐ,kù,rèn,péng,jiá,jiàn,bó,jié,ér,gē,rú,zhū,guī,yīn,cái,liè,kǎ,háng,zhuāng,dāng,xū,kūn,kèn,niǎo,shù,jiá,kǔn,chéng,lǐ,juān,shēn,póu,gé,yì,yù,zhěn,liú,qiú,qún,jì,yì,bǔ,zhuāng,shuì,shā,qún,lǐ,lián,liǎn,kù,jiǎn,bāo,chān,bì,kūn,táo,yuàn,líng,chǐ,chāng,chóu,duō,biǎo,liǎng,cháng,péi,péi,fēi,yuān,luǒ,guǒ,yǎn,dú,xī,zhì,jū,yǐ,qí,guǒ,guà,kèn,qī,tì,tí,fù,chóng,xiè,biǎn,dié,kūn,duān,xiù,xiù,hè,yuàn,bāo,bǎo,fù,yú,tuàn,yǎn,huī,bèi,zhǔ,lǚ,páo,dān,yùn,tā,gōu,dā,huái,róng,yuán,rù,nài,jiǒng,suǒ,bān,tuì,chǐ,sǎng,niǎo,yīng,jiè,qiān,huái,kù,lián,lán,lí,zhě,shī,lǚ,yì,diē,xiè,xiān,wèi,biǎo,cáo,jì,qiǎng,sēn,bāo,xiāng,bì,fú,jiǎn,zhuàn,jiǎn,cuì,jí,dān,zá,fán,bó,xiàng,xín,bié,ráo,mǎn,lán,ǎo,zé,guì,cào,suì,nóng,chān,liǎn,bì,jīn,dāng,shǔ,tǎn,bì,lán,fú,rú,zhǐ,dùi,shǔ,wà,shì,bǎi,xié,bó,chèn,lǎi,lóng,xí,xiān,lán,zhě,dài,jǔ,zàn,shī,jiǎn,pàn,yì,lán,yà,xī,yà,yào,fěng,tán,fù,fiào,fù,bà,hé,jī,jī,jiàn,guān,biàn,yàn,guī,jué,piǎn,mào,mì,mì,piē,shì,sì,chān,zhěn,jué,mì,tiào,lián,yào,zhì,jūn,xī,shǎn,wēi,xì,tiǎn,yú,lǎn,è,dǔ,qīn,pǎng,jì,míng,yíng,gòu,qū,zhàn,jìn,guān,dèng,jiàn,luó,qù,jiàn,wéi,jué,qù,luó,lǎn,shěn,dí,guān,jiàn,guān,yàn,guī,mì,shì,chān,lǎn,jué,jì,xí,dí,tiǎn,yú,gòu,jìn,qù,jiǎo,qiú,jīn,cū,jué,zhì,chào,jí,gū,dàn,zī,dǐ,shāng,huà,quán,gé,shì,jiě,guǐ,gōng,chù,jiě,hùn,qiú,xīng,sù,ní,jī,jué,zhì,zhā,bì,xīng,hú,shāng,gōng,zhì,xué,chù,xī,yí,lì,jué,xī,yàn,xī,yán,yán,dìng,fù,qiú,qiú,jiào,hōng,jì,fàn,xùn,diào,hòng,chài,tǎo,xū,jié,dàn,rèn,xùn,yín,shàn,qì,tuō,jì,xùn,yín,é,fēn,yà,yāo,sòng,shěn,yín,xīn,jué,xiáo,nè,chén,yóu,zhǐ,xiōng,fǎng,xìn,chāo,shè,yán,sǎ,zhùn,xū,yì,yì,sù,chī,hē,shēn,hé,xù,zhěn,zhù,zhèng,gòu,zī,zǐ,zhān,gǔ,fù,jiǎn,dié,líng,dǐ,yàng,lì,náo,pàn,zhòu,gàn,yì,jù,yào,zhà,tuó,yí,qǔ,zhào,píng,bì,xiòng,qū,bá,dá,zǔ,tāo,zhǔ,cí,zhé,yǒng,xǔ,xún,yì,huǎng,hé,shì,chá,xiào,shī,hěn,chà,gòu,guǐ,quán,huì,jié,huà,gāi,xiáng,wēi,shēn,chóu,tóng,mí,zhān,míng,luò,huī,yán,xiōng,guà,èr,bìng,tiǎo,yí,lěi,zhū,kuāng,kuā,wū,yù,téng,jì,zhì,rèn,cù,lǎng,é,kuáng,ēi,shì,tǐng,dàn,bèi,chán,yòu,kēng,qiào,qīn,shuà,ān,yǔ,xiào,chéng,jiè,xiàn,wū,wù,gào,sòng,bū,huì,jìng,shuō,zhèn,shuō,dú,huā,chàng,shuí,jié,kè,qū,cóng,xiáo,suì,wǎng,xián,fěi,chī,tà,yì,nì,yín,diào,pǐ,zhuó,chǎn,chēn,zhūn,jì,qī,tán,zhuì,wěi,jū,qǐng,dǒng,zhèng,zé,zōu,qiān,zhuó,liàng,jiàn,chù,xià,lùn,shěn,biǎo,huà,biàn,yú,dié,xū,piǎn,shì,xuān,shì,hùn,huà,è,zhòng,dì,xié,fú,pǔ,tíng,jiàn,qǐ,yù,zī,zhuān,xǐ,huì,yīn,ān,xián,nán,chén,fěng,zhū,yáng,yàn,huáng,xuān,gé,nuò,xǔ,móu,yè,wèi,xīng,téng,zhōu,shàn,jiǎn,bó,kuì,huǎng,huò,gē,yíng,mí,xiǎo,mì,xǐ,qiāng,chēn,xuè,tí,sù,bàng,chí,qiān,shì,jiǎng,yuán,xiè,hè,tāo,yáo,yáo,lū,yú,biāo,còng,qǐng,lí,mó,mó,shāng,zhé,miù,jiǎn,zé,jiē,lián,lóu,càn,ōu,gùn,xí,zhuó,áo,áo,jǐn,zhé,yí,hū,jiàng,mán,cháo,hàn,huá,chǎn,xū,zēng,sè,xī,zhā,duì,zhèng,náo,lán,é,yīng,jué,jī,zǔn,jiǎo,bò,huì,zhuàn,wú,zèn,zhá,shí,qiáo,tán,jiàn,pǔ,shéng,xuān,zào,tán,dǎng,suì,xiǎn,jī,jiào,jǐng,zhàn,nóng,yī,ǎi,zhān,pì,huǐ,huà,yì,yì,shàn,ràng,ròu,qiǎn,duì,tà,hù,zhōu,háo,ài,yīng,jiān,yù,jiǎn,huì,dú,zhé,juàn,zàn,lěi,shěn,wèi,chǎn,lì,yí,biàn,zhé,yàn,è,chóu,wèi,chóu,yào,chán,ràng,yǐn,lán,chèn,xié,niè,huān,zàn,yì,dǎng,zhán,yàn,dú,yán,jì,dìng,fù,rèn,jī,jié,hòng,tǎo,ràng,shàn,qì,tuō,xùn,yì,xùn,jì,rèn,jiǎng,huì,ōu,jù,yà,nè,xǔ,é,lùn,xiōng,sòng,fěng,shè,fǎng,jué,zhèng,gǔ,hē,píng,zǔ,shí,xiòng,zhà,sù,zhěn,dǐ,zhōu,cí,qū,zhào,bì,yì,yí,kuāng,lěi,shì,guà,shī,jié,huī,chéng,zhū,shēn,huà,dàn,gòu,quán,guǐ,xún,yì,zhèng,gāi,xiáng,chà,hùn,xǔ,zhōu,jiè,wū,yǔ,qiào,wù,gào,yòu,huì,kuáng,shuō,sòng,ēi,qǐng,zhū,zōu,nuò,dú,zhuó,fěi,kè,wěi,yú,shuí,shěn,tiáo,chǎn,liàng,zhūn,suì,tán,shěn,yì,móu,chén,dié,huǎng,jiàn,xié,xuè,yè,wèi,è,yù,xuān,chán,zī,ān,yàn,dì,mí,piǎn,xū,mó,dǎng,sù,xiè,yáo,bàng,shì,qiān,mì,jǐn,mán,zhé,jiǎn,miù,tán,zèn,qiáo,lán,pǔ,jué,yàn,qiǎn,zhān,chèn,gǔ,qiān,hóng,xiā,jí,hóng,hān,hōng,xī,xī,huō,liáo,hǎn,dú,lóng,dòu,jiāng,qǐ,chǐ,lǐ,dēng,wān,bī,shù,xiàn,fēng,zhì,zhì,yàn,yàn,shǐ,chù,huī,tún,yì,tún,yì,jiān,bā,hòu,è,chú,xiàng,huàn,jiān,kěn,gāi,jù,fú,xī,bīn,háo,yù,zhū,jiā,fén,xī,hù,wēn,huán,bīn,dí,zōng,fén,yì,zhì,bào,chái,àn,pí,nà,pī,gǒu,nà,yòu,diāo,mò,sì,xiū,huán,kěn,hé,hé,mò,àn,mào,lí,ní,bǐ,yǔ,jiā,tuān,māo,pí,xī,yì,jù,mò,chū,tán,huān,jué,bèi,zhēn,yuán,fù,cái,gòng,tè,yì,háng,wán,pín,huò,fàn,tān,guàn,zé,zhì,èr,zhù,shì,bì,zī,èr,guì,piǎn,biǎn,mǎi,dài,shèng,kuàng,fèi,tiē,yí,chí,mào,hè,bì,lù,lìn,huì,gāi,pián,zī,jiǎ,xù,zéi,jiǎo,gāi,zāng,jiàn,yīng,jùn,zhèn,shē,bīn,bīn,qiú,shē,chuàn,zāng,zhōu,lài,zàn,cì,chēn,shǎng,tiǎn,péi,gēng,xián,mài,jiàn,suì,fù,dǎn,cóng,cóng,zhì,jī,zhàng,dǔ,jìn,xiōng,chǔn,yǔn,bǎo,zāi,lài,fèng,càng,jī,shèng,ài,zhuàn,fù,gòu,sài,zé,liáo,yì,bài,chěn,wàn,zhì,zhuì,biāo,yūn,zèng,dàn,zàn,yàn,pú,shàn,wàn,yíng,jìn,gàn,xián,zāng,bì,dú,shú,yàn,shǎng,xuàn,lòng,gàn,zāng,bèi,zhēn,fù,yuán,gòng,cái,zé,xián,bài,zhàng,huò,zhì,fàn,tān,pín,biǎn,gòu,zhù,guàn,èr,jiàn,bì,shì,tiē,guì,kuàng,dài,mào,fèi,hè,yí,zéi,zhì,gǔ,huì,zī,lìn,lù,zāng,zī,gāi,jìn,qiú,zhèn,lài,shē,fù,dǔ,jī,shú,shǎng,cì,bì,zhōu,gēng,péi,dǎn,lài,fèng,zhuì,fù,zhuàn,sài,zé,yàn,zàn,yūn,zèng,shàn,yíng,gàn,chì,xī,shè,nǎn,tóng,xì,chēng,hè,chēng,zhě,xiá,táng,zǒu,zǒu,lì,jiū,fù,zhào,gǎn,qǐ,shàn,qióng,yǐn,xiǎn,zī,jué,qǐn,chí,cī,chèn,chèn,dié,qiè,chāo,dī,xì,zhān,jué,yuè,qū,jí,qū,chú,guā,xuè,zī,tiào,duǒ,liè,gǎn,suō,cù,xí,zhào,sù,yǐn,jú,jiàn,què,tàng,chuō,cuǐ,lù,qù,dàng,qiū,zī,tí,qū,chì,huáng,qiáo,qiāo,jiào,zào,tì,ěr,zǎn,zǎn,zú,pā,bào,kuà,kē,dǔn,jué,fū,chěn,jiǎn,fāng,zhǐ,tā,yuè,bà,qí,yuè,qiāng,tuò,tái,yì,jiàn,líng,mèi,bá,diē,kū,tuó,jiā,cī,pǎo,qiǎ,zhù,jū,diǎn,zhí,fū,pán,jū,shān,bǒ,ní,jù,lì,gēn,yí,jì,dài,xiǎn,jiāo,duò,zhū,quán,kuà,zhuǎi,guì,qióng,kuǐ,xiáng,dié,lù,pián,zhì,jié,tiào,cǎi,jiàn,dá,qiāo,bì,xiān,duò,jī,jú,jì,shū,tú,chuò,jìng,niè,xiāo,bù,xué,qūn,mǔ,shū,liáng,yǒng,jiǎo,chóu,qiāo,móu,tà,jiàn,jī,wō,wěi,chuō,jié,jí,niè,jū,niè,lún,lù,lèng,huái,jù,chí,wǎn,quán,tī,bó,zú,qiè,qī,cù,zōng,cǎi,zōng,pèng,zhì,zhēng,diǎn,zhí,yú,duó,dùn,chuǎn,yǒng,zhǒng,dì,zhě,chěn,chuài,jiàn,guā,táng,jǔ,fú,cù,dié,pián,róu,nuò,tí,chǎ,tuǐ,jiǎn,dǎo,cuō,xī,tà,qiāng,niǎn,diān,tí,jí,niè,pán,liū,zàn,bì,chōng,lù,liáo,cù,tāng,dài,sù,xǐ,kuǐ,jì,zhí,qiāng,dí,pán,zōng,lián,bèng,zāo,niǎn,bié,tuí,jú,dēng,cèng,xiān,fán,chú,zhōng,dūn,bō,cù,cù,jué,jué,lìn,tà,qiāo,qiāo,pǔ,liāo,dūn,cuān,guàn,zào,tà,bì,bì,zhú,jù,chú,qiào,dǔn,chóu,jī,wǔ,yuè,niǎn,lìn,liè,zhí,lì,zhì,chán,chú,duàn,wèi,lóng,lìn,xiān,wèi,zuān,lán,xiè,ráng,sǎ,niè,tà,qú,jí,cuān,zuān,xǐ,kuí,jué,lìn,shēn,gōng,dān,fēn,qū,tǐ,duǒ,duǒ,gōng,láng,rěn,luǒ,ǎi,jī,jū,tǎng,kōng,lào,yǎn,měi,kāng,qū,lóu,lào,duǒ,zhí,yàn,tǐ,dào,yīng,yù,chē,yà,guǐ,jūn,wèi,yuè,xìn,dài,xuān,fàn,rèn,shān,kuáng,shū,tún,chén,dài,è,nà,qí,máo,ruǎn,kuáng,qián,zhuàn,hōng,hū,qú,kuàng,dǐ,líng,dài,āo,zhěn,fàn,kuāng,yǎng,pēng,bèi,gū,gū,páo,zhù,rǒng,è,bá,zhóu,zhǐ,yáo,kē,yì,qīng,shì,píng,ér,gǒng,jú,jiào,guāng,lù,kǎi,quán,zhōu,zài,zhì,shē,liàng,yù,shāo,yóu,wàn,yǐn,zhé,wǎn,fǔ,qīng,zhōu,ní,líng,zhé,hàn,liàng,zī,huī,wǎng,chuò,guǒ,kǎn,yǐ,péng,qiàn,gǔn,niǎn,píng,guǎn,bèi,lún,pái,liáng,ruǎn,róu,jí,yáng,xián,chuán,còu,chūn,gé,yóu,hōng,shū,fù,zī,fú,wēn,fàn,zhǎn,yú,wēn,tāo,gǔ,zhēn,xiá,yuán,lù,jiāo,cháo,zhuǎn,wèi,hūn,xuě,zhé,jiào,zhàn,bú,lǎo,fén,fān,lín,gé,sè,kǎn,huàn,yǐ,jí,duì,ér,yú,jiàn,hōng,léi,pèi,lì,lì,lú,lìn,chē,yà,guǐ,xuān,dài,rèn,zhuǎn,è,lún,ruǎn,hōng,gū,kē,lú,zhóu,zhǐ,yì,hū,zhěn,lì,yáo,qīng,shì,zǎi,zhì,jiào,zhōu,quán,lù,jiào,zhé,fǔ,liàng,niǎn,bèi,huī,gǔn,wǎng,liáng,chuò,zī,còu,fú,jí,wēn,shū,pèi,yuán,xiá,zhǎn,lù,zhé,lín,xīn,gū,cí,cí,bì,zuì,biàn,là,là,cí,xuē,bàn,biàn,biàn,biàn,xuē,biàn,bān,cí,biàn,biàn,chén,rǔ,nóng,nóng,zhěn,chuò,chuò,yī,réng,biān,dào,shi,yū,liáo,dá,chān,gān,qiān,yū,yū,qì,xùn,yǐ,guò,mài,qī,zā,wàng,tù,zhūn,yíng,dá,yùn,jìn,háng,yà,fǎn,wǔ,dá,é,huán,zhè,dá,jìn,yuǎn,wéi,lián,chí,chè,chí,tiáo,zhì,yǐ,jiǒng,jiā,chén,dài,ěr,dí,pò,zhù,dié,zé,táo,shù,yǐ,qù,jìng,huí,dòng,yòu,mí,bèng,jì,nǎi,yí,jié,zhuī,liè,xùn,tuì,sòng,shì,táo,páng,hòu,nì,dùn,jiǒng,xuǎn,xùn,bū,yōu,xiāo,qiú,tòu,zhú,qiú,dì,dì,tú,jìng,tì,dòu,yǐ,zhè,tōng,guàng,wǔ,shì,chěng,sù,zào,qūn,féng,lián,suò,huí,lǐ,gǔ,lái,bèn,cuò,zhú,bèng,huàn,dài,lù,yóu,zhōu,jìn,yù,chuō,kuí,wēi,tì,yì,dá,yuǎn,luó,bī,nuò,yú,dàng,suí,dùn,suì,yǎn,chuán,chí,dì,yù,shí,zhēn,yóu,yùn,è,biàn,guò,è,xiá,huáng,qiú,dào,dá,wéi,nán,yí,gòu,yáo,chòu,liù,xùn,tà,dì,chí,yuǎn,sù,tà,qiǎn,mǎ,yáo,guàn,zhāng,áo,shì,cà,chì,sù,zāo,zhē,dùn,dì,lóu,chí,cuō,lín,zūn,rào,qiān,xuǎn,yù,yí,è,liáo,jù,shì,bì,yāo,mài,xiè,suì,huán,zhān,téng,ěr,miǎo,biān,biān,lā,lí,yuán,yáo,luó,lǐ,yì,tíng,dèng,qǐ,yōng,shān,hán,yú,máng,rú,qióng,xī,kuàng,fū,kàng,bīn,fāng,xíng,nà,xīn,shěn,bāng,yuán,cūn,huǒ,xié,bāng,wū,jù,yóu,hán,tái,qiū,bì,pī,bǐng,shào,bèi,wǎ,dǐ,zōu,yè,lín,kuāng,guī,zhū,shī,kū,yù,gāi,hé,qiè,zhì,jí,xún,hòu,xíng,jiāo,xí,guī,nà,láng,jiá,kuài,zhèng,láng,yùn,yán,chéng,dòu,xī,lǚ,fǔ,wú,fú,gào,hǎo,láng,jiá,gěng,jùn,yǐng,bó,xì,bèi,lì,yún,bù,xiáo,qī,pí,qīng,guō,zhōu,tán,zōu,píng,lái,ní,chēn,yóu,bù,xiāng,dān,jú,yōng,qiāo,yī,dū,yǎn,méi,ruò,bèi,è,shū,juàn,yǔ,yùn,hóu,kuí,xiāng,xiāng,sōu,táng,míng,xī,rǔ,chù,zī,zōu,yì,wū,xiāng,yún,hào,yōng,bǐ,mào,cháo,fū,liǎo,yín,zhuān,hù,qiāo,yān,zhāng,màn,qiāo,xǔ,dèng,bì,xún,bì,zēng,wéi,zhèng,mào,shàn,lín,pó,dān,méng,yè,cào,kuài,fēng,méng,zōu,kuàng,liǎn,zàn,chán,yōu,qí,yàn,chán,zàn,líng,huān,xī,fēng,zàn,lì,yǒu,dīng,qiú,zhuó,pèi,zhòu,yǐ,gān,yú,jiǔ,yǎn,zuì,máo,dān,xù,dòu,zhēn,fēn,yuán,fū,yùn,tài,tiān,qiǎ,tuó,zuò,hān,gū,sū,pō,chóu,zài,mǐng,lào,chuò,chóu,yòu,tóng,zhǐ,xiān,jiàng,chéng,yìn,tú,jiào,méi,kù,suān,lèi,pú,zuì,hǎi,yàn,shī,niàng,wéi,lù,lǎn,yān,táo,pēi,zhǎn,chún,tán,zuì,zhuì,cù,kūn,tí,xián,dū,hú,xǔ,xǐng,tǎn,qiú,chún,yùn,pō,kē,sōu,mí,quán,chǒu,cuō,yùn,yòng,àng,zhà,hǎi,táng,jiàng,piǎo,chǎn,yù,lí,zāo,láo,yī,jiàng,bú,jiào,xī,tán,pō,nóng,yì,lǐ,jù,yàn,yì,niàng,rú,xūn,chóu,yàn,líng,mí,mí,niàng,xìn,jiào,shī,mí,yàn,biàn,cǎi,shì,yòu,shì,shì,lǐ,zhòng,yě,liáng,lí,jīn,jīn,gá,yǐ,liǎo,dāo,zhāo,dīng,pō,qiú,hé,fǔ,zhēn,zhí,bā,luàn,fǔ,nǎi,diào,shān,qiǎo,kòu,chuàn,zǐ,fán,huá,huá,hàn,gāng,qí,máng,rì,dì,sì,xì,yì,chāi,shī,tǔ,xī,nǚ,qiān,qiú,rì,pī,yé,jīn,bǎ,fāng,chén,xíng,dǒu,yuè,qiān,fū,bù,nà,xīn,é,jué,dùn,gōu,yǐn,qián,bǎn,sà,rèn,chāo,niǔ,fēn,yǔn,yǐ,qín,pī,guō,hóng,yín,jūn,diào,yì,zhōng,xǐ,gài,rì,huǒ,tài,kàng,yuán,lú,è,qín,duó,zī,ní,tú,shì,mín,gū,kē,líng,bǐng,sì,gǔ,bó,pí,yù,sì,zuó,bū,yóu,diàn,jiǎ,zhēn,shǐ,shì,tiě,jù,zuān,shī,tā,xuàn,zhāo,bào,hé,bì,shēng,chú,shí,bó,zhù,chì,zā,pǒ,tóng,qián,fú,zhǎi,mǎo,qiān,fú,lì,yuè,pī,yāng,bàn,bō,jié,gōu,shù,zhēng,mǔ,xǐ,xǐ,dì,jiā,mù,tǎn,shén,yǐ,sī,kuàng,kǎ,běi,jiàn,tóng,xíng,hóng,jiǎo,chǐ,ěr,gè,bǐng,shì,máo,hā,yín,jūn,zhōu,chòng,xiǎng,tóng,mò,lèi,jī,yù,xù,rén,zùn,zhì,qióng,shàn,chì,xiǎn,xíng,quán,pī,tiě,zhū,hóu,míng,kuǎ,diào,xiān,xián,xiū,jūn,chā,lǎo,jí,pǐ,rú,mǐ,yī,yīn,guāng,ǎn,diū,yǒu,sè,kào,qián,luán,sī,āi,diào,hàn,ruì,shì,kēng,qiú,xiāo,zhé,xiù,zàng,tī,cuò,xiān,hòng,zhōng,tōu,lǚ,méi,láng,wàn,xīn,yún,bèi,wù,sù,yù,chán,tǐng,bó,hàn,jiá,hóng,juān,fēng,chān,wǎn,zhì,sī,xuān,huá,wú,tiáo,kuàng,zhuó,lüè,xíng,qǐn,shèn,hán,lüè,yé,chú,zèng,jū,xiàn,é,máng,pū,lí,pàn,ruì,chéng,gào,lǐ,tè,bīng,zhù,zhèn,tū,liǔ,zuì,jù,chǎng,yuǎn,jiān,gāng,diào,táo,shǎng,lún,kè,líng,pī,lù,lí,qīng,péi,juǎn,mín,zuì,péng,àn,pī,xiàn,yā,zhuī,lèi,ā,kōng,tà,kūn,dú,nèi,chuí,zī,zhēng,bēn,niè,cóng,chún,tán,dìng,qí,qián,zhuì,jī,yù,jǐn,guǎn,máo,chāng,tiǎn,xī,liàn,diāo,gù,cuò,shù,zhēn,lù,měng,lù,huā,biǎo,gá,lái,kěn,fāng,bū,nài,wàn,zàn,hǔ,dé,xiān,piān,huò,liàng,fǎ,mén,kǎi,yāng,chí,liàn,guō,xiǎn,dù,tú,wéi,zōng,fù,róu,jí,è,jūn,chěn,tí,zhá,hù,yáng,duàn,xiá,yú,kēng,shēng,huáng,wěi,fù,zhāo,chā,qiè,shī,hōng,kuí,nuò,móu,qiāo,qiāo,hóu,tōu,cōng,huán,yè,mín,jiàn,duān,jiàn,sī,kuí,hú,xuān,zhě,jié,zhēn,biān,zhōng,zī,xiū,yé,měi,pài,āi,jiè,qián,méi,cuō,dā,bàng,xiá,lián,suǒ,kài,liú,yáo,yè,nòu,wēng,róng,táng,suǒ,qiāng,gé,shuò,chuí,bó,pán,dā,bī,sǎng,gāng,zī,wū,yíng,huàng,tiáo,liú,kǎi,sǔn,shā,sōu,wàn,gǎo,zhèn,zhèn,láng,yì,yuán,tǎng,niè,xí,jiā,gē,mǎ,juān,sòng,zǔ,suǒ,xià,fēng,wēn,ná,lǔ,suǒ,ōu,zú,tuán,xiū,guàn,xuàn,liàn,shòu,ào,mǎn,mò,luó,bì,wèi,liú,dí,sǎn,cōng,yí,lù,áo,kēng,qiāng,cuī,qī,shǎng,tāng,màn,yōng,chǎn,fēng,jìng,biāo,shù,lòu,xiù,cōng,lóng,zàn,jiàn,cáo,lí,xià,xī,kāng,shuǎng,bèng,zhāng,qiān,zhēng,lù,huá,jí,pú,huì,qiǎng,pō,lín,sè,xiù,sǎn,chēng,guì,sī,liú,náo,huáng,piě,suì,fán,qiáo,quān,xī,tàng,xiàng,jué,jiāo,zūn,liào,qì,láo,duī,xín,zān,jī,jiǎn,zhōng,dèng,yā,yǐng,duī,jué,nòu,zān,pǔ,tiě,fán,chēng,dǐng,shàn,kāi,jiǎn,fèi,suì,lǔ,juān,huì,yù,lián,zhuō,qiāo,jiàn,zhuó,léi,bì,tiě,huán,yè,duó,guò,dāng,jù,fén,dá,bèi,yì,ài,zōng,xùn,diào,zhù,héng,zhuì,jī,niè,hé,huò,qīng,bīn,yīng,guì,níng,xū,jiàn,jiàn,qiǎn,chǎ,zhì,miè,lí,léi,jī,zuān,kuàng,shǎng,péng,là,dú,shuò,chuò,lǜ,biāo,bào,lǔ,xián,kuān,lóng,è,lú,xīn,jiàn,lán,bó,jiān,yuè,chán,xiāng,jiàn,xī,guàn,cáng,niè,lěi,cuān,qú,pàn,luó,zuān,luán,záo,niè,jué,tǎng,zhú,làn,jīn,gá,yǐ,zhēn,dīng,zhāo,pō,liǎo,tǔ,qiān,chuàn,shān,sà,fán,diào,mén,nǚ,yáng,chāi,xíng,gài,bù,tài,jù,dùn,chāo,zhōng,nà,bèi,gāng,bǎn,qián,yuè,qīn,jūn,wū,gōu,kàng,fāng,huǒ,dǒu,niǔ,bǎ,yù,qián,zhēng,qián,gǔ,bō,kē,pǒ,bū,bó,yuè,zuān,mù,tǎn,jiǎ,diàn,yóu,tiě,bó,líng,shuò,qiān,mǎo,bào,shì,xuàn,tā,bì,ní,pí,duó,xíng,kào,lǎo,ěr,máng,yā,yǒu,chéng,jiá,yé,náo,zhì,dāng,tóng,lǚ,diào,yīn,kǎi,zhá,zhū,xiǎn,tǐng,diū,xiān,huá,quán,shā,hā,diào,gè,míng,zhēng,sè,jiǎo,yī,chǎn,chòng,tàng,ǎn,yín,rú,zhù,láo,pū,wú,lái,tè,liàn,kēng,xiāo,suǒ,lǐ,zèng,chú,guō,gào,é,xiù,cuò,lüè,fēng,xīn,liǔ,kāi,jiǎn,ruì,tī,láng,qǐn,jū,ā,qiāng,zhě,nuò,cuò,máo,bēn,qí,dé,kè,kūn,chāng,xī,gù,luó,chuí,zhuī,jǐn,zhì,xiān,juǎn,huò,péi,tán,dìng,jiàn,jù,měng,zī,qiè,yīng,kǎi,qiāng,sī,è,chā,qiāo,zhōng,duàn,sōu,huáng,huán,āi,dù,měi,lòu,zī,fèi,méi,mò,zhèn,bó,gé,niè,tǎng,juān,niè,ná,liú,gǎo,bàng,yì,jiā,bīn,róng,biāo,tāng,màn,luó,bèng,yōng,jìng,dí,zú,xuàn,liú,xín,jué,liào,pú,lǔ,duī,lán,pǔ,cuān,qiǎng,dèng,huò,léi,huán,zhuó,lián,yì,chǎ,biāo,là,chán,xiāng,cháng,cháng,jiǔ,ǎo,dié,jié,liǎo,mí,cháng,mén,mà,shuān,shǎn,huò,mén,yán,bì,hàn,bì,shān,kāi,kāng,bēng,hóng,rùn,sàn,xián,xián,jiān,mǐn,xiā,shuǐ,dòu,zhá,nào,zhān,pēng,xiǎ,líng,biàn,bì,rùn,hé,guān,gé,hé,fá,chù,hòng,guī,mǐn,sē,kǔn,làng,lǘ,tíng,shà,jú,yuè,yuè,chǎn,qù,lìn,chāng,shā,kǔn,yān,wén,yán,è,hūn,yù,wén,hòng,bāo,hòng,qù,yǎo,wén,bǎn,àn,wéi,yīn,kuò,què,lán,dū,quán,fēng,tián,niè,tà,kǎi,hé,què,chuǎng,guān,dòu,qǐ,kuī,táng,guān,piáo,kàn,xì,huì,chǎn,pì,dāng,huán,tà,wén,tā,mén,shuān,shǎn,yán,hàn,bì,wèn,chuǎng,rùn,wéi,xián,hóng,jiān,mǐn,kàng,mèn,zhá,nào,guī,wén,tà,mǐn,lǘ,kǎi,fá,gé,hé,kǔn,jiū,yuè,làng,dū,yù,yān,chāng,xì,wén,hūn,yán,è,chǎn,lán,qù,huì,kuò,què,hé,tián,tà,quē,kàn,huán,fù,fǔ,lè,duì,xìn,qiān,wù,yì,tuó,yīn,yáng,dǒu,è,shēng,bǎn,péi,kēng,yǔn,ruǎn,zhǐ,pí,jǐng,fáng,yáng,yīn,zhèn,jiē,chēng,è,qū,dǐ,zǔ,zuò,diàn,lín,ā,tuó,tuó,bēi,bǐng,fù,jì,lù,lǒng,chén,xíng,duò,lòu,mò,jiàng,shū,duò,xiàn,ér,guǐ,yū,gāi,shǎn,jùn,qiào,xíng,chún,wǔ,bì,xiá,shǎn,shēng,zhì,pū,dǒu,yuàn,zhèn,chú,xiàn,dǎo,niè,yǔn,xiǎn,péi,fèi,zōu,qí,duì,lún,yīn,jū,chuí,chén,pī,líng,táo,xiàn,lù,shēng,xiǎn,yīn,zhǔ,yáng,réng,xiá,chóng,yàn,yīn,yú,dī,yú,lóng,wēi,wēi,niè,duì,suí,àn,huáng,jiē,suí,yǐn,qí,yǎn,huī,gé,yǔn,wù,wěi,ài,xì,táng,jì,zhàng,dǎo,áo,xì,yǐn,sà,rǎo,lín,tuí,dèng,pí,suì,suí,ào,xiǎn,fén,nǐ,ér,jī,dǎo,xí,yǐn,zhì,huī,lǒng,xī,lì,lì,lì,zhuī,hú,zhī,sǔn,jùn,nán,yì,què,yàn,qín,jiān,xióng,yǎ,jí,gù,huán,zhì,gòu,jùn,cí,yōng,jū,chú,hū,zá,luò,yú,chóu,diāo,suī,hàn,huò,shuāng,guàn,chú,zá,yōng,jī,guī,chóu,liù,lí,nán,yù,zá,chóu,jí,yǔ,yú,xuě,nǎ,fǒu,sè,mù,wén,fēn,pāng,yún,lì,chì,yāng,líng,léi,án,báo,wù,diàn,dàng,hū,wù,diào,xū,jì,mù,chén,xiāo,zhá,tíng,zhèn,pèi,méi,líng,qī,zhōu,huò,shà,fēi,hóng,zhān,yīn,ní,shù,tún,lín,líng,dòng,yīng,wù,líng,shuāng,líng,xiá,hóng,yīn,mài,mài,yǔn,liù,mèng,bīn,wù,wèi,kuò,yín,xí,yì,ǎi,dàn,tèng,xiàn,yù,lòu,lóng,dài,jí,pāng,yáng,bà,pī,wēi,fēng,xì,jì,mái,méng,méng,léi,lì,huò,ǎi,fèi,dài,lóng,lìng,ài,fēng,lì,bǎo,hè,hè,hè,bìng,qīng,qīng,jìng,tiān,zhèng,jìng,chēng,qìng,jìng,jìng,diàn,jìng,tiān,fēi,fēi,kào,mí,miàn,miàn,pào,yè,miǎn,huì,yè,gé,dīng,chá,jiān,rèn,dí,dù,wù,rèn,qín,jìn,xuē,niǔ,bǎ,yǐn,sǎ,nà,mò,zǔ,dá,bàn,xiè,yào,táo,bèi,jiē,hóng,páo,yāng,bǐng,yīn,gé,táo,jié,xié,ān,ān,hén,gǒng,qiǎ,dá,qiáo,tīng,mán,biān,suī,tiáo,qiào,xuān,kòng,běng,tà,shàng,bǐng,kuò,jū,la,xiè,róu,bāng,ēng,qiū,qiū,hé,qiào,mù,jū,jiàn,biān,dī,jiān,wēn,tāo,gōu,tà,bèi,xié,pán,gé,bì,kuò,tāng,lóu,guì,qiáo,xuē,jī,jiān,jiāng,chàn,dá,huò,xiǎn,qiān,dú,wā,jiān,lán,wéi,rèn,fú,mèi,quàn,gé,wěi,qiào,hán,chàng,kuò,rǒu,yùn,shè,wěi,gé,bài,tāo,gōu,yùn,gāo,bì,wěi,suì,dú,wà,dú,wéi,rèn,fú,hán,wěi,yùn,tāo,jiǔ,jiǔ,xiān,xiè,xiān,jī,yīn,zá,yùn,sháo,lè,péng,huáng,yīng,yùn,péng,ān,yīn,xiǎng,hù,yè,dǐng,qǐng,qiú,xiàng,shùn,hān,xū,yí,xù,ě,sòng,kuǐ,qí,háng,yù,wán,bān,dùn,dí,dān,pàn,pō,lǐng,chè,jǐng,lèi,hé,qiāo,è,é,wěi,jié,kuò,shěn,yí,yí,kē,duǐ,yǔ,pīng,lèi,fǔ,jiá,tóu,huì,kuí,jiá,luō,tǐng,chēng,yǐng,jūn,hú,hàn,jǐng,tuí,tuí,bīn,lài,tuí,zī,zī,chuí,dìng,lài,tán,hàn,qiān,kē,cuì,jiǒng,qīn,yí,sāi,tí,é,è,yán,wèn,kǎn,yóng,zhuān,yán,xiǎn,xìn,yǐ,yuàn,sǎng,diān,diān,jiǎng,kuī,lèi,láo,piǎo,wài,mān,cù,yáo,hào,qiáo,gù,xùn,yǎn,huì,chàn,rú,méng,bīn,xiǎn,pín,lú,lǎn,niè,quán,yè,dǐng,qǐng,hān,xiàng,shùn,xū,xū,wán,gù,dùn,qí,bān,sòng,háng,yù,lú,lǐng,pō,jǐng,jié,jiá,tǐng,hé,yǐng,jiǒng,kē,yí,pín,huì,tuí,hàn,yǐng,yǐng,kē,tí,yóng,è,zhuān,yán,é,niè,mān,diān,sǎng,hào,lèi,chàn,rú,pín,quán,fēng,biāo,guā,fú,xiā,zhǎn,biāo,sà,bá,tái,liè,guā,xuàn,xiāo,jù,biāo,sī,wěi,yáng,yáo,sōu,kǎi,sāo,fān,liú,xí,liù,piāo,piāo,liú,biāo,biāo,biāo,liáo,biāo,sè,fēng,xiū,fēng,yáng,zhǎn,biāo,sà,jù,sī,sōu,yáo,liú,piāo,biāo,biāo,fēi,fān,fēi,fēi,shí,shí,cān,jī,dìng,sì,tuō,zhān,sūn,xiǎng,tún,rèn,yù,yǎng,chì,yǐn,fàn,fàn,sūn,yǐn,zhù,yí,zuò,bì,jiě,tāo,bǎo,cí,tiè,sì,bǎo,shì,duò,hài,rèn,tiǎn,jiǎo,hé,bǐng,yáo,tóng,cí,xiǎng,yǎng,juàn,ěr,yàn,lè,xī,cān,bō,něi,è,bū,jùn,dòu,sù,yú,shì,yáo,hún,guǒ,shì,jiàn,chuò,bǐng,xiàn,bù,yè,dàn,fēi,zhāng,wèi,guǎn,è,nuǎn,yùn,hú,huáng,tiè,huì,jiān,hóu,ài,xíng,fēn,wèi,gǔ,chā,sòng,táng,bó,gāo,xì,kuì,liù,sōu,táo,yè,wēn,mó,táng,mán,bì,yù,xiū,jǐn,sǎn,kuì,zhuàn,shàn,xī,dàn,yì,jī,ráo,chēng,yōng,tāo,wèi,xiǎng,zhān,fēn,hài,méng,yàn,mó,chán,xiǎng,luó,zàn,náng,shí,dìng,jī,tuō,xíng,tún,xì,rèn,yù,chì,fàn,yǐn,jiàn,shì,bǎo,sì,duò,yí,ěr,ráo,xiǎng,hé,gē,jiǎo,xī,bǐng,bō,dòu,è,yú,něi,jùn,guǒ,hún,xiàn,guǎn,chā,kuì,gǔ,sōu,chán,yè,mó,bó,liù,xiū,jǐn,mán,sǎn,zhuàn,náng,shǒu,kuí,guó,xiāng,fēn,bó,ní,bì,bó,tú,hān,fēi,jiān,ān,ài,fù,xiān,yūn,xīn,fén,pīn,xīn,mǎ,yù,féng,hàn,dí,tuó,tuō,chí,xùn,zhù,zhī,pèi,xìn,rì,sà,yǔn,wén,zhí,dǎn,lú,yóu,bó,bǎo,jué,tuó,yì,qū,wén,qū,jiōng,pǒ,zhāo,yuān,pēng,zhòu,jù,zhù,nú,jū,pī,zǎng,jià,líng,zhěn,tái,fù,yǎng,shǐ,bì,tuó,tuó,sì,liú,mà,pián,táo,zhì,róng,téng,dòng,xún,quán,shēn,jiōng,ěr,hài,bó,zhū,yīn,luò,zhōu,dàn,hài,liú,jú,sǒng,qīn,máng,liáng,hàn,tú,xuān,tuì,jùn,ě,chěng,xīng,sì,lù,zhuī,zhōu,shè,pián,kūn,táo,lái,zōng,kè,qí,qí,yàn,fēi,sāo,yàn,gé,yǎo,wù,piàn,cōng,piàn,qián,fēi,huáng,qián,huō,yú,tí,quán,xiá,zōng,kuí,róu,sī,guā,tuó,guī,sōu,qiān,chéng,zhì,liú,péng,téng,xí,cǎo,dú,yàn,yuán,zōu,sāo,shàn,qí,zhì,shuāng,lù,xí,luó,zhāng,mò,ào,cān,piào,cōng,qū,bì,zhì,yù,xū,huá,bō,sù,xiāo,lín,zhàn,dūn,liú,tuó,céng,diàn,jiāo,tiě,yàn,luó,zhān,jīng,yì,yè,tuó,pīn,zhòu,yàn,lóng,lǘ,téng,xiāng,jì,shuāng,jú,xí,huān,lí,biāo,mǎ,yù,tuó,xùn,chí,qū,rì,bó,lǘ,zǎng,shǐ,sì,fù,jū,zōu,zhù,tuó,nú,jià,yì,tái,xiāo,mà,yīn,jiāo,huá,luò,hài,pián,biāo,lí,chěng,yàn,xīng,qīn,jùn,qí,qí,kè,zhuī,zōng,sù,cān,piàn,zhì,kuí,sāo,wù,áo,liú,qiān,shàn,piào,luó,cōng,chǎn,zhòu,jì,shuāng,xiāng,gǔ,wěi,wěi,wěi,yú,gàn,yì,āng,tóu,jiè,bào,bèi,cī,tǐ,dǐ,kū,hái,qiāo,hóu,kuà,gé,tuǐ,gěng,pián,bì,kē,qià,yú,suí,lóu,bó,xiāo,bǎng,bó,cī,kuān,bìn,mó,liáo,lóu,xiāo,dú,zāng,suǐ,tǐ,bìn,kuān,lú,gāo,gāo,qiào,kāo,qiǎo,láo,sào,biāo,kūn,kūn,dí,fǎng,xiū,rán,máo,dàn,kūn,bìn,fà,tiáo,pī,zī,fà,rán,tì,bào,bì,máo,fú,ér,èr,qū,gōng,xiū,kuò,jì,péng,zhuā,shāo,shā,tì,lì,bìn,zōng,tì,péng,sōng,zhēng,quán,zōng,shùn,jiǎn,duǒ,hú,là,jiū,qí,lián,zhěn,bìn,péng,mà,sān,mán,mán,sēng,xū,liè,qiān,qiān,nóng,huán,kuò,níng,bìn,liè,ráng,dòu,dòu,nào,hòng,xì,dòu,kàn,dòu,dòu,jiū,chàng,yù,yù,gé,yàn,fǔ,zèng,guī,zōng,liù,guī,shāng,yù,guǐ,mèi,jì,qí,gà,kuí,hún,bá,pò,mèi,xū,yǎn,xiāo,liǎng,yù,tuí,qī,wǎng,liǎng,wèi,gān,chī,piāo,bì,mó,jī,xū,chǒu,yǎn,zhān,yú,dāo,rén,jì,bā,hóng,tuō,diào,jǐ,yú,é,jì,shā,háng,tún,mò,jiè,shěn,bǎn,yuán,pí,lǔ,wén,hú,lú,zā,fáng,fén,nà,yóu,piàn,mó,hé,xiá,qū,hān,pī,líng,tuó,bà,qiú,píng,fú,bì,cǐ,wèi,jū,diāo,bó,yóu,gǔn,pí,nián,xīng,tái,bào,fù,zhǎ,jù,gū,shí,dōng,chou,tǎ,jié,shū,hòu,xiǎng,ér,ān,wéi,zhào,zhū,yìn,liè,luò,tóng,yí,yì,bìng,wěi,jiāo,kū,guī,xiān,gé,huí,lǎo,fú,kào,xiū,tuō,jūn,tí,miǎn,shāo,zhǎ,suō,qīn,yú,něi,zhé,gǔn,gěng,sū,wú,qiú,shān,pū,huàn,tiáo,lǐ,shā,shā,kào,méng,chéng,lí,zǒu,xī,yǒng,shēn,zī,qí,qīng,xiǎng,něi,chún,jì,diāo,qiè,gù,zhǒu,dōng,lái,fēi,ní,yì,kūn,lù,jiù,chāng,jīng,lún,líng,zōu,lí,měng,zōng,zhì,nián,hǔ,yú,dǐ,shī,shēn,huàn,tí,hóu,xīng,zhū,là,zōng,jì,biān,biān,huàn,quán,zéi,wēi,wēi,yú,chūn,róu,dié,huáng,liàn,yǎn,qiū,qiū,jiǎn,bī,è,yáng,fù,sāi,jiān,xiā,tuǒ,hú,shì,ruò,xuān,wēn,jiān,hào,wū,páng,sāo,liú,mǎ,shí,shī,guān,zī,téng,tǎ,yáo,è,yóng,qián,qí,wēn,ruò,shén,lián,áo,lè,huī,mǐn,jì,tiáo,qū,jiān,shēn,mán,xí,qiú,piào,jì,jì,zhú,jiāng,xiū,zhuān,yōng,zhāng,kāng,xuě,biē,yù,qū,xiàng,bō,jiǎo,xún,sù,huáng,zūn,shàn,shàn,fān,guì,lín,xún,yáo,xǐ,zēng,xiāng,fèn,guān,hòu,kuài,zéi,sāo,zhān,gǎn,guì,yìng,lǐ,cháng,léi,shǔ,ài,rú,jì,xù,hù,shǔ,lǐ,liè,lè,miè,zhēn,xiǎng,è,lú,guàn,lí,xiān,yú,dāo,jǐ,yóu,tún,lǔ,fáng,bā,hé,bà,píng,nián,lú,yóu,zhǎ,fù,bó,bào,hòu,pí,tái,guī,jié,kào,wěi,ér,tóng,zéi,hòu,kuài,jì,jiāo,xiān,zhǎ,xiǎng,xún,gěng,lí,lián,jiān,lǐ,shí,tiáo,gǔn,shā,huàn,jūn,jì,yǒng,qīng,líng,qí,zōu,fēi,kūn,chāng,gù,ní,nián,diāo,jīng,shēn,shī,zī,fèn,dié,bī,cháng,tí,wēn,wēi,sāi,è,qiū,fù,huáng,quán,jiāng,biān,sāo,áo,qí,tǎ,guān,yáo,páng,jiān,lè,biào,xuě,biē,mán,mǐn,yōng,wèi,xí,guì,shàn,lín,zūn,hù,gǎn,lǐ,zhān,guǎn,niǎo,yǐ,fú,lì,jiū,bú,yàn,fú,diāo,jī,fèng,rù,gān,shī,fèng,míng,bǎo,yuān,zhī,hù,qín,fū,bān,wén,jiān,shī,yù,fǒu,yāo,jué,jué,pǐ,huān,zhèn,bǎo,yàn,yā,zhèng,fāng,fèng,wén,ōu,dài,jiā,rú,líng,miè,fú,tuó,mín,lì,biǎn,zhì,gē,yuān,cí,qú,xiāo,chī,dàn,jū,yāo,gū,zhōng,yù,yāng,yù,yā,dié,yù,tián,yīng,duī,wū,ér,guā,ài,zhī,yàn,héng,xiāo,jiá,liè,zhū,yáng,yí,hóng,lù,rú,móu,gē,rén,jiāo,xiū,zhōu,chī,luò,héng,nián,ě,luán,jiá,jì,tú,huān,tuǒ,bū,wú,jiān,yù,bó,jùn,jùn,bī,xī,jùn,jú,tū,jìng,tí,é,é,kuáng,hú,wǔ,shēn,lài,zān,pàn,lù,pí,shū,fú,ān,zhuó,péng,qín,qiān,bēi,diāo,lù,què,jiān,jú,tù,yā,yuān,qí,lí,yè,zhuī,kōng,duò,kūn,shēng,qí,jīng,yì,yì,jīng,zī,lái,dōng,qī,chún,gēng,jū,qū,yì,zūn,jī,shù,yīng,chì,miáo,róu,ān,qiū,tí,hú,tí,è,jiē,máo,fú,chūn,tú,yǎn,hé,yuán,piān,kūn,méi,hú,yīng,chuàn,wù,jú,dōng,cāng,fǎng,hè,yīng,yuán,xiān,wēng,shī,hè,chú,táng,xiá,ruò,liú,jī,gǔ,jiān,sǔn,hàn,cí,cí,yì,yào,yàn,jī,lì,tián,kòu,tī,tī,yì,tú,mǎ,xiāo,gāo,tián,chén,jì,tuán,zhè,áo,yǎo,yī,ōu,chì,zhì,liù,yōng,lóu,bì,shuāng,zhuó,yú,wú,jué,yín,tí,sī,jiāo,yì,huá,bì,yīng,sù,huáng,fán,jiāo,liáo,yàn,gāo,jiù,xián,xián,tú,mǎi,zūn,yù,yīng,lù,tuán,xián,xué,yì,pì,zhǔ,luó,xī,yì,jī,zé,yú,zhān,yè,yáng,pì,níng,hù,mí,yīng,méng,dí,yuè,yù,lěi,bǔ,lú,hè,lóng,shuāng,yuè,yīng,guàn,qú,lí,luán,niǎo,jiū,jī,yuān,míng,shī,ōu,yā,cāng,bǎo,zhèn,gū,dōng,lú,yā,xiāo,yāng,líng,chī,qú,yuān,xué,tuó,sī,zhì,ér,guā,xiū,héng,zhōu,gē,luán,hóng,wú,bó,lí,juān,hú,é,yù,xián,tí,wǔ,què,miáo,ān,kūn,bēi,péng,qiān,chún,gēng,yuān,sù,hú,hé,è,gǔ,qiū,cí,méi,wù,yì,yào,wēng,liú,jī,yì,jiān,hè,yī,yīng,zhè,liù,liáo,jiāo,jiù,yù,lù,huán,zhān,yīng,hù,méng,guàn,shuāng,lǔ,jīn,líng,jiǎn,xián,cuó,jiǎn,jiǎn,yán,cuó,lù,yōu,cū,jǐ,páo,cū,páo,zhù,jūn,zhǔ,jiān,mí,mí,yǔ,liú,chén,jūn,lín,ní,qí,lù,jiù,jūn,jīng,lí,xiāng,xián,jiā,mí,lì,shè,zhāng,lín,jīng,qí,líng,yán,cū,mài,mài,hé,chǎo,fū,miàn,miàn,fū,pào,qù,qū,móu,fū,xiàn,lái,qū,miàn,chi,fēng,fū,qū,miàn,má,mó,mó,huī,mí,zōu,nún,fén,huáng,huáng,jīn,guāng,tiān,tǒu,hóng,huà,kuàng,hóng,shǔ,lí,nián,chī,hēi,hēi,yì,qián,dǎn,xì,tún,mò,mò,qián,dài,chù,yǒu,diǎn,yī,xiá,yǎn,qū,měi,yǎn,qíng,yuè,lí,dǎng,dú,cǎn,yān,yǎn,yǎn,dàn,àn,zhěn,dài,cǎn,yī,méi,dǎn,yǎn,dú,lú,zhǐ,fěn,fú,fǔ,mǐn,mǐn,yuán,cù,qù,cháo,wā,zhū,zhī,měng,áo,biē,tuó,bì,yuán,cháo,tuó,dǐng,mì,nài,dǐng,zī,gǔ,gǔ,dōng,fén,táo,yuān,pí,chāng,gāo,cào,yuān,tāng,tēng,shǔ,shǔ,fén,fèi,wén,bá,diāo,tuó,zhōng,qú,shēng,shí,yòu,shí,tíng,wú,jú,jīng,hún,jú,yǎn,tū,sī,xī,xiàn,yǎn,léi,bí,yào,qiú,hān,wù,wù,hōu,xiè,è,zhā,xiù,wèng,zhā,nòng,nàng,qí,zhāi,jì,zī,jí,jī,qí,jī,chǐ,chèn,chèn,hé,yá,yīn,xiè,bāo,zé,xiè,zī,chī,yàn,jǔ,tiáo,líng,líng,chū,quán,xiè,yín,niè,jiù,yǎo,chuò,yǔn,yǔ,chǔ,yǐ,ní,zé,zōu,qǔ,yǔn,yǎn,yú,è,wò,yì,cī,zōu,diān,chǔ,jìn,yà,chǐ,chèn,hé,yín,jǔ,líng,bāo,tiáo,zī,yín,yǔ,chuò,qǔ,wò,lóng,páng,gōng,páng,yǎn,lóng,lóng,gōng,kān,dá,líng,dá,lóng,gōng,kān,guī,qiū,biē,guī,yuè,chuī,hé,jiǎo,xié,yù';\n/* harmony default export */ __webpack_exports__[\"default\"] = (dictionary);\n\n//# sourceURL=webpack://pinyinUtil/./src/dictionary.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_corejs2_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/defineProperty */ \"./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_corejs2_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_corejs2_core_js_object_assign__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime-corejs2/core-js/object/assign */ \"./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/object/assign.js\");\n/* harmony import */ var _babel_runtime_corejs2_core_js_object_assign__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_core_js_object_assign__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dictionary */ \"./src/dictionary.js\");\n/* harmony import */ var _dict_city_polyphone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dict_city_polyphone */ \"./src/dict_city_polyphone.js\");\n\n\n\n/**\n * 汉字与拼音互转\n *\n * getPinyin - 根据汉字获取拼音\n * getCityPinyin - 获取城市拼音【城市多音字已处理】\n * getHanzi - 单个拼音转汉字\n */\n\n // 汉字与拼音映射表\n\nvar dictWithtone = {}; // 拼音与汉字映射表\n\nvar dictPy2hz = {}; // 声调映射表\n\nvar toneMap = {\n  ā: 'a1',\n  á: 'a2',\n  ǎ: 'a3',\n  à: 'a4',\n  ō: 'o1',\n  ó: 'o2',\n  ǒ: 'o3',\n  ò: 'o4',\n  ē: 'e1',\n  é: 'e2',\n  ě: 'e3',\n  è: 'e4',\n  ī: 'i1',\n  í: 'i2',\n  ǐ: 'i3',\n  ì: 'i4',\n  ū: 'u1',\n  ú: 'u2',\n  ǔ: 'u3',\n  ù: 'u4',\n  ü: 'v0',\n  ǖ: 'v1',\n  ǘ: 'v2',\n  ǚ: 'v3',\n  ǜ: 'v4',\n  ń: 'n2',\n  ň: 'n3',\n  '': 'm2'\n};\n/**\n * 去除拼音中的声调\n *\n * @param {String} pinyin - 需要转换的拼音\n * @returns {String} 去除声调的拼音\n * @example\n *\n * removeTone('xiǎo míng tóng xué');\n * // => xiao ming tong xue\n */\n\nfunction removeTone(pinyin) {\n  return pinyin.replace(/[āáǎàōóǒòēéěèīíǐìūúǔùüǖǘǚǜńň]/g, function (m) {\n    return toneMap[m][0];\n  });\n}\n/**\n * 初始化\n */\n\n\nfunction parseDict() {\n  var temp = _dictionary__WEBPACK_IMPORTED_MODULE_2__[\"default\"].split(',');\n\n  for (var i = 0, len = temp.length; i < len; i++) {\n    _babel_runtime_corejs2_core_js_object_assign__WEBPACK_IMPORTED_MODULE_1___default()(dictWithtone, _babel_runtime_corejs2_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, String.fromCharCode(i + 19968), temp[i]));\n  } // 将字典文件解析成拼音->汉字的结构\n\n\n  var notone = removeTone(_dictionary__WEBPACK_IMPORTED_MODULE_2__[\"default\"]).split(',');\n\n  for (var _i = 0, _len = notone.length; _i < _len; _i++) {\n    _babel_runtime_corejs2_core_js_object_assign__WEBPACK_IMPORTED_MODULE_1___default()(dictPy2hz, _babel_runtime_corejs2_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, notone[_i], (dictPy2hz[notone[_i]] || '') + String.fromCharCode(_i + 19968)));\n  }\n}\n/**\n * 根据汉字获取拼音，如果不是汉字直接返回原字符\n * Unicode字符中4E00(19968)-9FA5(40869)共计20902\n *\n * @param {String} chinese - 汉字\n * @param {String} [splitter=''] - 分隔符\n * @param {Boolean} [withtone=false] - 是否包含声调\n * @returns {String} 汉字对应的拼音\n * @example\n *\n * getPinyin('小明', ' ');\n * // => xiao ming\n *\n * getPinyin('小明', ' ', true);\n * // => xiǎo míng\n *\n * getPinyin('小明plus', ' ');\n * // => xiao ming plus\n */\n\n\nfunction getPinyin(chinese) {\n  var splitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var withtone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  chinese = chinese.trim();\n  var result = [];\n  var noChinese = '';\n\n  for (var i = 0, len = chinese.length; i < len; i++) {\n    var pinyin = dictWithtone[chinese[i]];\n\n    if (pinyin) {\n      // 声调判断\n      if (!withtone) pinyin = removeTone(pinyin); // 非汉字判断\n\n      if (noChinese !== '') {\n        result.push(noChinese);\n        noChinese = '';\n      }\n\n      result.push(pinyin);\n    } else {\n      noChinese += chinese[i];\n    }\n  }\n\n  if (noChinese !== '') {\n    result.push(noChinese);\n    noChinese = '';\n  }\n\n  return result.join(splitter);\n}\n/**\n * 单个拼音转汉字\n *\n * @param {String} pinyin - 单个汉字的拼音，可以包含声调\n * @returns {String} 拼音对应的汉字\n * @example\n *\n * getHanzi('diu');\n * // => 丟丢銩铥颩\n */\n\n\nfunction getHanzi(pinyin) {\n  return dictPy2hz[removeTone(pinyin)] || '';\n}\n/**\n * 获取城市拼音【城市多音字已处理】\n *\n * @param {String} city - 城市\n * @param {String} [splitter=''] - 分隔符\n * @param {Boolean} [withtone=false] - 是否包含声调\n * @returns {String} 城市对应的拼音\n * @example\n *\n * getCityPinyin('重庆市');\n * // => chongqingshi\n *\n * getCityPinyin('西藏', ' ', true);\n * // => xī zhàng\n */\n\n\nfunction getCityPinyin(city) {\n  var splitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var withtone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var cityName = city.split(/(省|特别行政区|自治[区州县]|市|区|县)$/);\n  var polyphone = _dict_city_polyphone__WEBPACK_IMPORTED_MODULE_3__[\"default\"][cityName[0]];\n\n  if (polyphone) {\n    polyphone = polyphone.replace(/,/g, splitter); // 不包含声调\n\n    if (!withtone) {\n      polyphone = removeTone(polyphone);\n    }\n\n    city = \"\".concat(polyphone).concat(cityName[1] || '');\n  }\n\n  return getPinyin(city, splitter, withtone);\n}\n\nparseDict();\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  getPinyin: getPinyin,\n  getCityPinyin: getCityPinyin,\n  getHanzi: getHanzi\n});\n\n//# sourceURL=webpack://pinyinUtil/./src/index.js?");

/***/ })

/******/ });
});